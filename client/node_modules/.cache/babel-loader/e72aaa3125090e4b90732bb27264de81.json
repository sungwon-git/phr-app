{"ast":null,"code":"import _slicedToArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Organization/Results.js\";\nimport React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { Box // Button,\n, Grid // ListItemText,\n// Menu,\n// MenuItem,\n, Typography, makeStyles } from \"@material-ui/core\";\nimport { ToggleButtonGroup, ToggleButton // Pagination\n} from \"@material-ui/lab\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\"; // import ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\n\nimport OrganizationCard from \"src/components/OrganizationCard\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    title: {\n      position: \"relative\",\n      \"&:after\": {\n        position: \"absolute\",\n        bottom: -8,\n        left: 0,\n        content: '\" \"',\n        height: 3,\n        width: 48,\n        backgroundColor: theme.palette.primary.main\n      }\n    },\n    sortButton: {\n      textTransform: \"none\",\n      letterSpacing: 0,\n      marginRight: theme.spacing(2)\n    }\n  };\n});\n\nfunction Results(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      organizations = _ref.organizations,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"organizations\"]);\n\n  var classes = useStyles(); // const sortRef = useRef(null);\n  // const [openSort, setOpenSort] = useState(false);\n  // const [selectedSort, setSelectedSort] = useState(\"Most popular\");\n\n  var _useState = useState(\"grid\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      mode = _useState2[0],\n      setMode = _useState2[1]; // const handleSortOpen = () => {\n  // \tsetOpenSort(true);\n  // };\n  // const handleSortClose = () => {\n  // \tsetOpenSort(false);\n  // };\n  // const handleSortSelect = (value) => {\n  // \tsetSelectedSort(value);\n  // \tsetOpenSort(false);\n  // };\n\n\n  var handleModeChange = function handleModeChange(event, value) {\n    setMode(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n    mb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h5\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, \"Showing \", organizations.length, \" organizations\"), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    exclusive: true,\n    onChange: handleModeChange,\n    size: \"small\",\n    value: mode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ViewModuleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 8\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }\n  }, organizations.map(function (organization) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      key: organization.id,\n      md: mode === \"grid\" ? 4 : 12,\n      sm: mode === \"grid\" ? 6 : 12,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(OrganizationCard, {\n      organization: organization,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }));\n  })));\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  organizations: PropTypes.array.isRequired\n};\nexport default Results;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Organization/Results.js"],"names":["React","useState","useRef","PropTypes","clsx","Box","Grid","Typography","makeStyles","ToggleButtonGroup","ToggleButton","ViewModuleIcon","OrganizationCard","useStyles","theme","root","title","position","bottom","left","content","height","width","backgroundColor","palette","primary","main","sortButton","textTransform","letterSpacing","marginRight","spacing","Results","className","organizations","rest","classes","mode","setMode","handleModeChange","event","value","length","map","organization","id","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport {\n\tBox,\n\t// Button,\n\tGrid,\n\t// ListItemText,\n\t// Menu,\n\t// MenuItem,\n\tTypography,\n\tmakeStyles,\n} from \"@material-ui/core\";\nimport {\n\tToggleButtonGroup,\n\tToggleButton,\n\t// Pagination\n} from \"@material-ui/lab\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\n// import ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport OrganizationCard from \"src/components/OrganizationCard\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {},\n\ttitle: {\n\t\tposition: \"relative\",\n\t\t\"&:after\": {\n\t\t\tposition: \"absolute\",\n\t\t\tbottom: -8,\n\t\t\tleft: 0,\n\t\t\tcontent: '\" \"',\n\t\t\theight: 3,\n\t\t\twidth: 48,\n\t\t\tbackgroundColor: theme.palette.primary.main,\n\t\t},\n\t},\n\tsortButton: {\n\t\ttextTransform: \"none\",\n\t\tletterSpacing: 0,\n\t\tmarginRight: theme.spacing(2),\n\t},\n}));\n\nfunction Results({ className, organizations, ...rest }) {\n\tconst classes = useStyles();\n\t// const sortRef = useRef(null);\n\t// const [openSort, setOpenSort] = useState(false);\n\t// const [selectedSort, setSelectedSort] = useState(\"Most popular\");\n\tconst [mode, setMode] = useState(\"grid\");\n\n\t// const handleSortOpen = () => {\n\t// \tsetOpenSort(true);\n\t// };\n\n\t// const handleSortClose = () => {\n\t// \tsetOpenSort(false);\n\t// };\n\n\t// const handleSortSelect = (value) => {\n\t// \tsetSelectedSort(value);\n\t// \tsetOpenSort(false);\n\t// };\n\n\tconst handleModeChange = (event, value) => {\n\t\tsetMode(value);\n\t};\n\n\treturn (\n\t\t<div className={clsx(classes.root, className)} {...rest}>\n\t\t\t<Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" flexWrap=\"wrap\" mb={2}>\n\t\t\t\t<Typography className={classes.title} variant=\"h5\" color=\"textPrimary\">\n\t\t\t\t\tShowing {organizations.length} organizations\n\t\t\t\t</Typography>\n\t\t\t\t<Box display=\"flex\" alignItems=\"center\">\n\t\t\t\t\t{/* <Button className={classes.sortButton} onClick={handleSortOpen} ref={sortRef}>\n\t\t\t\t\t\t{selectedSort}\n\t\t\t\t\t\t<ArrowDropDownIcon />\n\t\t\t\t\t</Button> */}\n\t\t\t\t\t<ToggleButtonGroup exclusive onChange={handleModeChange} size=\"small\" value={mode}>\n\t\t\t\t\t\t<ToggleButton value=\"grid\">\n\t\t\t\t\t\t\t<ViewModuleIcon />\n\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t</ToggleButtonGroup>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Grid container spacing={3}>\n\t\t\t\t{organizations.map((organization) => (\n\t\t\t\t\t<Grid item key={organization.id} md={mode === \"grid\" ? 4 : 12} sm={mode === \"grid\" ? 6 : 12} xs={12}>\n\t\t\t\t\t\t{/* <ProjectCard project={project} /> */}\n\t\t\t\t\t\t<OrganizationCard organization={organization} />\n\t\t\t\t\t</Grid>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t\t{/* <Box mt={6} display=\"flex\" justifyContent=\"center\">\n\t\t\t\t<Pagination count={3} />\n\t\t\t</Box>\n\t\t\t<Menu anchorEl={sortRef.current} className={classes.menu} onClose={handleSortClose} open={openSort} elevation={1}>\n\t\t\t\t{[\"Most recent\", \"Popular\", \"Price high\", \"Price low\", \"On sale\"].map((option) => (\n\t\t\t\t\t<MenuItem key={option} onClick={() => handleSortSelect(option)}>\n\t\t\t\t\t\t<ListItemText primary={option} />\n\t\t\t\t\t</MenuItem>\n\t\t\t\t))}\n\t\t\t</Menu> */}\n\t\t</div>\n\t);\n}\n\nResults.propTypes = {\n\tclassName: PropTypes.string,\n\torganizations: PropTypes.array.isRequired,\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}