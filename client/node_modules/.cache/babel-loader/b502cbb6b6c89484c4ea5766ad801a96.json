{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/auth/LoginView/LoginForm.js\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport * as Yup from \"yup\";\nimport PropTypes from \"prop-types\";\nimport { Formik } from \"formik\";\nimport { Box, Button, TextField, FormHelperText, makeStyles } from \"@material-ui/core\";\nimport { login } from \"src/actions/accountActions\";\nvar useStyles = makeStyles(function () {\n  return {\n    root: {}\n  };\n});\n\nfunction LoginForm(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      onSubmitSuccess = _ref.onSubmitSuccess,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"onSubmitSuccess\"]);\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"phr@healthdata.com\",\n      password: \"guest\"\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email(\"Must be a valid email\").max(255).required(\"Email is required\"),\n      password: Yup.string().max(255).required(\"Password is required\")\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var setErrors, setStatus, setSubmitting, message;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref2.setErrors, setStatus = _ref2.setStatus, setSubmitting = _ref2.setSubmitting;\n                _context.prev = 1;\n                _context.next = 4;\n                return dispatch(login(values.email, values.password));\n\n              case 4:\n                onSubmitSuccess();\n                _context.next = 13;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                message = _context.t0.response && _context.t0.response.data.message || \"Something went wrong\";\n                setStatus({\n                  success: false\n                });\n                setErrors({\n                  submit: message\n                });\n                setSubmitting(false);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, function (_ref4) {\n    var errors = _ref4.errors,\n        handleBlur = _ref4.handleBlur,\n        handleChange = _ref4.handleChange,\n        handleSubmit = _ref4.handleSubmit,\n        isSubmitting = _ref4.isSubmitting,\n        touched = _ref4.touched,\n        values = _ref4.values;\n    return /*#__PURE__*/React.createElement(\"form\", Object.assign({\n      noValidate: true,\n      className: clsx(classes.root, className),\n      onSubmit: handleSubmit\n    }, rest, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.email && errors.email),\n      fullWidth: true,\n      autoFocus: true,\n      helperText: touched.email && errors.email,\n      label: \"Email Address\",\n      margin: \"normal\",\n      name: \"email\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"email\",\n      value: values.email,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.password && errors.password),\n      fullWidth: true,\n      helperText: touched.password && errors.password,\n      label: \"Password\",\n      margin: \"normal\",\n      name: \"password\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"password\",\n      value: values.password,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      disabled: isSubmitting,\n      fullWidth: true,\n      size: \"large\",\n      type: \"submit\",\n      variant: \"contained\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, \"Log In\"), errors.submit && /*#__PURE__*/React.createElement(Box, {\n      mt: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(FormHelperText, {\n      error: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, errors.submit))));\n  });\n}\n\nLoginForm.propTypes = {\n  className: PropTypes.string,\n  onSubmitSuccess: PropTypes.func\n};\nLoginForm.defaultProps = {\n  onSubmitSuccess: function onSubmitSuccess() {}\n};\nexport default LoginForm;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/auth/LoginView/LoginForm.js"],"names":["React","useDispatch","clsx","Yup","PropTypes","Formik","Box","Button","TextField","FormHelperText","makeStyles","login","useStyles","root","LoginForm","className","onSubmitSuccess","rest","classes","dispatch","email","password","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","message","response","data","success","submit","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","propTypes","func","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport * as Yup from \"yup\";\nimport PropTypes from \"prop-types\";\nimport { Formik } from \"formik\";\nimport { Box, Button, TextField, FormHelperText, makeStyles } from \"@material-ui/core\";\nimport { login } from \"src/actions/accountActions\";\n\nconst useStyles = makeStyles(() => ({\n\troot: {},\n}));\n\nfunction LoginForm({ className, onSubmitSuccess, ...rest }) {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\temail: \"phr@healthdata.com\",\n\t\t\t\tpassword: \"guest\",\n\t\t\t}}\n\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\temail: Yup.string()\n\t\t\t\t\t.email(\"Must be a valid email\")\n\t\t\t\t\t.max(255)\n\t\t\t\t\t.required(\"Email is required\"),\n\t\t\t\tpassword: Yup.string()\n\t\t\t\t\t.max(255)\n\t\t\t\t\t.required(\"Password is required\"),\n\t\t\t})}\n\t\t\tonSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(login(values.email, values.password));\n\t\t\t\t\tonSubmitSuccess();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconst message = (error.response && error.response.data.message) || \"Something went wrong\";\n\n\t\t\t\t\tsetStatus({ success: false });\n\t\t\t\t\tsetErrors({ submit: message });\n\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n\t\t\t\t<form noValidate className={clsx(classes.root, className)} onSubmit={handleSubmit} {...rest}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\terror={Boolean(touched.email && errors.email)}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\thelperText={touched.email && errors.email}\n\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\terror={Boolean(touched.password && errors.password)}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\thelperText={touched.password && errors.password}\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Box mt={2}>\n\t\t\t\t\t\t<Button color=\"secondary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\">\n\t\t\t\t\t\t\tLog In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{errors.submit && (\n\t\t\t\t\t\t\t<Box mt={3}>\n\t\t\t\t\t\t\t\t<FormHelperText error>{errors.submit}</FormHelperText>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Box>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n}\n\nLoginForm.propTypes = {\n\tclassName: PropTypes.string,\n\tonSubmitSuccess: PropTypes.func,\n};\n\nLoginForm.defaultProps = {\n\tonSubmitSuccess: () => {},\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}