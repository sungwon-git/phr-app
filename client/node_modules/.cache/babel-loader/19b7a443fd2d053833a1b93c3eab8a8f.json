{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/kanban/KanbanView/index.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useSnackbar } from 'notistack';\nimport { Box, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { getBoard, moveCard } from 'src/actions/kanbanActions';\nimport Header from './Header';\nimport List from './List';\nimport ListAdd from './ListAdd';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      backgroundColor: theme.palette.background.dark,\n      height: '100%',\n      display: 'flex',\n      overflow: 'hidden',\n      flexDirection: 'column'\n    },\n    content: {\n      flexGrow: 1,\n      flexShrink: 1,\n      display: 'flex',\n      overflowY: 'hidden',\n      overflowX: 'auto'\n    },\n    inner: {\n      display: 'flex',\n      paddingBottom: theme.spacing(3),\n      paddingTop: theme.spacing(3),\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1)\n    }\n  };\n});\n\nfunction KanbanView() {\n  var _this = this;\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.kanban;\n  }),\n      lists = _useSelector.lists,\n      isLoaded = _useSelector.isLoaded;\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var handleDragEnd = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var source, destination, draggableId;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              source = _ref.source, destination = _ref.destination, draggableId = _ref.draggableId;\n              _context.prev = 1;\n\n              if (destination) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              if (!(source.droppableId === destination.droppableId && source.index === destination.index)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 6:\n              if (!(source.droppableId === destination.droppableId)) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 9;\n              return dispatch(moveCard(draggableId, destination.index));\n\n            case 9:\n              _context.next = 13;\n              break;\n\n            case 11:\n              _context.next = 13;\n              return dispatch(moveCard(draggableId, destination.index, destination.droppableId));\n\n            case 13:\n              enqueueSnackbar('Card moved', {\n                variant: 'success'\n              });\n              _context.next = 18;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 16]]);\n    }));\n\n    return function handleDragEnd(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    dispatch(getBoard());\n  }, [dispatch]);\n\n  if (!isLoaded) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Kanban Board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, lists.allIds.map(function (listId) {\n    return /*#__PURE__*/React.createElement(List, {\n      className: classes.list,\n      key: listId,\n      listId: listId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    });\n  }), /*#__PURE__*/React.createElement(ListAdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default KanbanView;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/kanban/KanbanView/index.js"],"names":["React","useEffect","useDispatch","useSelector","DragDropContext","useSnackbar","Box","makeStyles","Page","getBoard","moveCard","Header","List","ListAdd","useStyles","theme","root","backgroundColor","palette","background","dark","height","display","overflow","flexDirection","content","flexGrow","flexShrink","overflowY","overflowX","inner","paddingBottom","spacing","paddingTop","paddingLeft","paddingRight","KanbanView","classes","dispatch","state","kanban","lists","isLoaded","enqueueSnackbar","handleDragEnd","source","destination","draggableId","droppableId","index","variant","allIds","map","listId","list"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useSnackbar } from 'notistack';\nimport { Box, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { getBoard, moveCard } from 'src/actions/kanbanActions';\nimport Header from './Header';\nimport List from './List';\nimport ListAdd from './ListAdd';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column'\n  },\n  content: {\n    flexGrow: 1,\n    flexShrink: 1,\n    display: 'flex',\n    overflowY: 'hidden',\n    overflowX: 'auto'\n  },\n  inner: {\n    display: 'flex',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  }\n}));\n\nfunction KanbanView() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { lists, isLoaded } = useSelector((state) => state.kanban);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleDragEnd = async ({ source, destination, draggableId }) => {\n    try {\n    // Dropped outside the list\n      if (!destination) {\n        return;\n      }\n\n      // Card has not been moved\n      if (source.droppableId === destination.droppableId\n        && source.index === destination.index\n      ) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n      // Moved to the same list on diferent position\n        await dispatch(moveCard(draggableId, destination.index));\n      } else {\n      // Moved to another list\n        await dispatch(moveCard(draggableId, destination.index, destination.droppableId));\n      }\n\n      enqueueSnackbar('Card moved', {\n        variant: 'success'\n      });\n    } catch (error) {\n      //\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getBoard());\n  }, [dispatch]);\n\n  if (!isLoaded) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Kanban Board\"\n    >\n      <Box p={3}>\n        <Header />\n      </Box>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <div className={classes.content}>\n          <div className={classes.inner}>\n            {lists.allIds.map((listId) => (\n              <List\n                className={classes.list}\n                key={listId}\n                listId={listId}\n              />\n            ))}\n            <ListAdd />\n          </div>\n        </div>\n      </DragDropContext>\n    </Page>\n  );\n}\n\nexport default KanbanView;\n"]},"metadata":{},"sourceType":"module"}