{"ast":null,"code":"import _toConsumableArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/* eslint-disable no-param-reassign */\nimport produce from 'immer';\nimport _ from 'lodash';\nimport { GET_BOARD, CREATE_LIST, UPDATE_LIST, CLEAR_LIST, DELETE_LIST, CREATE_CARD, UPDATE_CARD, MOVE_CARD, DELETE_CARD, ADD_COMMENT, ADD_CHECKLIST, UPDATE_CHECKLIST, DELETE_CHECKLIST, ADD_CHECK_ITEM, UPDATE_CHECK_ITEM, DELETE_CHECK_ITEM } from 'src/actions/kanbanActions';\nimport objFromArray from 'src/utils/objFromArray';\nvar initialState = {\n  isLoaded: false,\n  lists: {\n    byId: {},\n    allIds: []\n  },\n  cards: {\n    byId: {},\n    allIds: []\n  },\n  members: {\n    byId: {},\n    allIds: []\n  }\n};\n\nvar kanbanReducer = function kanbanReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_BOARD:\n      {\n        var board = action.payload.board;\n        return produce(state, function (draft) {\n          draft.lists.byId = objFromArray(board.lists);\n          draft.lists.allIds = Object.keys(draft.lists.byId);\n          draft.cards.byId = objFromArray(board.cards);\n          draft.cards.allIds = Object.keys(draft.cards.byId);\n          draft.members.byId = objFromArray(board.members);\n          draft.members.allIds = Object.keys(draft.members.byId);\n          draft.isLoaded = true;\n        });\n      }\n\n    case CREATE_LIST:\n      {\n        var list = action.payload.list;\n        return produce(state, function (draft) {\n          draft.lists.byId[list.id] = list;\n          draft.lists.allIds.push(list.id);\n        });\n      }\n\n    case UPDATE_LIST:\n      {\n        var _list = action.payload.list;\n        return produce(state, function (draft) {\n          _.merge(draft.lists.byId[_list.id], _list);\n        });\n      }\n\n    case CLEAR_LIST:\n      {\n        var listId = action.payload.listId;\n        return produce(state, function (draft) {\n          var cardIds = draft.lists.byId[listId].cardIds;\n          draft.lists.byId[listId].cardIds = [];\n          draft.cards.byId = _.omit(draft.cards.byId, cardIds);\n\n          _.pull.apply(_, [draft.cards.allIds].concat(_toConsumableArray(cardIds)));\n        });\n      }\n\n    case DELETE_LIST:\n      {\n        var _listId = action.payload.listId;\n        return produce(state, function (draft) {\n          draft.lists.byId = _.omit(draft.lists.byId, _listId);\n\n          _.pull(draft.lists.allIds, _listId);\n        });\n      }\n\n    case CREATE_CARD:\n      {\n        var card = action.payload.card;\n        return produce(state, function (draft) {\n          draft.cards.byId[card.id] = card;\n          draft.cards.allIds.push(card.id);\n          draft.lists.byId[card.listId].cardIds.push(card.id);\n        });\n      }\n\n    case UPDATE_CARD:\n      {\n        var _card = action.payload.card;\n        return produce(state, function (draft) {\n          _.merge(draft.cards.byId[_card.id], _card);\n        });\n      }\n\n    case MOVE_CARD:\n      {\n        var _action$payload = action.payload,\n            cardId = _action$payload.cardId,\n            position = _action$payload.position,\n            _listId2 = _action$payload.listId;\n        return produce(state, function (draft) {\n          var sourceListId = draft.cards.byId[cardId].listId; // Remove card from source list\n\n          _.pull(draft.lists.byId[sourceListId].cardIds, cardId); // If listId arg exists, it means that\n          // we have to add the card to the new list\n\n\n          if (_listId2) {\n            draft.cards.byId[cardId].listId = _listId2;\n\n            draft.lists.byId[_listId2].cardIds.splice(position, 0, cardId);\n          } else {\n            draft.lists.byId[sourceListId].cardIds.splice(position, 0, cardId);\n          }\n        });\n      }\n\n    case DELETE_CARD:\n      {\n        var _cardId = action.payload.cardId;\n        return produce(state, function (draft) {\n          var listId = draft.cards.byId[_cardId].listId;\n          draft.cards.byId = _.omit(draft.cards.byId, _cardId);\n\n          _.pull(draft.cards.allIds, _cardId);\n\n          _.pull(draft.lists.byId[listId].cardIds, _cardId);\n        });\n      }\n\n    case ADD_COMMENT:\n      {\n        var comment = action.payload.comment;\n        return produce(state, function (draft) {\n          draft.cards.byId[comment.cardId].comments.push(comment);\n        });\n      }\n\n    case ADD_CHECKLIST:\n      {\n        var _action$payload2 = action.payload,\n            _cardId2 = _action$payload2.cardId,\n            checklist = _action$payload2.checklist;\n        return produce(state, function (draft) {\n          draft.cards.byId[_cardId2].checklists.push(checklist);\n        });\n      }\n\n    case UPDATE_CHECKLIST:\n      {\n        var _action$payload3 = action.payload,\n            _cardId3 = _action$payload3.cardId,\n            _checklist2 = _action$payload3.checklist;\n        return produce(state, function (draft) {\n          var card = draft.cards.byId[_cardId3];\n          card.checklists = _.map(card.checklists, function (_checklist) {\n            if (_checklist.id === _checklist2.id) {\n              return _checklist2;\n            }\n\n            return _checklist;\n          });\n        });\n      }\n\n    case DELETE_CHECKLIST:\n      {\n        var _action$payload4 = action.payload,\n            _cardId4 = _action$payload4.cardId,\n            checklistId = _action$payload4.checklistId;\n        return produce(state, function (draft) {\n          var card = draft.cards.byId[_cardId4];\n          card.checklists = _.reject(card.checklists, {\n            id: checklistId\n          });\n        });\n      }\n\n    case ADD_CHECK_ITEM:\n      {\n        var _action$payload5 = action.payload,\n            _cardId5 = _action$payload5.cardId,\n            _checklistId = _action$payload5.checklistId,\n            checkItem = _action$payload5.checkItem;\n        return produce(state, function (draft) {\n          var card = draft.cards.byId[_cardId5];\n\n          _.assign(card, {\n            checklists: _.map(card.checklists, function (checklist) {\n              if (checklist.id === _checklistId) {\n                _.assign(checklist, {\n                  checkItems: [].concat(_toConsumableArray(checklist.checkItems), [checkItem])\n                });\n              }\n\n              return checklist;\n            })\n          });\n        });\n      }\n\n    case UPDATE_CHECK_ITEM:\n      {\n        var _action$payload6 = action.payload,\n            _cardId6 = _action$payload6.cardId,\n            _checklistId2 = _action$payload6.checklistId,\n            checkItemId = _action$payload6.checkItemId,\n            _checkItem2 = _action$payload6.checkItem;\n        return produce(state, function (draft) {\n          var card = draft.cards.byId[_cardId6];\n          card.checklists = _.map(card.checklists, function (checklist) {\n            if (checklist.id === _checklistId2) {\n              _.assign(checklist, {\n                checkItems: _.map(checklist.checkItems, function (_checkItem) {\n                  if (_checkItem.id === checkItemId) {\n                    return _checkItem2;\n                  }\n\n                  return _checkItem;\n                })\n              });\n            }\n\n            return checklist;\n          });\n        });\n      }\n\n    case DELETE_CHECK_ITEM:\n      {\n        var _action$payload7 = action.payload,\n            _cardId7 = _action$payload7.cardId,\n            _checklistId3 = _action$payload7.checklistId,\n            _checkItemId = _action$payload7.checkItemId;\n        return produce(state, function (draft) {\n          var card = draft.cards.byId[_cardId7];\n          card.checklists = _.map(card.checklists, function (checklist) {\n            if (checklist.id === _checklistId3) {\n              _.assign(checklist, {\n                checkItems: _.reject(checklist.checkItems, {\n                  id: _checkItemId\n                })\n              });\n            }\n\n            return checklist;\n          });\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default kanbanReducer;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/reducers/kanbanReducer.js"],"names":["produce","_","GET_BOARD","CREATE_LIST","UPDATE_LIST","CLEAR_LIST","DELETE_LIST","CREATE_CARD","UPDATE_CARD","MOVE_CARD","DELETE_CARD","ADD_COMMENT","ADD_CHECKLIST","UPDATE_CHECKLIST","DELETE_CHECKLIST","ADD_CHECK_ITEM","UPDATE_CHECK_ITEM","DELETE_CHECK_ITEM","objFromArray","initialState","isLoaded","lists","byId","allIds","cards","members","kanbanReducer","state","action","type","board","payload","draft","Object","keys","list","id","push","merge","listId","cardIds","omit","pull","card","cardId","position","sourceListId","splice","comment","comments","checklist","checklists","map","_checklist","checklistId","reject","checkItem","assign","checkItems","checkItemId","_checkItem"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport produce from 'immer';\nimport _ from 'lodash';\nimport {\n  GET_BOARD,\n  CREATE_LIST,\n  UPDATE_LIST,\n  CLEAR_LIST,\n  DELETE_LIST,\n  CREATE_CARD,\n  UPDATE_CARD,\n  MOVE_CARD,\n  DELETE_CARD,\n  ADD_COMMENT,\n  ADD_CHECKLIST,\n  UPDATE_CHECKLIST,\n  DELETE_CHECKLIST,\n  ADD_CHECK_ITEM,\n  UPDATE_CHECK_ITEM,\n  DELETE_CHECK_ITEM\n} from 'src/actions/kanbanActions';\nimport objFromArray from 'src/utils/objFromArray';\n\nconst initialState = {\n  isLoaded: false,\n  lists: {\n    byId: {},\n    allIds: []\n  },\n  cards: {\n    byId: {},\n    allIds: []\n  },\n  members: {\n    byId: {},\n    allIds: []\n  }\n};\n\nconst kanbanReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_BOARD: {\n      const { board } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.lists.byId = objFromArray(board.lists);\n        draft.lists.allIds = Object.keys(draft.lists.byId);\n        draft.cards.byId = objFromArray(board.cards);\n        draft.cards.allIds = Object.keys(draft.cards.byId);\n        draft.members.byId = objFromArray(board.members);\n        draft.members.allIds = Object.keys(draft.members.byId);\n        draft.isLoaded = true;\n      });\n    }\n\n    case CREATE_LIST: {\n      const { list } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.lists.byId[list.id] = list;\n        draft.lists.allIds.push(list.id);\n      });\n    }\n\n    case UPDATE_LIST: {\n      const { list } = action.payload;\n\n      return produce(state, (draft) => {\n        _.merge(draft.lists.byId[list.id], list);\n      });\n    }\n\n    case CLEAR_LIST: {\n      const { listId } = action.payload;\n\n      return produce(state, (draft) => {\n        const { cardIds } = draft.lists.byId[listId];\n\n        draft.lists.byId[listId].cardIds = [];\n        draft.cards.byId = _.omit(draft.cards.byId, cardIds);\n        _.pull(draft.cards.allIds, ...cardIds);\n      });\n    }\n\n    case DELETE_LIST: {\n      const { listId } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.lists.byId = _.omit(draft.lists.byId, listId);\n        _.pull(draft.lists.allIds, listId);\n      });\n    }\n\n    case CREATE_CARD: {\n      const { card } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.cards.byId[card.id] = card;\n        draft.cards.allIds.push(card.id);\n        draft.lists.byId[card.listId].cardIds.push(card.id);\n      });\n    }\n\n    case UPDATE_CARD: {\n      const { card } = action.payload;\n\n      return produce(state, (draft) => {\n        _.merge(draft.cards.byId[card.id], card);\n      });\n    }\n\n    case MOVE_CARD: {\n      const { cardId, position, listId } = action.payload;\n\n      return produce(state, (draft) => {\n        const { listId: sourceListId } = draft.cards.byId[cardId];\n\n        // Remove card from source list\n        _.pull(draft.lists.byId[sourceListId].cardIds, cardId);\n\n        // If listId arg exists, it means that\n        // we have to add the card to the new list\n        if (listId) {\n          draft.cards.byId[cardId].listId = listId;\n          draft.lists.byId[listId].cardIds.splice(position, 0, cardId);\n        } else {\n          draft.lists.byId[sourceListId].cardIds.splice(position, 0, cardId);\n        }\n      });\n    }\n\n    case DELETE_CARD: {\n      const { cardId } = action.payload;\n\n      return produce(state, (draft) => {\n        const { listId } = draft.cards.byId[cardId];\n\n        draft.cards.byId = _.omit(draft.cards.byId, cardId);\n        _.pull(draft.cards.allIds, cardId);\n        _.pull(draft.lists.byId[listId].cardIds, cardId);\n      });\n    }\n\n    case ADD_COMMENT: {\n      const { comment } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.cards.byId[comment.cardId].comments.push(comment);\n      });\n    }\n\n    case ADD_CHECKLIST: {\n      const { cardId, checklist } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.cards.byId[cardId].checklists.push(checklist);\n      });\n    }\n\n    case UPDATE_CHECKLIST: {\n      const { cardId, checklist } = action.payload;\n\n      return produce(state, (draft) => {\n        const card = draft.cards.byId[cardId];\n\n        card.checklists = _.map(card.checklists, (_checklist) => {\n          if (_checklist.id === checklist.id) {\n            return checklist;\n          }\n\n          return _checklist;\n        });\n      });\n    }\n\n    case DELETE_CHECKLIST: {\n      const { cardId, checklistId } = action.payload;\n\n      return produce(state, (draft) => {\n        const card = draft.cards.byId[cardId];\n\n        card.checklists = _.reject(card.checklists, { id: checklistId });\n      });\n    }\n\n    case ADD_CHECK_ITEM: {\n      const { cardId, checklistId, checkItem } = action.payload;\n\n      return produce(state, (draft) => {\n        const card = draft.cards.byId[cardId];\n\n        _.assign(card, {\n          checklists: _.map(card.checklists, (checklist) => {\n            if (checklist.id === checklistId) {\n              _.assign(checklist, {\n                checkItems: [...checklist.checkItems, checkItem]\n              });\n            }\n\n            return checklist;\n          })\n        });\n      });\n    }\n\n    case UPDATE_CHECK_ITEM: {\n      const {\n        cardId,\n        checklistId,\n        checkItemId,\n        checkItem\n      } = action.payload;\n\n      return produce(state, (draft) => {\n        const card = draft.cards.byId[cardId];\n\n        card.checklists = _.map(card.checklists, (checklist) => {\n          if (checklist.id === checklistId) {\n            _.assign(checklist, {\n              checkItems: _.map(checklist.checkItems, (_checkItem) => {\n                if (_checkItem.id === checkItemId) {\n                  return checkItem;\n                }\n\n                return _checkItem;\n              })\n            });\n          }\n\n          return checklist;\n        });\n      });\n    }\n\n    case DELETE_CHECK_ITEM: {\n      const { cardId, checklistId, checkItemId } = action.payload;\n\n      return produce(state, (draft) => {\n        const card = draft.cards.byId[cardId];\n\n        card.checklists = _.map(card.checklists, (checklist) => {\n          if (checklist.id === checklistId) {\n            _.assign(checklist, {\n              checkItems: _.reject(checklist.checkItems, { id: checkItemId })\n            });\n          }\n\n          return checklist;\n        });\n      });\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default kanbanReducer;\n"]},"metadata":{},"sourceType":"module"}