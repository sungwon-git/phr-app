{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport produce from 'immer';\nimport { GET_LABELS, GET_MAILS, GET_MAIL, OPEN_SIDEBAR, CLOSE_SIDEBAR, OPEN_NEW_MESSAGE, CLOSE_NEW_MESSAGE } from 'src/actions/mailActions';\nimport objFromArray from 'src/utils/objFromArray';\nvar initialState = {\n  mails: {\n    byId: {},\n    allIds: []\n  },\n  labels: [],\n  sidebarOpen: false,\n  newMessageOpen: false\n};\n\nvar mailReducer = function mailReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_LABELS:\n      {\n        var labels = action.payload.labels;\n        return produce(state, function (draft) {\n          draft.labels = labels;\n        });\n      }\n\n    case GET_MAILS:\n      {\n        var mails = action.payload.mails;\n        return produce(state, function (draft) {\n          draft.mails.byId = objFromArray(mails);\n          draft.mails.allIds = Object.keys(draft.mails.byId);\n        });\n      }\n\n    case GET_MAIL:\n      {\n        var mail = action.payload.mail;\n        return produce(state, function (draft) {\n          draft.mails.byId[mail.id] = mail;\n\n          if (!draft.mails.allIds.includes(mail.id)) {\n            draft.mails.allIds.push(mail.id);\n          }\n        });\n      }\n\n    case OPEN_SIDEBAR:\n      {\n        return produce(state, function (draft) {\n          draft.sidebarOpen = true;\n        });\n      }\n\n    case CLOSE_SIDEBAR:\n      {\n        return produce(state, function (draft) {\n          draft.sidebarOpen = false;\n        });\n      }\n\n    case OPEN_NEW_MESSAGE:\n      {\n        return produce(state, function (draft) {\n          draft.newMessageOpen = true;\n        });\n      }\n\n    case CLOSE_NEW_MESSAGE:\n      {\n        return produce(state, function (draft) {\n          draft.newMessageOpen = false;\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default mailReducer;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/reducers/mailReducer.js"],"names":["produce","GET_LABELS","GET_MAILS","GET_MAIL","OPEN_SIDEBAR","CLOSE_SIDEBAR","OPEN_NEW_MESSAGE","CLOSE_NEW_MESSAGE","objFromArray","initialState","mails","byId","allIds","labels","sidebarOpen","newMessageOpen","mailReducer","state","action","type","payload","draft","Object","keys","mail","id","includes","push"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,OAApB;AACA,SACEC,UADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,gBANF,EAOEC,iBAPF,QAQO,yBARP;AASA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,EADD;AAELC,IAAAA,MAAM,EAAE;AAFH,GADY;AAKnBC,EAAAA,MAAM,EAAE,EALW;AAMnBC,EAAAA,WAAW,EAAE,KANM;AAOnBC,EAAAA,cAAc,EAAE;AAPG,CAArB;;AAUA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,UAAL;AAAiB;AACf,YAAQY,MAAR,GAAmBK,MAAM,CAACE,OAA1B,CAAQP,MAAR;AAEA,eAAOb,OAAO,CAACiB,KAAD,EAAQ,UAACI,KAAD,EAAW;AAC/BA,UAAAA,KAAK,CAACR,MAAN,GAAeA,MAAf;AACD,SAFa,CAAd;AAGD;;AAED,SAAKX,SAAL;AAAgB;AACd,YAAQQ,KAAR,GAAkBQ,MAAM,CAACE,OAAzB,CAAQV,KAAR;AAEA,eAAOV,OAAO,CAACiB,KAAD,EAAQ,UAACI,KAAD,EAAW;AAC/BA,UAAAA,KAAK,CAACX,KAAN,CAAYC,IAAZ,GAAmBH,YAAY,CAACE,KAAD,CAA/B;AACAW,UAAAA,KAAK,CAACX,KAAN,CAAYE,MAAZ,GAAqBU,MAAM,CAACC,IAAP,CAAYF,KAAK,CAACX,KAAN,CAAYC,IAAxB,CAArB;AACD,SAHa,CAAd;AAID;;AAED,SAAKR,QAAL;AAAe;AACb,YAAQqB,IAAR,GAAiBN,MAAM,CAACE,OAAxB,CAAQI,IAAR;AAEA,eAAOxB,OAAO,CAACiB,KAAD,EAAQ,UAACI,KAAD,EAAW;AAC/BA,UAAAA,KAAK,CAACX,KAAN,CAAYC,IAAZ,CAAiBa,IAAI,CAACC,EAAtB,IAA4BD,IAA5B;;AAEA,cAAI,CAACH,KAAK,CAACX,KAAN,CAAYE,MAAZ,CAAmBc,QAAnB,CAA4BF,IAAI,CAACC,EAAjC,CAAL,EAA2C;AACzCJ,YAAAA,KAAK,CAACX,KAAN,CAAYE,MAAZ,CAAmBe,IAAnB,CAAwBH,IAAI,CAACC,EAA7B;AACD;AACF,SANa,CAAd;AAOD;;AAED,SAAKrB,YAAL;AAAmB;AACjB,eAAOJ,OAAO,CAACiB,KAAD,EAAQ,UAACI,KAAD,EAAW;AAC/BA,UAAAA,KAAK,CAACP,WAAN,GAAoB,IAApB;AACD,SAFa,CAAd;AAGD;;AAED,SAAKT,aAAL;AAAoB;AAClB,eAAOL,OAAO,CAACiB,KAAD,EAAQ,UAACI,KAAD,EAAW;AAC/BA,UAAAA,KAAK,CAACP,WAAN,GAAoB,KAApB;AACD,SAFa,CAAd;AAGD;;AAED,SAAKR,gBAAL;AAAuB;AACrB,eAAON,OAAO,CAACiB,KAAD,EAAQ,UAACI,KAAD,EAAW;AAC/BA,UAAAA,KAAK,CAACN,cAAN,GAAuB,IAAvB;AACD,SAFa,CAAd;AAGD;;AAED,SAAKR,iBAAL;AAAwB;AACtB,eAAOP,OAAO,CAACiB,KAAD,EAAQ,UAACI,KAAD,EAAW;AAC/BA,UAAAA,KAAK,CAACN,cAAN,GAAuB,KAAvB;AACD,SAFa,CAAd;AAGD;;AAED;AAAS;AACP,eAAOE,KAAP;AACD;AAxDH;AA0DD,CA3DD;;AA6DA,eAAeD,WAAf","sourcesContent":["/* eslint-disable no-param-reassign */\nimport produce from 'immer';\nimport {\n  GET_LABELS,\n  GET_MAILS,\n  GET_MAIL,\n  OPEN_SIDEBAR,\n  CLOSE_SIDEBAR,\n  OPEN_NEW_MESSAGE,\n  CLOSE_NEW_MESSAGE\n} from 'src/actions/mailActions';\nimport objFromArray from 'src/utils/objFromArray';\n\nconst initialState = {\n  mails: {\n    byId: {},\n    allIds: []\n  },\n  labels: [],\n  sidebarOpen: false,\n  newMessageOpen: false\n};\n\nconst mailReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LABELS: {\n      const { labels } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.labels = labels;\n      });\n    }\n\n    case GET_MAILS: {\n      const { mails } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.mails.byId = objFromArray(mails);\n        draft.mails.allIds = Object.keys(draft.mails.byId);\n      });\n    }\n\n    case GET_MAIL: {\n      const { mail } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.mails.byId[mail.id] = mail;\n\n        if (!draft.mails.allIds.includes(mail.id)) {\n          draft.mails.allIds.push(mail.id);\n        }\n      });\n    }\n\n    case OPEN_SIDEBAR: {\n      return produce(state, (draft) => {\n        draft.sidebarOpen = true;\n      });\n    }\n\n    case CLOSE_SIDEBAR: {\n      return produce(state, (draft) => {\n        draft.sidebarOpen = false;\n      });\n    }\n\n    case OPEN_NEW_MESSAGE: {\n      return produce(state, (draft) => {\n        draft.newMessageOpen = true;\n      });\n    }\n\n    case CLOSE_NEW_MESSAGE: {\n      return produce(state, (draft) => {\n        draft.newMessageOpen = false;\n      });\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default mailReducer;\n"]},"metadata":{},"sourceType":"module"}