{"ast":null,"code":"import _slicedToArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Records/FinancialStats/index.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Box, Card, CardHeader, Divider, makeStyles } from \"@material-ui/core\"; // import GenericMoreButton from \"src/components/GenericMoreButton\";\n\nimport Chart from \"./Chart\";\nimport useIsMountedRef from \"src/hooks/useIsMountedRef\";\nvar useStyles = makeStyles(function () {\n  return {\n    root: {},\n    chart: {\n      height: 400\n    }\n  };\n});\n\nfunction FinancialStats(_ref) {\n  var className = _ref.className,\n      organizations = _ref.organizations,\n      count_1 = _ref.count_1,\n      count_2 = _ref.count_2,\n      count_3 = _ref.count_3,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"organizations\", \"count_1\", \"count_2\", \"count_3\"]);\n\n  var classes = useStyles();\n  var isMountedRef = useIsMountedRef(); // const stats = {\n  // \tthisYear: [18, 16, 5, 8, 3, 14, 14, 16, 17, 19, 18, 20],\n  // \tlastYear: [12, 11, 4, 6, 2, 9, 9, 10, 11, 12, 13, 13],\n  // };\n\n  var stats = [count_1, count_2, count_3];\n  var labels = [// 'Jan',\n    // 'Feb',\n    // 'Mar',\n    // 'Apr',\n    // 'May',\n    // 'Jun',\n    // 'Jul',\n    // 'Aug',\n    // 'Sep',\n    // 'Oct',\n    // 'Nov',\n    // 'Dec'\n  ];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      titles = _useState2[0],\n      setTitles = _useState2[1]; // console.log(titles);\n\n\n  var getTitles = useCallback(function () {\n    if (isMountedRef.current) {\n      setTitles(organizations);\n    }\n  }, [isMountedRef]);\n  useEffect(function () {\n    getTitles();\n  }, [getTitles]);\n  titles.map(function (title) {\n    labels.push(title.title);\n  });\n  console.log(0, labels, stats);\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Financial Stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 700,\n    pt: 4,\n    pr: 2,\n    pl: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    className: classes.chart,\n    data: stats,\n    labels: labels,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }\n  }))));\n}\n\nFinancialStats.propTypes = {\n  className: PropTypes.string\n};\nexport default FinancialStats;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Records/FinancialStats/index.js"],"names":["React","useState","useEffect","useCallback","clsx","PropTypes","PerfectScrollbar","Box","Card","CardHeader","Divider","makeStyles","Chart","useIsMountedRef","useStyles","root","chart","height","FinancialStats","className","organizations","count_1","count_2","count_3","rest","classes","isMountedRef","stats","labels","titles","setTitles","getTitles","current","map","title","push","console","log","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Box, Card, CardHeader, Divider, makeStyles } from \"@material-ui/core\";\n// import GenericMoreButton from \"src/components/GenericMoreButton\";\nimport Chart from \"./Chart\";\nimport useIsMountedRef from \"src/hooks/useIsMountedRef\";\n\nconst useStyles = makeStyles(() => ({\n\troot: {},\n\tchart: {\n\t\theight: 400,\n\t},\n}));\n\nfunction FinancialStats({ className, organizations, count_1, count_2, count_3, ...rest }) {\n\tconst classes = useStyles();\n\tconst isMountedRef = useIsMountedRef();\n\t// const stats = {\n\t// \tthisYear: [18, 16, 5, 8, 3, 14, 14, 16, 17, 19, 18, 20],\n\t// \tlastYear: [12, 11, 4, 6, 2, 9, 9, 10, 11, 12, 13, 13],\n\t// };\n\n\tconst stats = [count_1, count_2, count_3];\n\tconst labels = [\n\t\t// 'Jan',\n\t\t// 'Feb',\n\t\t// 'Mar',\n\t\t// 'Apr',\n\t\t// 'May',\n\t\t// 'Jun',\n\t\t// 'Jul',\n\t\t// 'Aug',\n\t\t// 'Sep',\n\t\t// 'Oct',\n\t\t// 'Nov',\n\t\t// 'Dec'\n\t];\n\n\tconst [titles, setTitles] = useState([]);\n\t// console.log(titles);\n\tconst getTitles = useCallback(() => {\n\t\tif (isMountedRef.current) {\n\t\t\tsetTitles(organizations);\n\t\t}\n\t}, [isMountedRef]);\n\n\tuseEffect(() => {\n\t\tgetTitles();\n\t}, [getTitles]);\n\n\ttitles.map((title) => {\n\t\tlabels.push(title.title);\n\t});\n\n\tconsole.log(0, labels, stats);\n\n\treturn (\n\t\t<Card className={clsx(classes.root, className)} {...rest}>\n\t\t\t{/* <CardHeader action={<GenericMoreButton />} title=\"Financial Stats\" /> */}\n\t\t\t<CardHeader title=\"Financial Stats\" />\n\t\t\t<Divider />\n\t\t\t<PerfectScrollbar>\n\t\t\t\t<Box minWidth={700} pt={4} pr={2} pl={2}>\n\t\t\t\t\t{/* <Chart className={classes.chart} data={stats} labels={labels} /> */}\n\t\t\t\t\t<Chart className={classes.chart} data={stats} labels={labels} />\n\t\t\t\t</Box>\n\t\t\t</PerfectScrollbar>\n\t\t</Card>\n\t);\n}\n\nFinancialStats.propTypes = {\n\tclassName: PropTypes.string,\n};\n\nexport default FinancialStats;\n"]},"metadata":{},"sourceType":"module"}