{"ast":null,"code":"import _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/projects/ProjectDetailsView/Subscribers/SubscriberCard.js\";\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Avatar, Box, Card, CardContent, CardMedia, Chip, Divider, Link, Typography, makeStyles } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    media: {\n      height: 125\n    },\n    content: {\n      paddingTop: 0\n    },\n    avatar: {\n      height: 64,\n      width: 64\n    },\n    chip: {\n      margin: theme.spacing(0.5)\n    }\n  };\n});\n\nfunction SubscriberCard(_ref) {\n  var _this = this;\n\n  var subscriber = _ref.subscriber,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"subscriber\", \"className\"]);\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: subscriber.cover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: -4,\n    mb: 2,\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Subscriber\",\n    className: classes.avatar,\n    component: RouterLink,\n    src: subscriber.avatar,\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    align: \"center\",\n    color: \"textPrimary\",\n    component: RouterLink,\n    display: \"block\",\n    to: \"#\",\n    underline: \"none\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, subscriber.name), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, subscriber.commonContacts, ' ', \"contacts in common\"), /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), subscriber.labels.map(function (label) {\n    return /*#__PURE__*/React.createElement(Chip, {\n      key: label,\n      className: classes.chip,\n      label: label,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    });\n  })));\n}\n\nSubscriberCard.propTypes = {\n  className: PropTypes.string,\n  subscriber: PropTypes.object.isRequired\n};\nexport default SubscriberCard;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/projects/ProjectDetailsView/Subscribers/SubscriberCard.js"],"names":["React","Link","RouterLink","PropTypes","clsx","Avatar","Box","Card","CardContent","CardMedia","Chip","Divider","Typography","makeStyles","useStyles","theme","root","media","height","content","paddingTop","avatar","width","chip","margin","spacing","SubscriberCard","subscriber","className","rest","classes","cover","name","commonContacts","labels","map","label","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  Chip,\n  Divider,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 125\n  },\n  content: {\n    paddingTop: 0\n  },\n  avatar: {\n    height: 64,\n    width: 64\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  }\n}));\n\nfunction SubscriberCard({ subscriber, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardMedia\n        className={classes.media}\n        image={subscriber.cover}\n      />\n      <CardContent className={classes.content}>\n        <Box\n          mt={-4}\n          mb={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Avatar\n            alt=\"Subscriber\"\n            className={classes.avatar}\n            component={RouterLink}\n            src={subscriber.avatar}\n            to=\"#\"\n          />\n        </Box>\n        <Link\n          align=\"center\"\n          color=\"textPrimary\"\n          component={RouterLink}\n          display=\"block\"\n          to=\"#\"\n          underline=\"none\"\n          variant=\"h6\"\n        >\n          {subscriber.name}\n        </Link>\n        <Typography\n          align=\"center\"\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {subscriber.commonContacts}\n          {' '}\n          contacts in common\n        </Typography>\n        <Box my={2}>\n          <Divider />\n        </Box>\n        {subscriber.labels.map((label) => (\n          <Chip\n            key={label}\n            className={classes.chip}\n            label={label}\n            variant=\"outlined\"\n          />\n        ))}\n      </CardContent>\n    </Card>\n  );\n}\n\nSubscriberCard.propTypes = {\n  className: PropTypes.string,\n  subscriber: PropTypes.object.isRequired\n};\n\nexport default SubscriberCard;\n"]},"metadata":{},"sourceType":"module"}