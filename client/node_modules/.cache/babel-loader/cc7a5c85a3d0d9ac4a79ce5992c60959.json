{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/auth/RegisterView/RegisterForm.js\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport * as Yup from \"yup\";\nimport PropTypes from \"prop-types\";\nimport { Formik } from \"formik\";\nimport { Box, Button, Checkbox, FormHelperText, TextField, Typography, Link, makeStyles } from \"@material-ui/core\";\nimport { register } from \"src/actions/accountActions\";\nvar useStyles = makeStyles(function () {\n  return {\n    root: {}\n  };\n});\n\nfunction RegisterForm(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      onSubmitSuccess = _ref.onSubmitSuccess,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"onSubmitSuccess\"]);\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      // firstName: '',\n      // lastName: '',\n      name: \"jung\",\n      email: \"jung@healthdata.com\",\n      password: \"1111111\",\n      policy: false\n    },\n    validationSchema: Yup.object().shape({\n      // firstName: Yup.string().max(255).required('First name is required'),\n      // lastName: Yup.string().max(255).required('Last name is required'),\n      name: Yup.string().max(255).required(\"Name is required\"),\n      email: Yup.string().email(\"Must be a valid email\").max(255).required(\"Email is required\"),\n      password: Yup.string().min(5).max(255).required(\"Password is required\"),\n      policy: Yup.boolean().oneOf([true], \"This field must be checked\")\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var setErrors, setStatus, setSubmitting;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref2.setErrors, setStatus = _ref2.setStatus, setSubmitting = _ref2.setSubmitting;\n                console.log(\"aaaa\");\n                _context.prev = 2;\n                _context.next = 5;\n                return dispatch(register(values));\n\n              case 5:\n                onSubmitSuccess();\n                _context.next = 13;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                setStatus({\n                  success: false\n                });\n                setErrors({\n                  submit: _context.t0.message\n                });\n                setSubmitting(false);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 8]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, function (_ref4) {\n    var errors = _ref4.errors,\n        handleBlur = _ref4.handleBlur,\n        handleChange = _ref4.handleChange,\n        handleSubmit = _ref4.handleSubmit,\n        isSubmitting = _ref4.isSubmitting,\n        touched = _ref4.touched,\n        values = _ref4.values;\n    return /*#__PURE__*/React.createElement(\"form\", Object.assign({\n      className: clsx(classes.root, className),\n      onSubmit: handleSubmit\n    }, rest, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.name && errors.name),\n      fullWidth: true,\n      helperText: touched.name && errors.name,\n      label: \"Name\",\n      margin: \"normal\",\n      name: \"name\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"name\",\n      value: values.name,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.email && errors.email),\n      fullWidth: true,\n      helperText: touched.email && errors.email,\n      label: \"Email Address\",\n      margin: \"normal\",\n      name: \"email\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"email\",\n      value: values.email,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.password && errors.password),\n      fullWidth: true,\n      helperText: touched.password && errors.password,\n      label: \"Password\",\n      margin: \"normal\",\n      name: \"password\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"password\",\n      value: values.password,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 6\n      }\n    }), Boolean(touched.policy && errors.policy) && /*#__PURE__*/React.createElement(FormHelperText, {\n      error: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 51\n      }\n    }, errors.policy), /*#__PURE__*/React.createElement(Box, {\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      disabled: isSubmitting,\n      fullWidth: true,\n      size: \"large\",\n      type: \"submit\",\n      variant: \"contained\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, \"Create account\")));\n  });\n}\n\nRegisterForm.propTypes = {\n  className: PropTypes.string,\n  onSubmitSuccess: PropTypes.func\n};\nRegisterForm.default = {\n  onSubmitSuccess: function onSubmitSuccess() {}\n};\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/auth/RegisterView/RegisterForm.js"],"names":["React","useDispatch","clsx","Yup","PropTypes","Formik","Box","Button","Checkbox","FormHelperText","TextField","Typography","Link","makeStyles","register","useStyles","root","RegisterForm","className","onSubmitSuccess","rest","classes","dispatch","name","email","password","policy","object","shape","string","max","required","min","boolean","oneOf","values","setErrors","setStatus","setSubmitting","console","log","success","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","propTypes","func","default"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport clsx from \"clsx\";\nimport * as Yup from \"yup\";\nimport PropTypes from \"prop-types\";\nimport { Formik } from \"formik\";\nimport { Box, Button, Checkbox, FormHelperText, TextField, Typography, Link, makeStyles } from \"@material-ui/core\";\nimport { register } from \"src/actions/accountActions\";\n\nconst useStyles = makeStyles(() => ({\n\troot: {},\n}));\n\nfunction RegisterForm({ className, onSubmitSuccess, ...rest }) {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\t// firstName: '',\n\t\t\t\t// lastName: '',\n\t\t\t\tname: \"jung\",\n\t\t\t\temail: \"jung@healthdata.com\",\n\t\t\t\tpassword: \"1111111\",\n\t\t\t\tpolicy: false,\n\t\t\t}}\n\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t// firstName: Yup.string().max(255).required('First name is required'),\n\t\t\t\t// lastName: Yup.string().max(255).required('Last name is required'),\n\t\t\t\tname: Yup.string()\n\t\t\t\t\t.max(255)\n\t\t\t\t\t.required(\"Name is required\"),\n\t\t\t\temail: Yup.string()\n\t\t\t\t\t.email(\"Must be a valid email\")\n\t\t\t\t\t.max(255)\n\t\t\t\t\t.required(\"Email is required\"),\n\t\t\t\tpassword: Yup.string()\n\t\t\t\t\t.min(5)\n\t\t\t\t\t.max(255)\n\t\t\t\t\t.required(\"Password is required\"),\n\t\t\t\tpolicy: Yup.boolean().oneOf([true], \"This field must be checked\"),\n\t\t\t})}\n\t\t\tonSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n\t\t\t\tconsole.log(\"aaaa\");\n\t\t\t\ttry {\n\t\t\t\t\tawait dispatch(register(values));\n\t\t\t\t\tonSubmitSuccess();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetStatus({ success: false });\n\t\t\t\t\tsetErrors({ submit: error.message });\n\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n\t\t\t\t<form className={clsx(classes.root, className)} onSubmit={handleSubmit} {...rest}>\n\t\t\t\t\t{/* <TextField\n            error={Boolean(touched.firstName && errors.firstName)}\n            fullWidth\n            helperText={touched.firstName && errors.firstName}\n            label=\"First Name\"\n            margin=\"normal\"\n            name=\"firstName\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"firstName\"\n            value={values.firstName}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.lastName && errors.lastName)}\n            fullWidth\n            helperText={touched.lastName && errors.lastName}\n            label=\"Last Name\"\n            margin=\"normal\"\n            name=\"lastName\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"lastName\"\n            value={values.lastName}\n            variant=\"outlined\"\n          /> */}\n\t\t\t\t\t<TextField\n\t\t\t\t\t\terror={Boolean(touched.name && errors.name)}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\thelperText={touched.name && errors.name}\n\t\t\t\t\t\tlabel=\"Name\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\ttype=\"name\"\n\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\terror={Boolean(touched.email && errors.email)}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\thelperText={touched.email && errors.email}\n\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\terror={Boolean(touched.password && errors.password)}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\thelperText={touched.password && errors.password}\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t/>\n\t\t\t\t\t{/* <Box\n            alignItems=\"center\"\n            display=\"flex\"\n            mt={2}\n            ml={-1}\n          >\n            <Checkbox\n              checked={values.policy}\n              name=\"policy\"\n              onChange={handleChange}\n            />\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              I have read the\n              {' '}\n              <Link\n                component=\"a\"\n                href=\"#\"\n                color=\"secondary\"\n              >\n                Terms and Conditions\n              </Link>\n            </Typography>\n          </Box> */}\n\t\t\t\t\t{Boolean(touched.policy && errors.policy) && <FormHelperText error>{errors.policy}</FormHelperText>}\n\t\t\t\t\t<Box mt={2}>\n\t\t\t\t\t\t<Button color=\"secondary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\">\n\t\t\t\t\t\t\tCreate account\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Box>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n}\n\nRegisterForm.propTypes = {\n\tclassName: PropTypes.string,\n\tonSubmitSuccess: PropTypes.func,\n};\n\nRegisterForm.default = {\n\tonSubmitSuccess: () => {},\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}