{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/kanban/KanbanView/CardEditModal/NewComment.js\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport { Avatar, TextField, makeStyles } from '@material-ui/core';\nimport { addComment } from 'src/actions/kanbanActions';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    field: {\n      marginLeft: theme.spacing(2)\n    }\n  };\n});\n\nfunction NewComment(_ref) {\n  var cardId = _ref.cardId,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"cardId\", \"className\"]);\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.account;\n  }),\n      user = _useSelector.user;\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setMessage(event.target.value);\n  };\n\n  var handleAdd = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              event.persist();\n\n              if (!(event.keyCode === 13 && message)) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 5;\n              return dispatch(addComment(user.id, cardId, message));\n\n            case 5:\n              setMessage('');\n              enqueueSnackbar('Comment added', {\n                variant: 'success'\n              });\n\n            case 7:\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              enqueueSnackbar('Ooops!', {\n                variant: 'error'\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function handleAdd(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Person\",\n    src: user.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    className: classes.field,\n    value: message,\n    onKeyUp: handleAdd,\n    onChange: handleChange,\n    placeholder: \"Write a comment...\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}\n\nNewComment.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  className: PropTypes.string\n};\nexport default NewComment;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/kanban/KanbanView/CardEditModal/NewComment.js"],"names":["React","useState","useSelector","useDispatch","PropTypes","clsx","useSnackbar","Avatar","TextField","makeStyles","addComment","useStyles","theme","root","display","alignItems","field","marginLeft","spacing","NewComment","cardId","className","rest","classes","dispatch","state","account","user","enqueueSnackbar","message","setMessage","handleChange","event","persist","target","value","handleAdd","keyCode","id","variant","avatar","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport {\n  Avatar,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport { addComment } from 'src/actions/kanbanActions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  field: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction NewComment({ cardId, className, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state.account);\n  const { enqueueSnackbar } = useSnackbar();\n  const [message, setMessage] = useState('');\n\n  const handleChange = (event) => {\n    event.persist();\n    setMessage(event.target.value);\n  };\n\n  const handleAdd = async (event) => {\n    try {\n      event.persist();\n\n      if (event.keyCode === 13 && message) {\n        await dispatch(addComment(user.id, cardId, message));\n        setMessage('');\n        enqueueSnackbar('Comment added', {\n          variant: 'success'\n        });\n      }\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        src={user.avatar}\n      />\n      <TextField\n        fullWidth\n        className={classes.field}\n        value={message}\n        onKeyUp={handleAdd}\n        onChange={handleChange}\n        placeholder=\"Write a comment...\"\n        variant=\"outlined\"\n      />\n    </div>\n  );\n}\n\nNewComment.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  className: PropTypes.string\n};\n\nexport default NewComment;\n"]},"metadata":{},"sourceType":"module"}