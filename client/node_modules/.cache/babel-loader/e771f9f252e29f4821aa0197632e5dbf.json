{"ast":null,"code":"import _slicedToArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Records/EarningsSegmentation/index.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { Box, Card, CardHeader, Divider, Typography, makeStyles } from \"@material-ui/core\";\nimport GenericMoreButton from \"src/components/GenericMoreButton\";\nimport axios from \"src/utils/axios\";\nimport useIsMountedRef from \"src/hooks/useIsMountedRef\";\nimport Chart from \"./Chart\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    item: {\n      textAlign: \"center\",\n      flexGrow: 1,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      padding: theme.spacing(3, 2),\n      \"&:not(:last-of-type)\": {\n        borderRight: \"1px solid \".concat(theme.palette.divider)\n      }\n    }\n  };\n});\n\nfunction EarningsSegmentation(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var organizations = useSelector(function (state) {\n    return state.organizations.organizations;\n  });\n  var documents = useSelector(function (state) {\n    return state.documents.documents;\n  });\n  var isMountedRef = useIsMountedRef();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      earnings = _useState2[0],\n      setEarnings = _useState2[1];\n\n  var getEarnings = useCallback(function () {\n    // axios.get(\"/api/reports/earnings\").then((response) => {\n    // \tif (isMountedRef.current) {\n    // \t\tsetEarnings(response.data.earnings);\n    // \t}\n    // });\n    var labels = [];\n    organizations.map(function (organization) {\n      labels.push(organization.title);\n    });\n    var stats = [];\n\n    for (var i = 0; i < organizations.length; i++) {\n      var num = 0;\n\n      for (var j = 0; j < documents.length; j++) {\n        if (organizations[i].id === documents[j].organizationID) {\n          num++;\n        }\n      } // console.log(num);\n\n\n      stats.push(num);\n    }\n  }, [isMountedRef]);\n  useEffect(function () {\n    getEarnings();\n  }, [getEarnings]);\n\n  if (!earnings) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(GenericMoreButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 24\n      }\n    }),\n    title: \"Earnings Segmentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    position: \"relative\",\n    minHeight: 320,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    data: earnings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }\n  }, earnings.labels.map(function (label, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: label,\n      className: classes.item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      color: \"textPrimary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, earnings.datasets[0].data[i], \"%\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"overline\",\n      color: \"textSecondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, label));\n  })));\n}\n\nEarningsSegmentation.propTypes = {\n  className: PropTypes.string\n};\nexport default EarningsSegmentation;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Records/EarningsSegmentation/index.js"],"names":["React","useState","useEffect","useCallback","useDispatch","useSelector","PropTypes","clsx","Box","Card","CardHeader","Divider","Typography","makeStyles","GenericMoreButton","axios","useIsMountedRef","Chart","useStyles","theme","root","item","textAlign","flexGrow","display","flexDirection","justifyContent","padding","spacing","borderRight","palette","divider","EarningsSegmentation","className","rest","classes","organizations","state","documents","isMountedRef","earnings","setEarnings","getEarnings","labels","map","organization","push","title","stats","i","length","num","j","id","organizationID","label","datasets","data","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { Box, Card, CardHeader, Divider, Typography, makeStyles } from \"@material-ui/core\";\nimport GenericMoreButton from \"src/components/GenericMoreButton\";\nimport axios from \"src/utils/axios\";\nimport useIsMountedRef from \"src/hooks/useIsMountedRef\";\nimport Chart from \"./Chart\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {},\n\titem: {\n\t\ttextAlign: \"center\",\n\t\tflexGrow: 1,\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\tjustifyContent: \"center\",\n\t\tpadding: theme.spacing(3, 2),\n\t\t\"&:not(:last-of-type)\": {\n\t\t\tborderRight: `1px solid ${theme.palette.divider}`,\n\t\t},\n\t},\n}));\n\nfunction EarningsSegmentation({ className, ...rest }) {\n\tconst classes = useStyles();\n\tconst organizations = useSelector((state) => state.organizations.organizations);\n\tconst documents = useSelector((state) => state.documents.documents);\n\n\tconst isMountedRef = useIsMountedRef();\n\tconst [earnings, setEarnings] = useState(null);\n\n\tconst getEarnings = useCallback(() => {\n\t\t// axios.get(\"/api/reports/earnings\").then((response) => {\n\t\t// \tif (isMountedRef.current) {\n\t\t// \t\tsetEarnings(response.data.earnings);\n\t\t// \t}\n\t\t// });\n\t\tconst labels = [];\n\t\torganizations.map((organization) => {\n\t\t\tlabels.push(organization.title);\n\t\t});\n\n\t\tconst stats = [];\n\t\tfor (let i = 0; i < organizations.length; i++) {\n\t\t\tlet num = 0;\n\t\t\tfor (let j = 0; j < documents.length; j++) {\n\t\t\t\tif (organizations[i].id === documents[j].organizationID) {\n\t\t\t\t\tnum++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(num);\n\t\t\tstats.push(num);\n\t\t}\n\t}, [isMountedRef]);\n\n\tuseEffect(() => {\n\t\tgetEarnings();\n\t}, [getEarnings]);\n\n\tif (!earnings) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Card className={clsx(classes.root, className)} {...rest}>\n\t\t\t<CardHeader action={<GenericMoreButton />} title=\"Earnings Segmentation\" />\n\t\t\t<Divider />\n\t\t\t<Box p={3} position=\"relative\" minHeight={320}>\n\t\t\t\t<Chart data={earnings} />\n\t\t\t</Box>\n\t\t\t<Divider />\n\t\t\t<Box display=\"flex\">\n\t\t\t\t{earnings.labels.map((label, i) => (\n\t\t\t\t\t<div key={label} className={classes.item}>\n\t\t\t\t\t\t<Typography variant=\"h4\" color=\"textPrimary\">\n\t\t\t\t\t\t\t{earnings.datasets[0].data[i]}%\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"overline\" color=\"textSecondary\">\n\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</Box>\n\t\t</Card>\n\t);\n}\n\nEarningsSegmentation.propTypes = {\n\tclassName: PropTypes.string,\n};\n\nexport default EarningsSegmentation;\n"]},"metadata":{},"sourceType":"module"}