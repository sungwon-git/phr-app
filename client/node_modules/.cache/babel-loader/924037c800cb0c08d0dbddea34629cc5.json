{"ast":null,"code":"import _objectSpread from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport axios from 'src/utils/axios';\nexport var GET_CONTACTS = '@chat/get-contacts';\nexport var GET_THREADS = '@chat/get-threads';\nexport var GET_THREAD = '@chat/get-thread';\nexport var MARK_THREAD_AS_SEEN = '@chat/mark-thread-as-seen';\nexport var ADD_MESSAGE = '@chat/add-message';\nexport var OPEN_SIDEBAR = '@chat/open-sidebar';\nexport var CLOSE_SIDEBAR = '@chat/close-sidebar';\nexport function getContacts() {\n  var request = axios.get('/api/chat/contacts');\n  return function (dispatch) {\n    request.then(function (response) {\n      return dispatch({\n        type: GET_CONTACTS,\n        payload: response.data\n      });\n    });\n  };\n}\nexport function getThreads() {\n  var request = axios.get('/api/chat/threads');\n  return function (dispatch) {\n    request.then(function (response) {\n      return dispatch({\n        type: GET_THREADS,\n        payload: response.data\n      });\n    });\n  };\n}\nexport function getThread(threadKey) {\n  var request = axios.get('/api/chat/thread', {\n    params: {\n      threadKey: threadKey\n    }\n  });\n  return function (dispatch) {\n    request.then(function (response) {\n      if (response.data.thread) {\n        dispatch({\n          type: GET_THREAD,\n          payload: response.data\n        });\n      }\n    });\n  };\n}\nexport function markThreadAsSeen(threadKey) {\n  var request = axios.get('/api/chat/thread/mark-as-seen', {\n    params: {\n      threadKey: threadKey\n    }\n  });\n  return function (dispatch) {\n    request.then(function () {\n      return dispatch({\n        type: MARK_THREAD_AS_SEEN,\n        payload: {\n          threadKey: threadKey\n        }\n      });\n    });\n  };\n}\nexport function addMessage(_ref) {\n  var userId = _ref.userId,\n      threadKey = _ref.threadKey,\n      body = _ref.body,\n      attachments = _ref.attachments;\n  var request = axios.post('/api/chat/messages/new', {\n    userId: userId,\n    threadKey: threadKey,\n    body: body,\n    attachments: attachments\n  });\n  return function (dispatch) {\n    request.then(function (response) {\n      return dispatch({\n        type: ADD_MESSAGE,\n        payload: _objectSpread({\n          userId: userId\n        }, response.data)\n      });\n    });\n  };\n}\nexport function openSidebar() {\n  return {\n    type: OPEN_SIDEBAR\n  };\n}\nexport function closeSidebar() {\n  return {\n    type: CLOSE_SIDEBAR\n  };\n}","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/actions/chatActions.js"],"names":["axios","GET_CONTACTS","GET_THREADS","GET_THREAD","MARK_THREAD_AS_SEEN","ADD_MESSAGE","OPEN_SIDEBAR","CLOSE_SIDEBAR","getContacts","request","get","dispatch","then","response","type","payload","data","getThreads","getThread","threadKey","params","thread","markThreadAsSeen","addMessage","userId","body","attachments","post","openSidebar","closeSidebar"],"mappings":"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","sourcesContent":["import axios from 'src/utils/axios';\n\nexport const GET_CONTACTS = '@chat/get-contacts';\nexport const GET_THREADS = '@chat/get-threads';\nexport const GET_THREAD = '@chat/get-thread';\nexport const MARK_THREAD_AS_SEEN = '@chat/mark-thread-as-seen';\nexport const ADD_MESSAGE = '@chat/add-message';\nexport const OPEN_SIDEBAR = '@chat/open-sidebar';\nexport const CLOSE_SIDEBAR = '@chat/close-sidebar';\n\nexport function getContacts() {\n  const request = axios.get('/api/chat/contacts');\n\n  return (dispatch) => {\n    request.then((response) => dispatch({\n      type: GET_CONTACTS,\n      payload: response.data\n    }));\n  };\n}\n\nexport function getThreads() {\n  const request = axios.get('/api/chat/threads');\n\n  return (dispatch) => {\n    request.then((response) => dispatch({\n      type: GET_THREADS,\n      payload: response.data\n    }));\n  };\n}\n\nexport function getThread(threadKey) {\n  const request = axios.get('/api/chat/thread', {\n    params: {\n      threadKey\n    }\n  });\n\n  return (dispatch) => {\n    request.then((response) => {\n      if (response.data.thread) {\n        dispatch({\n          type: GET_THREAD,\n          payload: response.data\n        });\n      }\n    });\n  };\n}\n\nexport function markThreadAsSeen(threadKey) {\n  const request = axios.get('/api/chat/thread/mark-as-seen', {\n    params: {\n      threadKey\n    }\n  });\n\n  return (dispatch) => {\n    request.then(() => dispatch({\n      type: MARK_THREAD_AS_SEEN,\n      payload: {\n        threadKey\n      }\n    }));\n  };\n}\n\nexport function addMessage({\n  userId,\n  threadKey,\n  body,\n  attachments\n}) {\n  const request = axios.post('/api/chat/messages/new', {\n    userId,\n    threadKey,\n    body,\n    attachments\n  });\n\n  return (dispatch) => {\n    request.then((response) => dispatch({\n      type: ADD_MESSAGE,\n      payload: {\n        userId,\n        ...response.data\n      }\n    }));\n  };\n}\n\nexport function openSidebar() {\n  return {\n    type: OPEN_SIDEBAR\n  };\n}\n\nexport function closeSidebar() {\n  return {\n    type: CLOSE_SIDEBAR\n  };\n}\n"]},"metadata":{},"sourceType":"module"}