{"ast":null,"code":"import _slicedToArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/EncountersView/index.js\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport { Box, Container, Divider, Tabs, Tab, makeStyles } from \"@material-ui/core\"; // import axios from \"src/utils/axios\";\n\nimport useIsMountedRef from \"src/hooks/useIsMountedRef\";\nimport Page from \"src/components/Page\";\nimport Header from \"./Header\"; // import Overview from \"./Overview\";\n// import Files from \"./Files\";\n\nimport Activities from \"./Activities\"; // import Subscribers from \"./Subscribers\";\n\nimport Axios from \"axios\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      backgroundColor: theme.palette.background.dark,\n      minHeight: \"100%\",\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3)\n    }\n  };\n});\n\nfunction EncountersView() {\n  var classes = useStyles();\n  var isMountedRef = useIsMountedRef();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      compositions = _useState2[0],\n      setCompositions = _useState2[1];\n\n  var getCompositions = useCallback(function () {\n    Axios.get(\"http://localhost:4000/4_0_0/Composition?subject=Patient/113610\").then(function (response) {\n      console.log(0, response.data);\n\n      if (isMountedRef.current) {\n        // console.log(response.data);\n        setCompositions(response.data);\n      }\n    });\n  }, [isMountedRef]);\n  useEffect(function () {\n    getCompositions();\n  }, [getCompositions]);\n\n  if (!compositions) {\n    return null;\n  }\n\n  console.log(1, compositions);\n  console.log(2, compositions.findIndex()); // compositions.map((composition) => {\n  // \tconsole.log(composition.title);\n  // });\n  // const [currentTab, setCurrentTab] = useState(\"overview\");\n  // const [project, setProject] = useState(null);\n  // const tabs = [\n  // \t{ value: \"overview\", label: \"Overview\" },\n  // \t{ value: \"files\", label: \"Files\" },\n  // \t{ value: \"activity\", label: \"Activity\" },\n  // \t{ value: \"subscribers\", label: \"Subscribers\" },\n  // ];\n  // const handleTabsChange = (event, value) => {\n  // \tsetCurrentTab(value);\n  // };\n  // const getProject = useCallback(() => {\n  // \taxios.get(\"/api/projects/projects/1\").then((response) => {\n  // \t\tif (isMountedRef.current) {\n  // \t\t\tsetProject(response.data.project);\n  // \t\t}\n  // \t});\n  // }, [isMountedRef]);\n  // useEffect(() => {\n  // \tgetProject();\n  // }, [getProject]);\n  // if (!project) {\n  // \treturn null;\n  // }\n\n  return /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Project Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  })));\n}\n\nexport default EncountersView;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/EncountersView/index.js"],"names":["React","useCallback","useState","useEffect","Box","Container","Divider","Tabs","Tab","makeStyles","useIsMountedRef","Page","Header","Activities","Axios","useStyles","theme","root","backgroundColor","palette","background","dark","minHeight","paddingTop","spacing","paddingBottom","EncountersView","classes","isMountedRef","compositions","setCompositions","getCompositions","get","then","response","console","log","data","current","findIndex"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,OAAzB,EAAkCC,IAAlC,EAAwCC,GAAxC,EAA6CC,UAA7C,QAA+D,mBAA/D,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;AACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,SAAS,GAAGN,UAAU,CAAC,UAACO,KAAD;AAAA,SAAY;AACxCC,IAAAA,IAAI,EAAE;AACLC,MAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,UAAd,CAAyBC,IADrC;AAELC,MAAAA,SAAS,EAAE,MAFN;AAGLC,MAAAA,UAAU,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CAHP;AAILC,MAAAA,aAAa,EAAET,KAAK,CAACQ,OAAN,CAAc,CAAd;AAJV;AADkC,GAAZ;AAAA,CAAD,CAA5B;;AASA,SAASE,cAAT,GAA0B;AACzB,MAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,MAAMa,YAAY,GAAGlB,eAAe,EAApC;;AACA,kBAAwCR,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAO2B,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAMC,eAAe,GAAG9B,WAAW,CAAC,YAAM;AACzCa,IAAAA,KAAK,CAACkB,GAAN,CAAU,gEAAV,EAA4EC,IAA5E,CAAiF,UAACC,QAAD,EAAc;AAC9FC,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ,EAAeF,QAAQ,CAACG,IAAxB;;AACA,UAAIT,YAAY,CAACU,OAAjB,EAA0B;AACzB;AACAR,QAAAA,eAAe,CAACI,QAAQ,CAACG,IAAV,CAAf;AACA;AACD,KAND;AAOA,GARkC,EAQhC,CAACT,YAAD,CARgC,CAAnC;AAUAzB,EAAAA,SAAS,CAAC,YAAM;AACf4B,IAAAA,eAAe;AACf,GAFQ,EAEN,CAACA,eAAD,CAFM,CAAT;;AAIA,MAAI,CAACF,YAAL,EAAmB;AAClB,WAAO,IAAP;AACA;;AAEDM,EAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ,EAAeP,YAAf;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ,EAAeP,YAAY,CAACU,SAAb,EAAf,EAxByB,CAyBzB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEZ,OAAO,CAACV,IAAzB;AAA+B,IAAA,KAAK,EAAC,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWC,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXD,CADD,CADD;AAuBA;;AAED,eAAeS,cAAf","sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\nimport { Box, Container, Divider, Tabs, Tab, makeStyles } from \"@material-ui/core\";\n\n// import axios from \"src/utils/axios\";\nimport useIsMountedRef from \"src/hooks/useIsMountedRef\";\nimport Page from \"src/components/Page\";\nimport Header from \"./Header\";\n// import Overview from \"./Overview\";\n// import Files from \"./Files\";\nimport Activities from \"./Activities\";\n// import Subscribers from \"./Subscribers\";\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tbackgroundColor: theme.palette.background.dark,\n\t\tminHeight: \"100%\",\n\t\tpaddingTop: theme.spacing(3),\n\t\tpaddingBottom: theme.spacing(3),\n\t},\n}));\n\nfunction EncountersView() {\n\tconst classes = useStyles();\n\tconst isMountedRef = useIsMountedRef();\n\tconst [compositions, setCompositions] = useState([]);\n\n\tconst getCompositions = useCallback(() => {\n\t\tAxios.get(\"http://localhost:4000/4_0_0/Composition?subject=Patient/113610\").then((response) => {\n\t\t\tconsole.log(0, response.data);\n\t\t\tif (isMountedRef.current) {\n\t\t\t\t// console.log(response.data);\n\t\t\t\tsetCompositions(response.data);\n\t\t\t}\n\t\t});\n\t}, [isMountedRef]);\n\n\tuseEffect(() => {\n\t\tgetCompositions();\n\t}, [getCompositions]);\n\n\tif (!compositions) {\n\t\treturn null;\n\t}\n\n\tconsole.log(1, compositions);\n\tconsole.log(2, compositions.findIndex());\n\t// compositions.map((composition) => {\n\t// \tconsole.log(composition.title);\n\t// });\n\n\t// const [currentTab, setCurrentTab] = useState(\"overview\");\n\t// const [project, setProject] = useState(null);\n\t// const tabs = [\n\t// \t{ value: \"overview\", label: \"Overview\" },\n\t// \t{ value: \"files\", label: \"Files\" },\n\t// \t{ value: \"activity\", label: \"Activity\" },\n\t// \t{ value: \"subscribers\", label: \"Subscribers\" },\n\t// ];\n\n\t// const handleTabsChange = (event, value) => {\n\t// \tsetCurrentTab(value);\n\t// };\n\n\t// const getProject = useCallback(() => {\n\t// \taxios.get(\"/api/projects/projects/1\").then((response) => {\n\t// \t\tif (isMountedRef.current) {\n\t// \t\t\tsetProject(response.data.project);\n\t// \t\t}\n\t// \t});\n\t// }, [isMountedRef]);\n\n\t// useEffect(() => {\n\t// \tgetProject();\n\t// }, [getProject]);\n\n\t// if (!project) {\n\t// \treturn null;\n\t// }\n\n\treturn (\n\t\t<Page className={classes.root} title=\"Project Details\">\n\t\t\t<Container maxWidth=\"lg\">\n\t\t\t\t{/* <Header composition={compositions[0]} /> */}\n\t\t\t\t{/* <Header project={project} /> */}\n\t\t\t\t{/* <Box mt={3}>\n\t\t\t\t\t<Tabs onChange={handleTabsChange} scrollButtons=\"auto\" textColor=\"secondary\" value={currentTab} variant=\"scrollable\">\n\t\t\t\t\t\t{tabs.map((tab) => (\n\t\t\t\t\t\t\t<Tab key={tab.value} label={tab.label} value={tab.value} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Tabs>\n\t\t\t\t</Box> */}\n\t\t\t\t{/* <Divider /> */}\n\t\t\t\t<Box mt={3}>\n\t\t\t\t\t{/* {currentTab === \"overview\" && <Overview project={project} />} */}\n\t\t\t\t\t{/* {currentTab === \"files\" && <Files files={project.files} />} */}\n\t\t\t\t\t{/* {currentTab === \"activity\" && <Activities activities={project.activities} />} */}\n\t\t\t\t\t{/* {currentTab === \"subscribers\" && <Subscribers subscribers={project.subscribers} />} */}\n\t\t\t\t\t{/* <Activities compositions={compositions} /> */}\n\t\t\t\t</Box>\n\t\t\t</Container>\n\t\t</Page>\n\t);\n}\n\nexport default EncountersView;\n"]},"metadata":{},"sourceType":"module"}