{"ast":null,"code":"import _slicedToArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Organization/Results.js\";\nimport React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box, Button, Grid, ListItemText, Menu, MenuItem, Typography, makeStyles } from '@material-ui/core';\nimport { ToggleButtonGroup, ToggleButton, Pagination } from '@material-ui/lab';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ProjectCard from 'src/components/ProjectCard';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    title: {\n      position: 'relative',\n      '&:after': {\n        position: 'absolute',\n        bottom: -8,\n        left: 0,\n        content: '\" \"',\n        height: 3,\n        width: 48,\n        backgroundColor: theme.palette.primary.main\n      }\n    },\n    sortButton: {\n      textTransform: 'none',\n      letterSpacing: 0,\n      marginRight: theme.spacing(2)\n    }\n  };\n});\n\nfunction Results(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      projects = _ref.projects,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"projects\"]);\n\n  var classes = useStyles();\n  var sortRef = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openSort = _useState2[0],\n      setOpenSort = _useState2[1];\n\n  var _useState3 = useState('Most popular'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedSort = _useState4[0],\n      setSelectedSort = _useState4[1];\n\n  var _useState5 = useState('grid'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  var handleSortOpen = function handleSortOpen() {\n    setOpenSort(true);\n  };\n\n  var handleSortClose = function handleSortClose() {\n    setOpenSort(false);\n  };\n\n  var handleSortSelect = function handleSortSelect(value) {\n    setSelectedSort(value);\n    setOpenSort(false);\n  };\n\n  var handleModeChange = function handleModeChange(event, value) {\n    setMode(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n    mb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h5\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Showing\", ' ', projects.length, ' ', \"projects\"), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.sortButton,\n    onClick: handleSortOpen,\n    ref: sortRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, selectedSort, /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    exclusive: true,\n    onChange: handleModeChange,\n    size: \"small\",\n    value: mode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ViewModuleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, projects.map(function (project) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      key: project.id,\n      md: mode === 'grid' ? 4 : 12,\n      sm: mode === 'grid' ? 6 : 12,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ProjectCard, {\n      project: project,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(Box, {\n    mt: 6,\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    count: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Menu, {\n    anchorEl: sortRef.current,\n    className: classes.menu,\n    onClose: handleSortClose,\n    open: openSort,\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, ['Most recent', 'Popular', 'Price high', 'Price low', 'On sale'].map(function (option) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option,\n      onClick: function onClick() {\n        return handleSortSelect(option);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: option,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }));\n  })));\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  projects: PropTypes.array.isRequired\n};\nexport default Results;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Organization/Results.js"],"names":["React","useState","useRef","PropTypes","clsx","Box","Button","Grid","ListItemText","Menu","MenuItem","Typography","makeStyles","ToggleButtonGroup","ToggleButton","Pagination","ViewModuleIcon","ArrowDropDownIcon","ProjectCard","useStyles","theme","root","title","position","bottom","left","content","height","width","backgroundColor","palette","primary","main","sortButton","textTransform","letterSpacing","marginRight","spacing","Results","className","projects","rest","classes","sortRef","openSort","setOpenSort","selectedSort","setSelectedSort","mode","setMode","handleSortOpen","handleSortClose","handleSortSelect","value","handleModeChange","event","length","map","project","id","current","menu","option","propTypes","string","array","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,YAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,UAPF,EAQEC,UARF,QASO,mBATP;AAUA,SACEC,iBADF,EAEEC,YAFF,EAGEC,UAHF,QAIO,kBAJP;AAKA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,IAAMC,SAAS,GAAGP,UAAU,CAAC,UAACQ,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,UADL;AAEL,iBAAW;AACTA,QAAAA,QAAQ,EAAE,UADD;AAETC,QAAAA,MAAM,EAAE,CAAC,CAFA;AAGTC,QAAAA,IAAI,EAAE,CAHG;AAITC,QAAAA,OAAO,EAAE,KAJA;AAKTC,QAAAA,MAAM,EAAE,CALC;AAMTC,QAAAA,KAAK,EAAE,EANE;AAOTC,QAAAA,eAAe,EAAET,KAAK,CAACU,OAAN,CAAcC,OAAd,CAAsBC;AAP9B;AAFN,KAFgC;AAcvCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,aAAa,EAAE,MADL;AAEVC,MAAAA,aAAa,EAAE,CAFL;AAGVC,MAAAA,WAAW,EAAEhB,KAAK,CAACiB,OAAN,CAAc,CAAd;AAHH;AAd2B,GAAZ;AAAA,CAAD,CAA5B;;AAqBA,SAASC,OAAT,OAAmD;AAAA;;AAAA,MAAhCC,SAAgC,QAAhCA,SAAgC;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAARC,IAAQ;;AACjD,MAAMC,OAAO,GAAGvB,SAAS,EAAzB;AACA,MAAMwB,OAAO,GAAGzC,MAAM,CAAC,IAAD,CAAtB;;AACA,kBAAgCD,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAO2C,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwC5C,QAAQ,CAAC,cAAD,CAAhD;AAAA;AAAA,MAAO6C,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAwB9C,QAAQ,CAAC,MAAD,CAAhC;AAAA;AAAA,MAAO+C,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,MAAMM,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BN,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFD;;AAIA,MAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAClCN,IAAAA,eAAe,CAACM,KAAD,CAAf;AACAR,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAHD;;AAKA,MAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAQF,KAAR,EAAkB;AACzCJ,IAAAA,OAAO,CAACI,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,SAAS,EAAEjD,IAAI,CAACsC,OAAO,CAACrB,IAAT,EAAekB,SAAf;AADjB,KAEME,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,cAAc,EAAC,eAHjB;AAIE,IAAA,QAAQ,EAAC,MAJX;AAKE,IAAA,EAAE,EAAE,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAEC,OAAO,CAACpB,KADrB;AAEE,IAAA,OAAO,EAAC,IAFV;AAGE,IAAA,KAAK,EAAC,aAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAMG,GANH,EAOGkB,QAAQ,CAACgB,MAPZ,EAQG,GARH,aAPF,eAkBE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,UAAU,EAAC,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEd,OAAO,CAACT,UADrB;AAEE,IAAA,OAAO,EAAEiB,cAFX;AAGE,IAAA,GAAG,EAAEP,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGG,YALH,eAME,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAJF,eAYE,oBAAC,iBAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,QAAQ,EAAEQ,gBAFZ;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEN,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CAZF,CAlBF,CAJF,eA8CE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAE,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGR,QAAQ,CAACiB,GAAT,CAAa,UAACC,OAAD;AAAA,wBACZ,oBAAC,IAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,GAAG,EAAEA,OAAO,CAACC,EAFf;AAGE,MAAA,EAAE,EAAEX,IAAI,KAAK,MAAT,GAAkB,CAAlB,GAAsB,EAH5B;AAIE,MAAA,EAAE,EAAEA,IAAI,KAAK,MAAT,GAAkB,CAAlB,GAAsB,EAJ5B;AAKE,MAAA,EAAE,EAAE,EALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEU,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADY;AAAA,GAAb,CAJH,CA9CF,eA8DE,oBAAC,GAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,cAAc,EAAC,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CA9DF,eAqEE,oBAAC,IAAD;AACE,IAAA,QAAQ,EAAEf,OAAO,CAACiB,OADpB;AAEE,IAAA,SAAS,EAAElB,OAAO,CAACmB,IAFrB;AAGE,IAAA,OAAO,EAAEV,eAHX;AAIE,IAAA,IAAI,EAAEP,QAJR;AAKE,IAAA,SAAS,EAAE,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG,CAAC,aAAD,EAAgB,SAAhB,EAA2B,YAA3B,EAAyC,WAAzC,EAAsD,SAAtD,EAAiEa,GAAjE,CACC,UAACK,MAAD;AAAA,wBACE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,MADP;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMV,gBAAgB,CAACU,MAAD,CAAtB;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEA,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAAA,GADD,CAPH,CArEF,CADF;AA0FD;;AAEDxB,OAAO,CAACyB,SAAR,GAAoB;AAClBxB,EAAAA,SAAS,EAAEpC,SAAS,CAAC6D,MADH;AAElBxB,EAAAA,QAAQ,EAAErC,SAAS,CAAC8D,KAAV,CAAgBC;AAFR,CAApB;AAKA,eAAe5B,OAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Grid,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  ToggleButtonGroup,\n  ToggleButton,\n  Pagination\n} from '@material-ui/lab';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ProjectCard from 'src/components/ProjectCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  title: {\n    position: 'relative',\n    '&:after': {\n      position: 'absolute',\n      bottom: -8,\n      left: 0,\n      content: '\" \"',\n      height: 3,\n      width: 48,\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  sortButton: {\n    textTransform: 'none',\n    letterSpacing: 0,\n    marginRight: theme.spacing(2)\n  }\n}));\n\nfunction Results({ className, projects, ...rest }) {\n  const classes = useStyles();\n  const sortRef = useRef(null);\n  const [openSort, setOpenSort] = useState(false);\n  const [selectedSort, setSelectedSort] = useState('Most popular');\n  const [mode, setMode] = useState('grid');\n\n  const handleSortOpen = () => {\n    setOpenSort(true);\n  };\n\n  const handleSortClose = () => {\n    setOpenSort(false);\n  };\n\n  const handleSortSelect = (value) => {\n    setSelectedSort(value);\n    setOpenSort(false);\n  };\n\n  const handleModeChange = (event, value) => {\n    setMode(value);\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        flexWrap=\"wrap\"\n        mb={2}\n      >\n        <Typography\n          className={classes.title}\n          variant=\"h5\"\n          color=\"textPrimary\"\n        >\n          Showing\n          {' '}\n          {projects.length}\n          {' '}\n          projects\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <Button\n            className={classes.sortButton}\n            onClick={handleSortOpen}\n            ref={sortRef}\n          >\n            {selectedSort}\n            <ArrowDropDownIcon />\n          </Button>\n          <ToggleButtonGroup\n            exclusive\n            onChange={handleModeChange}\n            size=\"small\"\n            value={mode}\n          >\n            <ToggleButton value=\"grid\">\n              <ViewModuleIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Box>\n      </Box>\n      <Grid\n        container\n        spacing={3}\n      >\n        {projects.map((project) => (\n          <Grid\n            item\n            key={project.id}\n            md={mode === 'grid' ? 4 : 12}\n            sm={mode === 'grid' ? 6 : 12}\n            xs={12}\n          >\n            <ProjectCard project={project} />\n          </Grid>\n        ))}\n      </Grid>\n      <Box\n        mt={6}\n        display=\"flex\"\n        justifyContent=\"center\"\n      >\n        <Pagination count={3} />\n      </Box>\n      <Menu\n        anchorEl={sortRef.current}\n        className={classes.menu}\n        onClose={handleSortClose}\n        open={openSort}\n        elevation={1}\n      >\n        {['Most recent', 'Popular', 'Price high', 'Price low', 'On sale'].map(\n          (option) => (\n            <MenuItem\n              key={option}\n              onClick={() => handleSortSelect(option)}\n            >\n              <ListItemText primary={option} />\n            </MenuItem>\n          )\n        )}\n      </Menu>\n    </div>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  projects: PropTypes.array.isRequired\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}