{"ast":null,"code":"import _objectSpread from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/social/ProfileView/Connections.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport _ from 'lodash';\nimport { useSnackbar } from 'notistack';\nimport { Avatar, Box, Button, Card, CardHeader, Divider, Grid, IconButton, Input, Link, Paper, Typography, makeStyles, SvgIcon } from '@material-ui/core';\nimport { Search as SearchIcon, MoreVertical as MoreIcon } from 'react-feather';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nvar connectStatusMap = {\n  not_connected: 'Connect',\n  pending: 'Pending',\n  connected: 'Connected'\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    searchInput: {\n      marginLeft: theme.spacing(2)\n    },\n    avatar: {\n      height: 60,\n      width: 60\n    }\n  };\n});\n\nfunction Connections(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var isMountedRef = useIsMountedRef();\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      connections = _useState2[0],\n      setConnections = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var handleConnectToggle = function handleConnectToggle(id) {\n    setConnections(function (prevConnections) {\n      var newConnections = _.map(prevConnections, _.clone);\n\n      return newConnections.map(function (connection) {\n        if (connection.id === id) {\n          var newConnection = _objectSpread({}, connection);\n\n          newConnection.status = connection.status === 'connected' || connection.status === 'pending' ? 'not_connected' : 'pending';\n\n          if (newConnection.status === 'pending') {\n            enqueueSnackbar('Connection request sent', {\n              variant: 'success'\n            });\n          }\n\n          return newConnection;\n        }\n\n        return connection;\n      });\n    });\n  };\n\n  var getConnections = useCallback(function () {\n    axios.get('/api/social/users/1/connections').then(function (response) {\n      if (isMountedRef.current) {\n        setConnections(response.data.connections);\n      }\n    });\n  }, [isMountedRef]);\n  useEffect(function () {\n    getConnections();\n  }, [getConnections]);\n\n  if (!connections) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Connections\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    py: 2,\n    px: 3,\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SvgIcon, {\n    fontSize: \"small\",\n    color: \"action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    className: classes.searchInput,\n    disableUnderline: true,\n    value: search,\n    onChange: function onChange(event) {\n      return setSearch(event.target.value);\n    },\n    placeholder: \"Search connections\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, connections.filter(function (connection) {\n    return connection.name.toLowerCase().includes(search);\n  }).map(function (connection) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      key: connection.id,\n      xs: 12,\n      md: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      p: 2,\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"Profile image\",\n      className: classes.avatar,\n      component: RouterLink,\n      src: connection.avatar,\n      to: \"#\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      mx: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      variant: \"h5\",\n      color: \"textPrimary\",\n      component: RouterLink,\n      to: \"#\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 23\n      }\n    }, connection.name), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 23\n      }\n    }, connection.common, ' ', \"connections in common\"), connection.status !== 'rejected' && /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\",\n      onClick: function onClick() {\n        return handleConnectToggle(connection.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }, connectStatusMap[connection.status])), /*#__PURE__*/React.createElement(IconButton, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(MoreIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }))))));\n  }))));\n}\n\nConnections.propTypes = {\n  className: PropTypes.string\n};\nexport default Connections;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/social/ProfileView/Connections.js"],"names":["React","useState","useEffect","useCallback","Link","RouterLink","PropTypes","clsx","_","useSnackbar","Avatar","Box","Button","Card","CardHeader","Divider","Grid","IconButton","Input","Paper","Typography","makeStyles","SvgIcon","Search","SearchIcon","MoreVertical","MoreIcon","axios","useIsMountedRef","connectStatusMap","not_connected","pending","connected","useStyles","theme","root","searchInput","marginLeft","spacing","avatar","height","width","Connections","className","rest","classes","isMountedRef","enqueueSnackbar","connections","setConnections","search","setSearch","handleConnectToggle","id","prevConnections","newConnections","map","clone","connection","newConnection","status","variant","getConnections","get","then","response","current","data","event","target","value","filter","name","toLowerCase","includes","common","propTypes","string"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport _ from 'lodash';\nimport { useSnackbar } from 'notistack';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Grid,\n  IconButton,\n  Input,\n  Link,\n  Paper,\n  Typography,\n  makeStyles,\n  SvgIcon\n} from '@material-ui/core';\nimport {\n  Search as SearchIcon,\n  MoreVertical as MoreIcon\n} from 'react-feather';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst connectStatusMap = {\n  not_connected: 'Connect',\n  pending: 'Pending',\n  connected: 'Connected'\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  searchInput: {\n    marginLeft: theme.spacing(2)\n  },\n  avatar: {\n    height: 60,\n    width: 60\n  }\n}));\n\nfunction Connections({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const { enqueueSnackbar } = useSnackbar();\n  const [connections, setConnections] = useState(null);\n  const [search, setSearch] = useState('');\n\n  const handleConnectToggle = (id) => {\n    setConnections((prevConnections) => {\n      const newConnections = _.map(prevConnections, _.clone);\n\n      return newConnections.map((connection) => {\n        if (connection.id === id) {\n          const newConnection = { ...connection };\n\n          newConnection.status = connection.status === 'connected' || connection.status === 'pending'\n            ? 'not_connected'\n            : 'pending';\n\n          if (newConnection.status === 'pending') {\n            enqueueSnackbar('Connection request sent', {\n              variant: 'success'\n            });\n          }\n\n          return newConnection;\n        }\n\n        return connection;\n      });\n    });\n  };\n\n  const getConnections = useCallback(() => {\n    axios\n      .get('/api/social/users/1/connections')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setConnections(response.data.connections);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getConnections();\n  }, [getConnections]);\n\n  if (!connections) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Connections\" />\n      <Divider />\n      <Box\n        py={2}\n        px={3}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <SvgIcon\n          fontSize=\"small\"\n          color=\"action\"\n        >\n          <SearchIcon />\n        </SvgIcon>\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          value={search}\n          onChange={(event) => setSearch(event.target.value)}\n          placeholder=\"Search connections\"\n        />\n      </Box>\n      <Divider />\n      <Box p={3}>\n        <Grid\n          container\n          spacing={3}\n        >\n          {connections\n            .filter((connection) => connection.name.toLowerCase().includes(search))\n            .map((connection) => (\n              <Grid\n                item\n                key={connection.id}\n                xs={12}\n                md={6}\n              >\n                <Paper variant=\"outlined\">\n                  <Box\n                    p={2}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                  >\n                    <Avatar\n                      alt=\"Profile image\"\n                      className={classes.avatar}\n                      component={RouterLink}\n                      src={connection.avatar}\n                      to=\"#\"\n                    />\n                    <Box\n                      flexGrow={1}\n                      mx={2}\n                    >\n                      <Link\n                        variant=\"h5\"\n                        color=\"textPrimary\"\n                        component={RouterLink}\n                        to=\"#\"\n                      >\n                        {connection.name}\n                      </Link>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        gutterBottom\n                      >\n                        {connection.common}\n                        {' '}\n                        connections in common\n                      </Typography>\n                      {connection.status !== 'rejected' && (\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          onClick={() => handleConnectToggle(connection.id)}\n                        >\n                          {connectStatusMap[connection.status]}\n                        </Button>\n                      )}\n                    </Box>\n                    <IconButton>\n                      <SvgIcon fontSize=\"small\">\n                        <MoreIcon />\n                      </SvgIcon>\n                    </IconButton>\n                  </Box>\n                </Paper>\n              </Grid>\n            ))}\n        </Grid>\n      </Box>\n    </Card>\n  );\n}\n\nConnections.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Connections;\n"]},"metadata":{},"sourceType":"module"}