{"ast":null,"code":"/* eslint-disable import/prefer-default-export */\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from 'src/reducers';\nimport { ENABLE_REDUX_LOGGER } from 'src/config';\nvar loggerMiddleware = createLogger();\nexport function configureStore() {\n  var preloadedState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middlewares = [thunkMiddleware];\n\n  if (ENABLE_REDUX_LOGGER) {\n    middlewares.push(loggerMiddleware);\n  }\n\n  var middlewareEnhancer = composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var enhancers = [middlewareEnhancer];\n  var composedEnhancers = compose.apply(void 0, enhancers);\n  var store = createStore(rootReducer, preloadedState, composedEnhancers);\n  return store;\n}","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/store/index.js"],"names":["applyMiddleware","createStore","compose","thunkMiddleware","composeWithDevTools","createLogger","rootReducer","ENABLE_REDUX_LOGGER","loggerMiddleware","configureStore","preloadedState","middlewares","push","middlewareEnhancer","enhancers","composedEnhancers","store"],"mappings":"AAAA;AACA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,mBAAT,QAAoC,YAApC;AAEA,IAAMC,gBAAgB,GAAGH,YAAY,EAArC;AAEA,OAAO,SAASI,cAAT,GAA6C;AAAA,MAArBC,cAAqB,uEAAJ,EAAI;AAClD,MAAMC,WAAW,GAAG,CAACR,eAAD,CAApB;;AAEA,MAAII,mBAAJ,EAAyB;AACvBI,IAAAA,WAAW,CAACC,IAAZ,CAAiBJ,gBAAjB;AACD;;AAED,MAAMK,kBAAkB,GAAGT,mBAAmB,CAC5CJ,eAAe,MAAf,SAAmBW,WAAnB,CAD4C,CAA9C;AAIA,MAAMG,SAAS,GAAG,CAACD,kBAAD,CAAlB;AACA,MAAME,iBAAiB,GAAGb,OAAO,MAAP,SAAWY,SAAX,CAA1B;AAEA,MAAME,KAAK,GAAGf,WAAW,CAACK,WAAD,EAAcI,cAAd,EAA8BK,iBAA9B,CAAzB;AAEA,SAAOC,KAAP;AACD","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from 'src/reducers';\nimport { ENABLE_REDUX_LOGGER } from 'src/config';\n\nconst loggerMiddleware = createLogger();\n\nexport function configureStore(preloadedState = {}) {\n  const middlewares = [thunkMiddleware];\n\n  if (ENABLE_REDUX_LOGGER) {\n    middlewares.push(loggerMiddleware);\n  }\n\n  const middlewareEnhancer = composeWithDevTools(\n    applyMiddleware(...middlewares)\n  );\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = compose(...enhancers);\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}