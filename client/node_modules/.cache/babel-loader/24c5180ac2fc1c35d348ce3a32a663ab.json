{"ast":null,"code":"import _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/EncountersView/Activities/Activity.js\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { Avatar, Card, Typography, Link, makeStyles, colors } from \"@material-ui/core\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAddOutlined\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport DashboardIcon from \"@material-ui/icons/DashboardOutlined\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    card: {\n      marginLeft: theme.spacing(2),\n      flexGrow: 1,\n      display: \"flex\",\n      padding: theme.spacing(2),\n      alignItems: \"center\"\n    },\n    date: {\n      marginLeft: \"auto\",\n      flexShrink: 0\n    },\n    avatar: {\n      color: colors.common.white\n    },\n    avatarBlue: {\n      backgroundColor: colors.blue[500]\n    },\n    avatarGreen: {\n      backgroundColor: colors.green[500]\n    },\n    avatarOrange: {\n      backgroundColor: colors.orange[500]\n    },\n    avatarIndigo: {\n      backgroundColor: colors.indigo[500]\n    }\n  };\n});\nvar avatarsMap = {\n  upload_file: {\n    icon: GetAppIcon,\n    className: \"avatarBlue\"\n  },\n  join_team: {\n    icon: PersonAddIcon,\n    className: \"avatarOrange\"\n  },\n  price_change: {\n    icon: AttachMoneyIcon,\n    className: \"avatarGreen\"\n  },\n  contest_created: {\n    icon: DashboardIcon,\n    className: \"avatarIndigo\"\n  }\n};\n\nfunction Activity(_ref) {\n  var composition = _ref.composition,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"composition\", \"className\"]);\n\n  var classes = useStyles(); // const avatar = avatarsMap[activity.type];\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Avatar, {\n    className: clsx(classes.avatar, classes[avatar.className]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(avatar.icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, composition.title), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.date,\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, moment(composition.date).fromNow())));\n}\n\nActivity.propTypes = {\n  activity: PropTypes.object.isRequired,\n  className: PropTypes.string\n};\nexport default Activity;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/EncountersView/Activities/Activity.js"],"names":["React","Link","RouterLink","PropTypes","clsx","moment","Avatar","Card","Typography","makeStyles","colors","GetAppIcon","PersonAddIcon","AttachMoneyIcon","DashboardIcon","useStyles","theme","root","display","alignItems","card","marginLeft","spacing","flexGrow","padding","date","flexShrink","avatar","color","common","white","avatarBlue","backgroundColor","blue","avatarGreen","green","avatarOrange","orange","avatarIndigo","indigo","avatarsMap","upload_file","icon","className","join_team","price_change","contest_created","Activity","composition","rest","classes","title","fromNow","propTypes","activity","object","isRequired","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { Avatar, Card, Typography, Link, makeStyles, colors } from \"@material-ui/core\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAddOutlined\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport DashboardIcon from \"@material-ui/icons/DashboardOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t},\n\tcard: {\n\t\tmarginLeft: theme.spacing(2),\n\t\tflexGrow: 1,\n\t\tdisplay: \"flex\",\n\t\tpadding: theme.spacing(2),\n\t\talignItems: \"center\",\n\t},\n\tdate: {\n\t\tmarginLeft: \"auto\",\n\t\tflexShrink: 0,\n\t},\n\tavatar: {\n\t\tcolor: colors.common.white,\n\t},\n\tavatarBlue: {\n\t\tbackgroundColor: colors.blue[500],\n\t},\n\tavatarGreen: {\n\t\tbackgroundColor: colors.green[500],\n\t},\n\tavatarOrange: {\n\t\tbackgroundColor: colors.orange[500],\n\t},\n\tavatarIndigo: {\n\t\tbackgroundColor: colors.indigo[500],\n\t},\n}));\n\nconst avatarsMap = {\n\tupload_file: {\n\t\ticon: GetAppIcon,\n\t\tclassName: \"avatarBlue\",\n\t},\n\tjoin_team: {\n\t\ticon: PersonAddIcon,\n\t\tclassName: \"avatarOrange\",\n\t},\n\tprice_change: {\n\t\ticon: AttachMoneyIcon,\n\t\tclassName: \"avatarGreen\",\n\t},\n\tcontest_created: {\n\t\ticon: DashboardIcon,\n\t\tclassName: \"avatarIndigo\",\n\t},\n};\n\nfunction Activity({ composition, className, ...rest }) {\n\tconst classes = useStyles();\n\t// const avatar = avatarsMap[activity.type];\n\n\treturn (\n\t\t<div className={clsx(classes.root, className)} {...rest}>\n\t\t\t<Avatar className={clsx(classes.avatar, classes[avatar.className])}>\n\t\t\t\t<avatar.icon />\n\t\t\t</Avatar>\n\t\t\t<Card className={classes.card}>\n\t\t\t\t<Typography variant=\"body1\" color=\"textPrimary\">\n\t\t\t\t\t{/* <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            variant=\"h6\"\n          >\n            {activity.subject}\n          </Link>\n          {' '} */}\n\t\t\t\t\t{composition.title}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography className={classes.date} variant=\"caption\">\n\t\t\t\t\t{moment(composition.date).fromNow()}\n\t\t\t\t</Typography>\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n\nActivity.propTypes = {\n\tactivity: PropTypes.object.isRequired,\n\tclassName: PropTypes.string,\n};\n\nexport default Activity;\n"]},"metadata":{},"sourceType":"module"}