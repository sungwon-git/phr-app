{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/extra/forms/FormikView/BasicForm.js\";\nimport React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Card, CardContent, CardHeader, Checkbox, CircularProgress, Divider, FormHelperText, Grid, Link, TextField, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport wait from 'src/utils/wait';\n\nfunction BasicForm() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAlertVisible = _useState2[0],\n      setAlertVisible = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: 'johnnydoe@yahoo.com',\n      firstName: 'John',\n      lastName: 'Doe',\n      password: 'thisisasecuredpassword',\n      policy: false\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required('Required'),\n      firstName: Yup.string().required('Required'),\n      lastName: Yup.string().required('Required'),\n      password: Yup.string().min(7, 'Must be at least 7 characters').max(255).required('Required'),\n      policy: Yup.boolean().oneOf([true], 'This field must be checked')\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n        var resetForm, setErrors, setStatus, setSubmitting;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetForm = _ref.resetForm, setErrors = _ref.setErrors, setStatus = _ref.setStatus, setSubmitting = _ref.setSubmitting;\n                _context.prev = 1;\n                _context.next = 4;\n                return wait(1000);\n\n              case 4:\n                resetForm();\n                setStatus({\n                  success: true\n                });\n                setSubmitting(false);\n                _context.next = 14;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](1);\n                setStatus({\n                  success: false\n                });\n                setErrors({\n                  submit: _context.t0.message\n                });\n                setSubmitting(false);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 9]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, function (_ref3) {\n    var errors = _ref3.errors,\n        handleBlur = _ref3.handleBlur,\n        handleChange = _ref3.handleChange,\n        handleSubmit = _ref3.handleSubmit,\n        isSubmitting = _ref3.isSubmitting,\n        touched = _ref3.touched,\n        values = _ref3.values;\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      title: \"Basic Form\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, isAlertVisible && /*#__PURE__*/React.createElement(Box, {\n      mb: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: function onClose() {\n        return setAlertVisible(false);\n      },\n      severity: \"info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"This is an info alert - check it out!\")), isSubmitting ? /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      my: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.firstName && errors.firstName),\n      fullWidth: true,\n      helperText: touched.firstName && errors.firstName,\n      label: \"First Name\",\n      name: \"firstName\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.firstName,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.lastName && errors.lastName),\n      fullWidth: true,\n      helperText: touched.lastName && errors.lastName,\n      label: \"Last Name\",\n      name: \"lastName\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.lastName,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Box, {\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.email && errors.email),\n      fullWidth: true,\n      helperText: touched.email && errors.email,\n      label: \"Email Address\",\n      name: \"email\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"email\",\n      value: values.email,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.password && errors.password),\n      fullWidth: true,\n      helperText: touched.password && errors.password,\n      label: \"Password\",\n      name: \"password\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"password\",\n      value: values.password,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      alignItems: \"center\",\n      display: \"flex\",\n      mt: 2,\n      ml: -1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: values.policy,\n      name: \"policy\",\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }, \"I have read the\", ' ', /*#__PURE__*/React.createElement(Link, {\n      component: \"a\",\n      href: \"#\",\n      color: \"secondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, \"Terms and Conditions\"))), Boolean(touched.policy && errors.policy) && /*#__PURE__*/React.createElement(FormHelperText, {\n      error: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, errors.policy), /*#__PURE__*/React.createElement(Box, {\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      disabled: isSubmitting,\n      fullWidth: true,\n      size: \"large\",\n      type: \"submit\",\n      variant: \"contained\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, \"Sign up\")))));\n  });\n}\n\nexport default BasicForm;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/extra/forms/FormikView/BasicForm.js"],"names":["React","useState","Yup","Formik","Box","Button","Card","CardContent","CardHeader","Checkbox","CircularProgress","Divider","FormHelperText","Grid","Link","TextField","Typography","Alert","wait","BasicForm","isAlertVisible","setAlertVisible","email","firstName","lastName","password","policy","object","shape","string","required","min","max","boolean","oneOf","values","resetForm","setErrors","setStatus","setSubmitting","success","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormHelperText,\n  Grid,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport wait from 'src/utils/wait';\n\nfunction BasicForm() {\n  const [isAlertVisible, setAlertVisible] = useState(true);\n\n  return (\n    <Formik\n      initialValues={{\n        email: 'johnnydoe@yahoo.com',\n        firstName: 'John',\n        lastName: 'Doe',\n        password: 'thisisasecuredpassword',\n        policy: false\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string().email().required('Required'),\n        firstName: Yup.string().required('Required'),\n        lastName: Yup.string().required('Required'),\n        password: Yup.string().min(7, 'Must be at least 7 characters').max(255).required('Required'),\n        policy: Yup.boolean().oneOf([true], 'This field must be checked')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          // Make API request\n          await wait(1000);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <Card>\n          <CardHeader title=\"Basic Form\" />\n          <Divider />\n          <CardContent>\n            {isAlertVisible && (\n              <Box mb={3}>\n                <Alert\n                  onClose={() => setAlertVisible(false)}\n                  severity=\"info\"\n                >\n                  This is an info alert - check it out!\n                </Alert>\n              </Box>\n            )}\n            {isSubmitting ? (\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                my={5}\n              >\n                <CircularProgress />\n              </Box>\n            ) : (\n              <form onSubmit={handleSubmit}>\n                <Grid\n                  container\n                  spacing={2}\n                >\n                  <Grid\n                    item\n                    md={6}\n                    xs={12}\n                  >\n                    <TextField\n                      error={Boolean(touched.firstName && errors.firstName)}\n                      fullWidth\n                      helperText={touched.firstName && errors.firstName}\n                      label=\"First Name\"\n                      name=\"firstName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.firstName}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    md={6}\n                    xs={12}\n                  >\n                    <TextField\n                      error={Boolean(touched.lastName && errors.lastName)}\n                      fullWidth\n                      helperText={touched.lastName && errors.lastName}\n                      label=\"Last Name\"\n                      name=\"lastName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.lastName}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                </Grid>\n                <Box mt={2}>\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email Address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box mt={2}>\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box\n                  alignItems=\"center\"\n                  display=\"flex\"\n                  mt={2}\n                  ml={-1}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    I have read the\n                    {' '}\n                    <Link\n                      component=\"a\"\n                      href=\"#\"\n                      color=\"secondary\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                <FormHelperText error>\n                  {errors.policy}\n                </FormHelperText>\n                )}\n                <Box mt={2}>\n                  <Button\n                    color=\"secondary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </CardContent>\n        </Card>\n      )}\n    </Formik>\n  );\n}\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}