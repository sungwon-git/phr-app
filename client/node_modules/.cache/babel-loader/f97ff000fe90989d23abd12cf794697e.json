{"ast":null,"code":"import _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/components/StackAvatars.js\";\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Avatar, Tooltip, Typography, colors, makeStyles } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      paddingLeft: 20\n    },\n    avatar: {\n      border: \"3px solid \".concat(theme.palette.background.default),\n      marginLeft: -20,\n      '&:hover': {\n        zIndex: 2\n      }\n    },\n    more: {\n      backgroundColor: colors.red[600],\n      color: colors.common.white\n    }\n  };\n});\n\nfunction StackAvatars(_ref) {\n  var _this = this;\n\n  var avatars = _ref.avatars,\n      limit = _ref.limit,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"avatars\", \"limit\", \"className\"]);\n\n  var classes = useStyles();\n  var lastIndex = 0;\n  var avatarNodes = avatars.slice(0, limit).map(function (item) {\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: ++lastIndex,\n      title: \"View\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.avatar,\n      src: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }));\n  });\n\n  if (avatars.length > limit) {\n    avatarNodes.push( /*#__PURE__*/React.createElement(Avatar, {\n      key: ++lastIndex,\n      className: clsx(classes.avatar, classes.more),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"inherit\",\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"+\", avatars.length - limit)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }), avatarNodes);\n}\n\nStackAvatars.propTypes = {\n  avatars: PropTypes.array,\n  className: PropTypes.string,\n  limit: PropTypes.number\n};\nStackAvatars.defaultProps = {\n  avatars: [],\n  limit: 3\n};\nexport default memo(StackAvatars);","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/components/StackAvatars.js"],"names":["React","memo","PropTypes","clsx","Avatar","Tooltip","Typography","colors","makeStyles","useStyles","theme","root","display","paddingLeft","avatar","border","palette","background","default","marginLeft","zIndex","more","backgroundColor","red","color","common","white","StackAvatars","avatars","limit","className","rest","classes","lastIndex","avatarNodes","slice","map","item","length","push","propTypes","array","string","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    paddingLeft: 20\n  },\n  avatar: {\n    border: `3px solid ${theme.palette.background.default}`,\n    marginLeft: -20,\n    '&:hover': {\n      zIndex: 2\n    }\n  },\n  more: {\n    backgroundColor: colors.red[600],\n    color: colors.common.white\n  }\n}));\n\nfunction StackAvatars({\n  avatars,\n  limit,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  let lastIndex = 0;\n\n  const avatarNodes = avatars.slice(0, limit).map((item) => (\n    <Tooltip\n      key={++lastIndex}\n      title=\"View\"\n    >\n      <Avatar\n        className={classes.avatar}\n        src={item}\n      />\n    </Tooltip>\n  ));\n\n  if (avatars.length > limit) {\n    avatarNodes.push(\n      <Avatar\n        key={++lastIndex}\n        className={clsx(classes.avatar, classes.more)}\n      >\n        <Typography\n          color=\"inherit\"\n          variant=\"subtitle2\"\n        >\n          +\n          {avatars.length - limit}\n        </Typography>\n      </Avatar>\n    );\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {avatarNodes}\n    </div>\n  );\n}\n\nStackAvatars.propTypes = {\n  avatars: PropTypes.array,\n  className: PropTypes.string,\n  limit: PropTypes.number\n};\n\nStackAvatars.defaultProps = {\n  avatars: [],\n  limit: 3\n};\n\nexport default memo(StackAvatars);\n"]},"metadata":{},"sourceType":"module"}