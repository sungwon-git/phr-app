{"ast":null,"code":"import _slicedToArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Organization/Results.js\";\nimport React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { Box, Button, Grid, ListItemText, Menu, MenuItem, Typography, makeStyles } from \"@material-ui/core\";\nimport { ToggleButtonGroup, ToggleButton, Pagination } from \"@material-ui/lab\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport OrganizationCard from \"src/components/OrganizationCard\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    title: {\n      position: \"relative\",\n      \"&:after\": {\n        position: \"absolute\",\n        bottom: -8,\n        left: 0,\n        content: '\" \"',\n        height: 3,\n        width: 48,\n        backgroundColor: theme.palette.primary.main\n      }\n    },\n    sortButton: {\n      textTransform: \"none\",\n      letterSpacing: 0,\n      marginRight: theme.spacing(2)\n    }\n  };\n});\n\nfunction Results(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      organizations = _ref.organizations,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"organizations\"]);\n\n  var classes = useStyles();\n  var sortRef = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openSort = _useState2[0],\n      setOpenSort = _useState2[1];\n\n  var _useState3 = useState(\"Most popular\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedSort = _useState4[0],\n      setSelectedSort = _useState4[1];\n\n  var _useState5 = useState(\"grid\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  var handleSortOpen = function handleSortOpen() {\n    setOpenSort(true);\n  };\n\n  var handleSortClose = function handleSortClose() {\n    setOpenSort(false);\n  };\n\n  var handleSortSelect = function handleSortSelect(value) {\n    setSelectedSort(value);\n    setOpenSort(false);\n  };\n\n  var handleModeChange = function handleModeChange(event, value) {\n    setMode(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n    mb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h5\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \"Showing \", organizations.length, \" organizations\"), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.sortButton,\n    onClick: handleSortOpen,\n    ref: sortRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }, selectedSort, /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    exclusive: true,\n    onChange: handleModeChange,\n    size: \"small\",\n    value: mode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ViewModuleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }\n  }, organizations.map(function (organization) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      key: organization.id,\n      md: mode === \"grid\" ? 4 : 12,\n      sm: mode === \"grid\" ? 6 : 12,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(OrganizationCard, {\n      organization: organization,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(Box, {\n    mt: 6,\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    count: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Menu, {\n    anchorEl: sortRef.current,\n    className: classes.menu,\n    onClose: handleSortClose,\n    open: openSort,\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }, [\"Most recent\", \"Popular\", \"Price high\", \"Price low\", \"On sale\"].map(function (option) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option,\n      onClick: function onClick() {\n        return handleSortSelect(option);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: option,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }));\n  })));\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  projects: PropTypes.array.isRequired\n};\nexport default Results;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Organization/Results.js"],"names":["React","useState","useRef","PropTypes","clsx","Box","Button","Grid","ListItemText","Menu","MenuItem","Typography","makeStyles","ToggleButtonGroup","ToggleButton","Pagination","ViewModuleIcon","ArrowDropDownIcon","OrganizationCard","useStyles","theme","root","title","position","bottom","left","content","height","width","backgroundColor","palette","primary","main","sortButton","textTransform","letterSpacing","marginRight","spacing","Results","className","organizations","rest","classes","sortRef","openSort","setOpenSort","selectedSort","setSelectedSort","mode","setMode","handleSortOpen","handleSortClose","handleSortSelect","value","handleModeChange","event","length","map","organization","id","current","menu","option","propTypes","string","projects","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { Box, Button, Grid, ListItemText, Menu, MenuItem, Typography, makeStyles } from \"@material-ui/core\";\nimport { ToggleButtonGroup, ToggleButton, Pagination } from \"@material-ui/lab\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport OrganizationCard from \"src/components/OrganizationCard\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {},\n\ttitle: {\n\t\tposition: \"relative\",\n\t\t\"&:after\": {\n\t\t\tposition: \"absolute\",\n\t\t\tbottom: -8,\n\t\t\tleft: 0,\n\t\t\tcontent: '\" \"',\n\t\t\theight: 3,\n\t\t\twidth: 48,\n\t\t\tbackgroundColor: theme.palette.primary.main,\n\t\t},\n\t},\n\tsortButton: {\n\t\ttextTransform: \"none\",\n\t\tletterSpacing: 0,\n\t\tmarginRight: theme.spacing(2),\n\t},\n}));\n\nfunction Results({ className, organizations, ...rest }) {\n\tconst classes = useStyles();\n\tconst sortRef = useRef(null);\n\tconst [openSort, setOpenSort] = useState(false);\n\tconst [selectedSort, setSelectedSort] = useState(\"Most popular\");\n\tconst [mode, setMode] = useState(\"grid\");\n\n\tconst handleSortOpen = () => {\n\t\tsetOpenSort(true);\n\t};\n\n\tconst handleSortClose = () => {\n\t\tsetOpenSort(false);\n\t};\n\n\tconst handleSortSelect = (value) => {\n\t\tsetSelectedSort(value);\n\t\tsetOpenSort(false);\n\t};\n\n\tconst handleModeChange = (event, value) => {\n\t\tsetMode(value);\n\t};\n\n\treturn (\n\t\t<div className={clsx(classes.root, className)} {...rest}>\n\t\t\t<Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" flexWrap=\"wrap\" mb={2}>\n\t\t\t\t<Typography className={classes.title} variant=\"h5\" color=\"textPrimary\">\n\t\t\t\t\tShowing {organizations.length} organizations\n\t\t\t\t</Typography>\n\t\t\t\t<Box display=\"flex\" alignItems=\"center\">\n\t\t\t\t\t<Button className={classes.sortButton} onClick={handleSortOpen} ref={sortRef}>\n\t\t\t\t\t\t{selectedSort}\n\t\t\t\t\t\t<ArrowDropDownIcon />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<ToggleButtonGroup exclusive onChange={handleModeChange} size=\"small\" value={mode}>\n\t\t\t\t\t\t<ToggleButton value=\"grid\">\n\t\t\t\t\t\t\t<ViewModuleIcon />\n\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t</ToggleButtonGroup>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Grid container spacing={3}>\n\t\t\t\t{organizations.map((organization) => (\n\t\t\t\t\t<Grid item key={organization.id} md={mode === \"grid\" ? 4 : 12} sm={mode === \"grid\" ? 6 : 12} xs={12}>\n\t\t\t\t\t\t{/* <ProjectCard project={project} /> */}\n\t\t\t\t\t\t<OrganizationCard organization={organization} />\n\t\t\t\t\t</Grid>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t\t<Box mt={6} display=\"flex\" justifyContent=\"center\">\n\t\t\t\t<Pagination count={3} />\n\t\t\t</Box>\n\t\t\t<Menu anchorEl={sortRef.current} className={classes.menu} onClose={handleSortClose} open={openSort} elevation={1}>\n\t\t\t\t{[\"Most recent\", \"Popular\", \"Price high\", \"Price low\", \"On sale\"].map((option) => (\n\t\t\t\t\t<MenuItem key={option} onClick={() => handleSortSelect(option)}>\n\t\t\t\t\t\t<ListItemText primary={option} />\n\t\t\t\t\t</MenuItem>\n\t\t\t\t))}\n\t\t\t</Menu>\n\t\t</div>\n\t);\n}\n\nResults.propTypes = {\n\tclassName: PropTypes.string,\n\tprojects: PropTypes.array.isRequired,\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}