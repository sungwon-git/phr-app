{"ast":null,"code":"import _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Records/Header.js\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { Breadcrumbs // Button,\n, Grid, Link // Menu,\n// MenuItem,\n// SvgIcon,\n, Typography, makeStyles } from \"@material-ui/core\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\"; // import { Calendar as CalendarIcon } from \"react-feather\";\n// const timeRanges = [\n// \t{\n// \t\tvalue: \"today\",\n// \t\ttext: \"Today\",\n// \t},\n// \t{\n// \t\tvalue: \"yesterday\",\n// \t\ttext: \"Yesterday\",\n// \t},\n// \t{\n// \t\tvalue: \"last_30_days\",\n// \t\ttext: \"Last 30 days\",\n// \t},\n// \t{\n// \t\tvalue: \"last_year\",\n// \t\ttext: \"Last year\",\n// \t},\n// ];\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    actionIcon: {\n      marginRight: theme.spacing(1)\n    }\n  };\n});\n\nfunction Header(_ref) {\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles(); // const actionRef = useRef(null);\n  // const [isMenuOpen, setMenuOpen] = useState(false);\n  // const [timeRange, setTimeRange] = useState(timeRanges[2].text);\n\n  return /*#__PURE__*/React.createElement(Grid, Object.assign({\n    className: clsx(classes.root, className),\n    container: true,\n    justify: \"space-between\",\n    spacing: 3\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumbs, {\n    separator: /*#__PURE__*/React.createElement(NavigateNextIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }),\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    variant: \"body1\",\n    color: \"inherit\",\n    to: \"/phr\",\n    component: RouterLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }, \"PHR\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }, \"Document Dashboard\")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, \"Overview\")));\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\nHeader.defaultProps = {};\nexport default Header;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Records/Header.js"],"names":["React","Link","RouterLink","PropTypes","clsx","Breadcrumbs","Grid","Typography","makeStyles","NavigateNextIcon","useStyles","theme","root","actionIcon","marginRight","spacing","Header","className","rest","classes","propTypes","string","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SACCC,WADD,CAEC;AAFD,EAGCC,IAHD,EAICL,IAJD,CAKC;AACA;AACA;AAPD,EAQCM,UARD,EASCC,UATD,QAUO,mBAVP;AAWA,OAAOC,gBAAP,MAA6B,iCAA7B,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC,UAACG,KAAD;AAAA,SAAY;AACxCC,IAAAA,IAAI,EAAE,EADkC;AAExCC,IAAAA,UAAU,EAAE;AACXC,MAAAA,WAAW,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADF;AAF4B,GAAZ;AAAA,CAAD,CAA5B;;AAOA,SAASC,MAAT,OAAwC;AAAA,MAAtBC,SAAsB,QAAtBA,SAAsB;AAAA,MAARC,IAAQ;;AACvC,MAAMC,OAAO,GAAGT,SAAS,EAAzB,CADuC,CAEvC;AACA;AACA;;AAEA,sBACC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEN,IAAI,CAACe,OAAO,CAACP,IAAT,EAAeK,SAAf,CAArB;AAAgD,IAAA,SAAS,MAAzD;AAA0D,IAAA,OAAO,EAAC,eAAlE;AAAkF,IAAA,OAAO,EAAE;AAA3F,KAAkGC,IAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,WAAD;AAAa,IAAA,SAAS,eAAE,oBAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB;AAA+D,kBAAW,YAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,OAAd;AAAsB,IAAA,KAAK,EAAC,SAA5B;AAAsC,IAAA,EAAE,EAAC,MAAzC;AAAgD,IAAA,SAAS,EAAEhB,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADD,eAIC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJD,CADD,eASC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATD,CADD,CADD;AAiDA;;AAEDc,MAAM,CAACI,SAAP,GAAmB;AAClBH,EAAAA,SAAS,EAAEd,SAAS,CAACkB;AADH,CAAnB;AAIAL,MAAM,CAACM,YAAP,GAAsB,EAAtB;AAEA,eAAeN,MAAf","sourcesContent":["import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport {\n\tBreadcrumbs,\n\t// Button,\n\tGrid,\n\tLink,\n\t// Menu,\n\t// MenuItem,\n\t// SvgIcon,\n\tTypography,\n\tmakeStyles,\n} from \"@material-ui/core\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\n// import { Calendar as CalendarIcon } from \"react-feather\";\n\n// const timeRanges = [\n// \t{\n// \t\tvalue: \"today\",\n// \t\ttext: \"Today\",\n// \t},\n// \t{\n// \t\tvalue: \"yesterday\",\n// \t\ttext: \"Yesterday\",\n// \t},\n// \t{\n// \t\tvalue: \"last_30_days\",\n// \t\ttext: \"Last 30 days\",\n// \t},\n// \t{\n// \t\tvalue: \"last_year\",\n// \t\ttext: \"Last year\",\n// \t},\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {},\n\tactionIcon: {\n\t\tmarginRight: theme.spacing(1),\n\t},\n}));\n\nfunction Header({ className, ...rest }) {\n\tconst classes = useStyles();\n\t// const actionRef = useRef(null);\n\t// const [isMenuOpen, setMenuOpen] = useState(false);\n\t// const [timeRange, setTimeRange] = useState(timeRanges[2].text);\n\n\treturn (\n\t\t<Grid className={clsx(classes.root, className)} container justify=\"space-between\" spacing={3} {...rest}>\n\t\t\t<Grid item>\n\t\t\t\t<Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n\t\t\t\t\t<Link variant=\"body1\" color=\"inherit\" to=\"/phr\" component={RouterLink}>\n\t\t\t\t\t\tPHR\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Typography variant=\"body1\" color=\"textPrimary\">\n\t\t\t\t\t\tDocument Dashboard\n\t\t\t\t\t</Typography>\n\t\t\t\t</Breadcrumbs>\n\t\t\t\t<Typography variant=\"h3\" color=\"textPrimary\">\n\t\t\t\t\tOverview\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t{/* <Grid item>\n\t\t\t\t<Button ref={actionRef} onClick={() => setMenuOpen(true)}>\n\t\t\t\t\t<SvgIcon fontSize=\"small\" className={classes.actionIcon}>\n\t\t\t\t\t\t<CalendarIcon />\n\t\t\t\t\t</SvgIcon>\n\t\t\t\t\t{timeRange}\n\t\t\t\t</Button>\n\t\t\t\t<Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          PaperProps={{ className: classes.menu }}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {timeRanges.map((t) => (\n            <MenuItem\n              key={t.value}\n              onClick={() => setTimeRange(t.text)}\n            >\n              {t.text}\n            </MenuItem>\n          ))}\n        </Menu>\n\t\t\t</Grid> */}\n\t\t</Grid>\n\t);\n}\n\nHeader.propTypes = {\n\tclassName: PropTypes.string,\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}