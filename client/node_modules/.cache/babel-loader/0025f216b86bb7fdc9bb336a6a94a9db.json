{"ast":null,"code":"import React, { useRef, useState, useEffect, Component, useContext } from 'react';\nimport { createPortal } from 'react-dom';\nimport clsx from 'clsx';\nimport { withStyles, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\nimport Collapse from '@material-ui/core/Collapse';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar SnackbarContext = /*#__PURE__*/React.createContext();\nvar allClasses = {\n  mui: {\n    root: {},\n    anchorOriginTopCenter: {},\n    anchorOriginBottomCenter: {},\n    anchorOriginTopRight: {},\n    anchorOriginBottomRight: {},\n    anchorOriginTopLeft: {},\n    anchorOriginBottomLeft: {}\n  },\n  container: {\n    containerRoot: {},\n    containerAnchorOriginTopCenter: {},\n    containerAnchorOriginBottomCenter: {},\n    containerAnchorOriginTopRight: {},\n    containerAnchorOriginBottomRight: {},\n    containerAnchorOriginTopLeft: {},\n    containerAnchorOriginBottomLeft: {}\n  }\n};\nvar MESSAGES = {\n  NO_PERSIST_ALL: 'WARNING - notistack: Reached maxSnack while all enqueued snackbars have \\'persist\\' flag. Notistack will dismiss the oldest snackbar anyway to allow other ones in the queue to be presented.'\n};\nvar SNACKBAR_INDENTS = {\n  view: {\n    \"default\": 20,\n    dense: 4\n  },\n  snackbar: {\n    \"default\": 6,\n    dense: 2\n  }\n};\n\nvar capitalise = function capitalise(text) {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n};\n\nvar originKeyExtractor = function originKeyExtractor(anchor) {\n  return \"\" + capitalise(anchor.vertical) + capitalise(anchor.horizontal);\n};\n/**\r\n * Omit SnackbarContainer class keys that are not needed for SnackbarItem\r\n */\n\n\nvar omitContainerKeys = function omitContainerKeys(classes) {\n  return (// @ts-ignore\n    Object.keys(classes).filter(function (key) {\n      return !allClasses.container[key];\n    }).reduce(function (obj, key) {\n      var _extends2;\n\n      return _extends({}, obj, (_extends2 = {}, _extends2[key] = classes[key], _extends2));\n    }, {})\n  );\n};\n\nvar DEFAULTS = {\n  variant: 'default',\n  autoHideDuration: 5000,\n  anchorOrigin: {\n    vertical: 'bottom',\n    horizontal: 'left'\n  }\n};\n\nvar numberOrNull = function numberOrNull(numberish) {\n  return typeof numberish === 'number' || numberish === null;\n}; // @ts-ignore\n\n\nvar merge = function merge(options, props, defaults) {\n  return function (name) {\n    if (name === 'autoHideDuration') {\n      if (numberOrNull(options.autoHideDuration)) return options.autoHideDuration;\n      if (numberOrNull(props.autoHideDuration)) return props.autoHideDuration;\n      return DEFAULTS.autoHideDuration;\n    }\n\n    return options[name] || props[name] || defaults[name];\n  };\n};\n\nvar REASONS = {\n  CLICKAWAY: 'clickaway',\n  MAXSNACK: 'maxsnack',\n  INSTRUCTED: 'instructed'\n};\nvar DIRECTION = {\n  right: 'left',\n  left: 'right',\n  bottom: 'up',\n  top: 'down'\n};\n\nvar getTransitionDirection = function getTransitionDirection(anchorOrigin) {\n  if (anchorOrigin.horizontal !== 'center') {\n    return DIRECTION[anchorOrigin.horizontal];\n  }\n\n  return DIRECTION[anchorOrigin.vertical];\n};\n/**\r\n * Omit all class keys except those allowed in material-ui snackbar\r\n */\n\n\nvar omitNonMuiKeys = function omitNonMuiKeys(classes) {\n  var snackbarMuiClasses = Object.keys(classes) // @ts-ignore\n  .filter(function (key) {\n    return allClasses.mui[key] !== undefined;\n  }).reduce(function (obj, key) {\n    var _extends2;\n\n    return _extends({}, obj, (_extends2 = {}, _extends2[key] = classes[key], _extends2));\n  }, {});\n  return _extends({}, snackbarMuiClasses, {\n    root: clsx(classes.root, classes.wrappedRoot)\n  });\n};\n/**\r\n * Omit all class keys except what we need for collapse component\r\n */\n\n\nvar omitNonCollapseKeys = function omitNonCollapseKeys(classes, dense) {\n  return {\n    container: classes.collapseContainer,\n    wrapper: clsx(classes.collapseWrapper, dense && classes.collapseWrapperDense)\n  };\n};\n/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/utils/createChainedFunction.js\n */\n\n\nfunction createChainedFunction(funcs, extraArg) {\n  return funcs.reduce(function (acc, func) {\n    if (func == null) return acc;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        // eslint-disable-next-line no-console\n        console.error('Invalid Argument Type. must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var argums = [].concat(args);\n\n      if (extraArg && argums.indexOf(extraArg) === -1) {\n        argums.push(extraArg);\n      }\n\n      acc.apply(this, argums);\n      func.apply(this, argums);\n    };\n  }, function () {});\n}\n\nvar styles = function styles(theme) {\n  var _collapseContainer;\n\n  return createStyles(_extends({}, allClasses.mui, {\n    lessPadding: {\n      paddingLeft: 8 * 2.5\n    },\n    variantSuccess: {\n      backgroundColor: '#43a047',\n      color: '#fff'\n    },\n    variantError: {\n      backgroundColor: '#d32f2f',\n      color: '#fff'\n    },\n    variantInfo: {\n      backgroundColor: '#2196f3',\n      color: '#fff'\n    },\n    variantWarning: {\n      backgroundColor: '#ff9800',\n      color: '#fff'\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    wrappedRoot: {\n      position: 'relative',\n      transform: 'translateX(0)',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n    collapseContainer: (_collapseContainer = {}, _collapseContainer[theme.breakpoints.down('xs')] = {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1)\n    }, _collapseContainer),\n    collapseWrapper: {\n      transition: theme.transitions.create(['margin-bottom'], {\n        easing: 'ease'\n      }),\n      marginTop: SNACKBAR_INDENTS.snackbar[\"default\"],\n      marginBottom: SNACKBAR_INDENTS.snackbar[\"default\"]\n    },\n    collapseWrapperDense: {\n      marginTop: SNACKBAR_INDENTS.snackbar.dense,\n      marginBottom: SNACKBAR_INDENTS.snackbar.dense\n    }\n  }));\n};\n\nvar SnackbarItem = function SnackbarItem(_ref) {\n  var classes = _ref.classes,\n      props = _objectWithoutPropertiesLoose(_ref, [\"classes\"]);\n\n  var timeout = useRef();\n\n  var _useState = useState(true),\n      collapsed = _useState[0],\n      setCollapsed = _useState[1];\n\n  useEffect(function () {\n    return function () {\n      if (timeout.current) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, []);\n  var handleClose = createChainedFunction([props.snack.onClose, props.onClose], props.snack.key);\n\n  var handleEntered = function handleEntered() {\n    if (props.snack.requestClose) {\n      handleClose(null, REASONS.INSTRCUTED);\n    }\n  };\n\n  var handleExitedScreen = function handleExitedScreen() {\n    timeout.current = setTimeout(function () {\n      setCollapsed(!collapsed);\n    }, 125);\n  };\n\n  var callbacks = ['onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].reduce(function (acc, cbName) {\n    var _extends2;\n\n    return _extends({}, acc, (_extends2 = {}, _extends2[cbName] = createChainedFunction([props.snack[cbName], props[cbName]], props.snack.key), _extends2));\n  }, {});\n\n  var action = props.action,\n      content = props.content,\n      _props$ContentProps = props.ContentProps,\n      ContentProps = _props$ContentProps === void 0 ? {} : _props$ContentProps,\n      hideIconVariant = props.hideIconVariant,\n      iconVariant = props.iconVariant,\n      snack = props.snack,\n      dense = props.dense,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Slide : _props$TransitionComp,\n      _props$TransitionProp = props.TransitionProps,\n      otherTransitionProps = _props$TransitionProp === void 0 ? {} : _props$TransitionProp,\n      other = _objectWithoutPropertiesLoose(props, [\"action\", \"content\", \"ContentProps\", \"hideIconVariant\", \"iconVariant\", \"snack\", \"dense\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var contentAction = ContentProps.action,\n      className = ContentProps.className,\n      otherContentProps = _objectWithoutPropertiesLoose(ContentProps, [\"action\", \"className\"]);\n\n  var key = snack.key,\n      variant = snack.variant,\n      singleContent = snack.content,\n      singleAction = snack.action,\n      _snack$ContentProps = snack.ContentProps,\n      singleContentProps = _snack$ContentProps === void 0 ? {} : _snack$ContentProps,\n      anchorOrigin = snack.anchorOrigin,\n      _snack$TransitionProp = snack.TransitionProps,\n      singleTransitionProps = _snack$TransitionProp === void 0 ? {} : _snack$TransitionProp,\n      singleSnackProps = _objectWithoutPropertiesLoose(snack, [\"key\", \"persist\", \"entered\", \"requestClose\", \"variant\", \"content\", \"action\", \"ContentProps\", \"anchorOrigin\", \"TransitionProps\"]);\n\n  var icon = iconVariant[variant];\n\n  var contentProps = _extends({}, otherContentProps, {}, singleContentProps, {\n    action: singleAction || singleContentProps.action || contentAction || action\n  });\n\n  var transitionProps = _extends({\n    direction: getTransitionDirection(anchorOrigin)\n  }, otherTransitionProps, {}, singleTransitionProps, {\n    onExited: handleExitedScreen\n  });\n\n  var ariaDescribedby = contentProps['aria-describedby'] || 'client-snackbar';\n  var finalAction = contentProps.action;\n\n  if (typeof finalAction === 'function') {\n    // @ts-ignore\n    finalAction = contentProps.action(key);\n  }\n\n  var snackContent = singleContent || content;\n\n  if (snackContent && typeof snackContent === 'function') {\n    snackContent = snackContent(key, snack.message);\n  }\n\n  return React.createElement(Collapse, {\n    unmountOnExit: true,\n    timeout: 175,\n    \"in\": collapsed,\n    classes: omitNonCollapseKeys(classes, dense),\n    onExited: callbacks.onExited\n  }, React.createElement(Snackbar // @ts-ignore\n  , Object.assign({\n    // @ts-ignore\n    TransitionComponent: TransitionComponent\n  }, other, singleSnackProps, {\n    open: snack.open,\n    anchorOrigin: anchorOrigin,\n    TransitionProps: transitionProps,\n    classes: omitNonMuiKeys(classes),\n    onClose: handleClose,\n    onExit: callbacks.onExit,\n    onExiting: callbacks.onExiting,\n    onEnter: callbacks.onEnter,\n    onEntering: callbacks.onEntering,\n    // order matters. first callbacks.onEntered to set entered: true,\n    // then handleEntered to check if there's a request for closing\n    onEntered: createChainedFunction([callbacks.onEntered, handleEntered])\n  }), snackContent || React.createElement(SnackbarContent, Object.assign({\n    className: clsx(classes[\"variant\" + capitalise(variant)], className, !hideIconVariant && icon && classes.lessPadding)\n  }, contentProps, {\n    \"aria-describedby\": ariaDescribedby,\n    message: React.createElement(\"span\", {\n      id: ariaDescribedby,\n      className: classes.message\n    }, !hideIconVariant ? icon : null, snack.message),\n    action: finalAction\n  }))));\n};\n\nvar SnackbarItem$1 = /*#__PURE__*/withStyles(styles)(SnackbarItem);\nvar useStyle = /*#__PURE__*/makeStyles(function (theme) {\n  var _root, _center;\n\n  return {\n    root: (_root = {\n      boxSizing: 'border-box',\n      display: 'flex',\n      maxHeight: '100%',\n      maxWidth: '100%',\n      position: 'fixed',\n      flexDirection: 'column',\n      zIndex: theme.zIndex.snackbar,\n      height: 'auto',\n      width: 'auto',\n      minWidth: 288,\n      transition: theme.transitions.create(['top', 'right', 'bottom', 'left'], {\n        easing: 'ease'\n      })\n    }, _root[theme.breakpoints.down('xs')] = {\n      left: '0 !important',\n      right: '0 !important',\n      width: '100%'\n    }, _root),\n    reverseColumns: {\n      flexDirection: 'column-reverse'\n    },\n    top: {\n      top: SNACKBAR_INDENTS.view[\"default\"] - SNACKBAR_INDENTS.snackbar[\"default\"]\n    },\n    topDense: {\n      top: SNACKBAR_INDENTS.view.dense - SNACKBAR_INDENTS.snackbar.dense\n    },\n    bottom: {\n      bottom: SNACKBAR_INDENTS.view[\"default\"] - SNACKBAR_INDENTS.snackbar[\"default\"]\n    },\n    bottomDense: {\n      bottom: SNACKBAR_INDENTS.view.dense - SNACKBAR_INDENTS.snackbar.dense\n    },\n    left: {\n      left: SNACKBAR_INDENTS.view[\"default\"]\n    },\n    leftDense: {\n      left: SNACKBAR_INDENTS.view.dense\n    },\n    right: {\n      right: SNACKBAR_INDENTS.view[\"default\"]\n    },\n    rightDense: {\n      right: SNACKBAR_INDENTS.view.dense\n    },\n    center: (_center = {\n      left: '50%',\n      transform: 'translateX(-50%)'\n    }, _center[theme.breakpoints.down('xs')] = {\n      transform: 'translateX(0)'\n    }, _center)\n  };\n});\n\nvar SnackbarContainer = function SnackbarContainer(props) {\n  var classes = useStyle();\n\n  var className = props.className,\n      anchorOrigin = props.anchorOrigin,\n      dense = props.dense,\n      other = _objectWithoutPropertiesLoose(props, [\"className\", \"anchorOrigin\", \"dense\"]);\n\n  var combinedClassname = clsx(classes.root, classes[anchorOrigin.vertical], classes[anchorOrigin.horizontal], // @ts-ignore\n  classes[\"\" + anchorOrigin.vertical + (dense ? 'Dense' : '')], // @ts-ignore\n  classes[\"\" + anchorOrigin.horizontal + (dense ? 'Dense' : '')], className, anchorOrigin.vertical === 'bottom' && classes.reverseColumns);\n  return React.createElement(\"div\", Object.assign({\n    className: combinedClassname\n  }, other));\n};\n\nvar SnackbarContainer$1 = /*#__PURE__*/React.memo(SnackbarContainer);\n/* eslint-disable */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function warning(message) {\n  if (!__DEV__) return;\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n};\n\nvar CheckIcon = function CheckIcon(props) {\n  return React.createElement(SvgIcon, Object.assign({}, props), React.createElement(\"path\", {\n    d: \"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41\\n        10.59L10 14.17L17.59 6.58L19 8L10 17Z\"\n  }));\n};\n\nvar WarningIcon = function WarningIcon(props) {\n  return React.createElement(SvgIcon, Object.assign({}, props), React.createElement(\"path\", {\n    d: \"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\"\n  }));\n};\n\nvar ErrorIcon = function ErrorIcon(props) {\n  return React.createElement(SvgIcon, Object.assign({}, props), React.createElement(\"path\", {\n    d: \"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\\n        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\\n        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\"\n  }));\n};\n\nvar InfoIcon = function InfoIcon(props) {\n  return React.createElement(SvgIcon, Object.assign({}, props), React.createElement(\"path\", {\n    d: \"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,\\n        0 22,12A10,10 0 0,0 12,2Z\"\n  }));\n};\n\nvar iconStyles = {\n  fontSize: 20,\n  marginInlineEnd: 8\n};\nvar defaultIconVariants = {\n  success: /*#__PURE__*/React.createElement(CheckIcon, {\n    style: iconStyles\n  }),\n  warning: /*#__PURE__*/React.createElement(WarningIcon, {\n    style: iconStyles\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorIcon, {\n    style: iconStyles\n  }),\n  info: /*#__PURE__*/React.createElement(InfoIcon, {\n    style: iconStyles\n  })\n};\n\nvar SnackbarProvider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(SnackbarProvider, _Component);\n\n  function SnackbarProvider(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    /**\r\n     * Adds a new snackbar to the queue to be presented.\r\n     * Returns generated or user defined key referencing the new snackbar or null\r\n     */\n\n    _this.enqueueSnackbar = function (message, _ref) {\n      if (_ref === void 0) {\n        _ref = {};\n      }\n\n      var _ref2 = _ref,\n          key = _ref2.key,\n          preventDuplicate = _ref2.preventDuplicate,\n          options = _objectWithoutPropertiesLoose(_ref2, [\"key\", \"preventDuplicate\"]);\n\n      var hasSpecifiedKey = key || key === 0;\n      var id = hasSpecifiedKey ? key : new Date().getTime() + Math.random();\n      var merger = merge(options, _this.props, DEFAULTS);\n\n      var snack = _extends({\n        key: id\n      }, options, {\n        message: message,\n        open: true,\n        entered: false,\n        requestClose: false,\n        variant: merger('variant'),\n        anchorOrigin: merger('anchorOrigin'),\n        autoHideDuration: merger('autoHideDuration')\n      });\n\n      if (options.persist) {\n        snack.autoHideDuration = undefined;\n      }\n\n      _this.setState(function (state) {\n        if (preventDuplicate === undefined && _this.props.preventDuplicate || preventDuplicate) {\n          var compareFunction = function compareFunction(item) {\n            return hasSpecifiedKey ? item.key === key : item.message === message;\n          };\n\n          var inQueue = state.queue.findIndex(compareFunction) > -1;\n          var inView = state.snacks.findIndex(compareFunction) > -1;\n\n          if (inQueue || inView) {\n            return state;\n          }\n        }\n\n        return _this.handleDisplaySnack(_extends({}, state, {\n          queue: [].concat(state.queue, [snack])\n        }));\n      });\n\n      return id;\n    };\n    /**\r\n     * Reducer: Display snack if there's space for it. Otherwise, immediately\r\n     * begin dismissing the oldest message to start showing the new one.\r\n     */\n\n\n    _this.handleDisplaySnack = function (state) {\n      var snacks = state.snacks;\n\n      if (snacks.length >= _this.maxSnack) {\n        return _this.handleDismissOldest(state);\n      }\n\n      return _this.processQueue(state);\n    };\n    /**\r\n     * Reducer: Display items (notifications) in the queue if there's space for them.\r\n     */\n\n\n    _this.processQueue = function (state) {\n      var queue = state.queue,\n          snacks = state.snacks;\n\n      if (queue.length > 0) {\n        return _extends({}, state, {\n          snacks: [].concat(snacks, [queue[0]]),\n          queue: queue.slice(1, queue.length)\n        });\n      }\n\n      return state;\n    };\n    /**\r\n     * Reducer: Hide oldest snackbar on the screen because there exists a new one which we have to display.\r\n     * (ignoring the one with 'persist' flag. i.e. explicitly told by user not to get dismissed).\r\n     *\r\n     * Note 1: If there is already a message leaving the screen, no new messages are dismissed.\r\n     * Note 2: If the oldest message has not yet entered the screen, only a request to close the\r\n     *         snackbar is made. Once it entered the screen, it will be immediately dismissed.\r\n     */\n\n\n    _this.handleDismissOldest = function (state) {\n      if (state.snacks.some(function (item) {\n        return !item.open || item.requestClose;\n      })) {\n        return state;\n      }\n\n      var popped = false;\n      var ignore = false;\n      var persistentCount = state.snacks.reduce(function (acc, current) {\n        return acc + (current.open && current.persist ? 1 : 0);\n      }, 0);\n\n      if (persistentCount === _this.maxSnack) {\n        process.env.NODE_ENV !== \"production\" ? warning(MESSAGES.NO_PERSIST_ALL) : void 0;\n        ignore = true;\n      }\n\n      var snacks = state.snacks.map(function (item) {\n        if (!popped && (!item.persist || ignore)) {\n          popped = true;\n\n          if (!item.entered) {\n            return _extends({}, item, {\n              requestClose: true\n            });\n          }\n\n          if (item.onClose) item.onClose(null, REASONS.MAXSNACK, item.key);\n          if (_this.props.onClose) _this.props.onClose(null, REASONS.MAXSNACK, item.key);\n          return _extends({}, item, {\n            open: false\n          });\n        }\n\n        return _extends({}, item);\n      });\n      return _extends({}, state, {\n        snacks: snacks\n      });\n    };\n    /**\r\n     * Set the entered state of the snackbar with the given key.\r\n     */\n\n\n    _this.handleEnteredSnack = function (node, isAppearing, key) {\n      if (!key) {\n        throw new Error('handleEnteredSnack Cannot be called with undefined key');\n      }\n\n      _this.setState(function (_ref3) {\n        var snacks = _ref3.snacks;\n        return {\n          snacks: snacks.map(function (item) {\n            return item.key === key ? _extends({}, item, {\n              entered: true\n            }) : _extends({}, item);\n          })\n        };\n      });\n    };\n    /**\r\n     * Hide a snackbar after its timeout.\r\n     */\n\n\n    _this.handleCloseSnack = function (event, reason, key) {\n      if (_this.props.onClose) {\n        _this.props.onClose(event, reason, key);\n      }\n\n      if (reason === REASONS.CLICKAWAY) return;\n      var shouldCloseAll = key === undefined;\n\n      _this.setState(function (_ref4) {\n        var snacks = _ref4.snacks,\n            queue = _ref4.queue;\n        return {\n          snacks: snacks.map(function (item) {\n            if (!shouldCloseAll && item.key !== key) {\n              return _extends({}, item);\n            }\n\n            return item.entered ? _extends({}, item, {\n              open: false\n            }) : _extends({}, item, {\n              requestClose: true\n            });\n          }),\n          queue: queue.filter(function (item) {\n            return item.key !== key;\n          })\n        };\n      });\n    };\n    /**\r\n     * Close snackbar with the given key\r\n     */\n\n\n    _this.closeSnackbar = function (key) {\n      // call individual snackbar onClose callback passed through options parameter\n      var toBeClosed = _this.state.snacks.find(function (item) {\n        return item.key === key;\n      });\n\n      if (key && toBeClosed && toBeClosed.onClose) {\n        toBeClosed.onClose(null, REASONS.INSTRUCTED, key);\n      }\n\n      _this.handleCloseSnack(null, REASONS.INSTRUCTED, key);\n    };\n    /**\r\n     * When we set open attribute of a snackbar to false (i.e. after we hide a snackbar),\r\n     * it leaves the screen and immediately after leaving animation is done, this method\r\n     * gets called. We remove the hidden snackbar from state and then display notifications\r\n     * waiting in the queue (if any). If after this process the queue is not empty, the\r\n     * oldest message is dismissed.\r\n     */\n    // @ts-ignore\n\n\n    _this.handleExitedSnack = function (event, key1, key2) {\n      var key = key1 || key2;\n\n      if (!key) {\n        throw new Error('handleExitedSnack Cannot be called with undefined key');\n      }\n\n      _this.setState(function (state) {\n        var newState = _this.processQueue(_extends({}, state, {\n          snacks: state.snacks.filter(function (item) {\n            return item.key !== key;\n          })\n        }));\n\n        if (newState.queue.length === 0) {\n          return newState;\n        }\n\n        return _this.handleDismissOldest(newState);\n      });\n    };\n\n    _this.state = {\n      snacks: [],\n      queue: [],\n      contextValue: {\n        enqueueSnackbar: _this.enqueueSnackbar,\n        closeSnackbar: _this.closeSnackbar\n      }\n    };\n    return _this;\n  }\n\n  var _proto = SnackbarProvider.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var contextValue = this.state.contextValue;\n\n    var _this$props = this.props,\n        domRoot = _this$props.domRoot,\n        children = _this$props.children,\n        _this$props$classes = _this$props.classes,\n        classes = _this$props$classes === void 0 ? {} : _this$props$classes,\n        _this$props$dense = _this$props.dense,\n        dense = _this$props$dense === void 0 ? false : _this$props$dense,\n        _this$props$hideIconV = _this$props.hideIconVariant,\n        hideIconVariant = _this$props$hideIconV === void 0 ? false : _this$props$hideIconV,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"variant\", \"maxSnack\", \"anchorOrigin\", \"preventDuplicate\", \"domRoot\", \"children\", \"classes\", \"dense\", \"hideIconVariant\"]);\n\n    var categ = this.state.snacks.reduce(function (acc, current) {\n      var _extends2;\n\n      var category = originKeyExtractor(current.anchorOrigin);\n      var existingOfCategory = acc[category] || [];\n      return _extends({}, acc, (_extends2 = {}, _extends2[category] = [].concat(existingOfCategory, [current]), _extends2));\n    }, {});\n\n    var iconVariant = _extends({}, defaultIconVariants, {}, this.props.iconVariant);\n\n    var snackbars = Object.keys(categ).map(function (origin) {\n      var snacks = categ[origin];\n      return React.createElement(SnackbarContainer$1, {\n        key: origin,\n        dense: dense,\n        anchorOrigin: snacks[0].anchorOrigin,\n        className: clsx(classes.containerRoot, classes[\"containerAnchorOrigin\" + origin])\n      }, snacks.map(function (snack) {\n        return React.createElement(SnackbarItem$1, Object.assign({}, props, {\n          key: snack.key,\n          dense: dense,\n          snack: snack,\n          hideIconVariant: hideIconVariant,\n          iconVariant: iconVariant,\n          classes: omitContainerKeys(classes),\n          onClose: _this2.handleCloseSnack,\n          onExited: createChainedFunction([_this2.handleExitedSnack, _this2.props.onExited]),\n          onEntered: createChainedFunction([_this2.handleEnteredSnack, _this2.props.onEntered])\n        }));\n      }));\n    });\n    return React.createElement(SnackbarContext.Provider, {\n      value: contextValue\n    }, children, domRoot ? createPortal(snackbars, domRoot) : snackbars);\n  };\n\n  _createClass(SnackbarProvider, [{\n    key: \"maxSnack\",\n    get: function get() {\n      return this.props.maxSnack || 3;\n    }\n  }]);\n\n  return SnackbarProvider;\n}(Component); // https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3\n\n\nvar fnNameMatchRegex = /^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^(\\s/]*)\\s*/;\n\nvar getFunctionName = function getFunctionName(fn) {\n  var match = (\"\" + fn).match(fnNameMatchRegex);\n  var name = match && match[1];\n  return name || '';\n};\n/**\n * @param {function} Component\n * @param {string} fallback\n * @returns {string | undefined}\n */\n\n\nvar getFunctionComponentName = function getFunctionComponentName(Component, fallback) {\n  if (fallback === void 0) {\n    fallback = '';\n  }\n\n  return Component.displayName || Component.name || getFunctionName(Component) || fallback;\n};\n\nvar getWrappedName = function getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = getFunctionComponentName(innerType);\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n};\n/** \n * From react-is\n * @link https://github.com/facebook/react/blob/master/packages/shared/ReactSymbols.js\n */\n\n\nvar ForwardRef = function ForwardRef() {\n  var symbolFor = typeof Symbol === 'function' && Symbol[\"for\"];\n  return symbolFor ? symbolFor('react.forward_ref') : 0xead0;\n};\n/**\n * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js\n *\n * @param {React.ReactType} Component\n * @returns {string | undefined}\n */\n\n\nvar getDisplayName = function getDisplayName(Component) {\n  if (Component == null) {\n    return undefined;\n  }\n\n  if (typeof Component === 'string') {\n    return Component;\n  }\n\n  if (typeof Component === 'function') {\n    return getFunctionComponentName(Component, 'Component');\n  }\n\n  if (typeof Component === 'object') {\n    switch (Component.$$typeof) {\n      case ForwardRef():\n        return getWrappedName(Component, Component.render, 'ForwardRef');\n\n      default:\n        return undefined;\n    }\n  }\n\n  return undefined;\n};\n\nvar withSnackbar = function withSnackbar(Component) {\n  var WrappedComponent = React.forwardRef(function (props, ref) {\n    return React.createElement(SnackbarContext.Consumer, null, function (context) {\n      return React.createElement(Component, _extends({}, props, {\n        ref: ref,\n        enqueueSnackbar: context.enqueueSnackbar,\n        closeSnackbar: context.closeSnackbar\n      }));\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    WrappedComponent.displayName = \"WithSnackbar(\" + getDisplayName(Component) + \")\";\n  }\n\n  hoistNonReactStatics(WrappedComponent, Component);\n  return WrappedComponent;\n};\n\nvar useSnackbar = function useSnackbar() {\n  return useContext(SnackbarContext);\n};\n\nexport { SnackbarProvider, useSnackbar, withSnackbar };","map":{"version":3,"sources":["../src/SnackbarContext.ts","../src/utils/constants.ts","../src/SnackbarItem/SnackbarItem.util.ts","../src/utils/createChainedFunction.js","../src/SnackbarItem/SnackbarItem.tsx","../src/SnackbarContainer.tsx","../src/utils/warning.ts","../src/utils/defaultIconVariants.tsx","../src/SnackbarProvider.tsx","../src/utils/getDisplayName.js","../src/withSnackbar.js","../src/useSnackbar.ts"],"names":["React","allClasses","mui","root","anchorOriginTopCenter","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","container","containerRoot","containerAnchorOriginTopCenter","containerAnchorOriginBottomCenter","containerAnchorOriginTopRight","containerAnchorOriginBottomRight","containerAnchorOriginTopLeft","containerAnchorOriginBottomLeft","MESSAGES","NO_PERSIST_ALL","SNACKBAR_INDENTS","view","dense","snackbar","capitalise","text","originKeyExtractor","anchor","omitContainerKeys","Object","classes","DEFAULTS","variant","autoHideDuration","anchorOrigin","vertical","horizontal","numberOrNull","numberish","merge","name","options","props","defaults","REASONS","CLICKAWAY","MAXSNACK","INSTRUCTED","DIRECTION","right","left","bottom","top","getTransitionDirection","omitNonMuiKeys","snackbarMuiClasses","clsx","omitNonCollapseKeys","wrapper","func","process","console","args","argums","extraArg","acc","styles","createStyles","lessPadding","paddingLeft","variantSuccess","backgroundColor","color","variantError","variantInfo","variantWarning","message","display","alignItems","wrappedRoot","position","transform","collapseContainer","theme","paddingRight","collapseWrapper","transition","easing","marginTop","marginBottom","collapseWrapperDense","SnackbarItem","timeout","useRef","collapsed","setCollapsed","useState","useEffect","clearTimeout","handleClose","createChainedFunction","handleEntered","handleExitedScreen","setTimeout","callbacks","action","content","ContentProps","hideIconVariant","iconVariant","snack","TransitionComponent","Slide","TransitionProps","otherTransitionProps","other","contentAction","className","otherContentProps","key","singleContent","singleAction","singleContentProps","singleTransitionProps","singleSnackProps","icon","contentProps","transitionProps","direction","onExited","ariaDescribedby","finalAction","snackContent","unmountOnExit","open","onClose","onExit","onExiting","onEnter","onEntering","onEntered","id","withStyles","useStyle","makeStyles","boxSizing","maxHeight","maxWidth","flexDirection","zIndex","height","width","minWidth","reverseColumns","topDense","bottomDense","leftDense","rightDense","center","SnackbarContainer","combinedClassname","__DEV__","CheckIcon","d","WarningIcon","ErrorIcon","InfoIcon","iconStyles","fontSize","marginInlineEnd","defaultIconVariants","success","style","warning","error","info","SnackbarProvider","Component","snacks","queue","contextValue","enqueueSnackbar","closeSnackbar","preventDuplicate","hasSpecifiedKey","Math","merger","entered","requestClose","compareFunction","item","inQueue","state","inView","popped","ignore","persistentCount","current","reason","shouldCloseAll","toBeClosed","key1","newState","render","domRoot","children","categ","category","existingOfCategory","snackbars","origin","handleCloseSnack","SnackbarContext","value","createPortal","fnNameMatchRegex","getFunctionName","match","getFunctionComponentName","fallback","getWrappedName","functionName","outerType","wrapperName","ForwardRef","symbolFor","Symbol","withSnackbar","WrappedComponent","context","getDisplayName","hoistNonReactStatics","useContext"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ProviderContext } from '.';\n\n// @ts-ignore\nexport default React.createContext<ProviderContext>();\n","import { SnackbarClassKey } from '@material-ui/core/Snackbar';\nimport { CloseReason, ContainerClassKey, SnackbarProviderProps } from '../index';\nimport { SnackbarItemProps } from '../SnackbarItem';\nimport { Snack } from '../SnackbarProvider';\n\nexport const allClasses: {\n    mui: Record<SnackbarClassKey, {}>;\n    container: Record<ContainerClassKey, {}>;\n} = {\n    mui: {\n        root: {},\n        anchorOriginTopCenter: {},\n        anchorOriginBottomCenter: {},\n        anchorOriginTopRight: {},\n        anchorOriginBottomRight: {},\n        anchorOriginTopLeft: {},\n        anchorOriginBottomLeft: {},\n    },\n    container: {\n        containerRoot: {},\n        containerAnchorOriginTopCenter: {},\n        containerAnchorOriginBottomCenter: {},\n        containerAnchorOriginTopRight: {},\n        containerAnchorOriginBottomRight: {},\n        containerAnchorOriginTopLeft: {},\n        containerAnchorOriginBottomLeft: {},\n    },\n};\n\nexport const MESSAGES = {\n    NO_PERSIST_ALL: 'WARNING - notistack: Reached maxSnack while all enqueued snackbars have \\'persist\\' flag. Notistack will dismiss the oldest snackbar anyway to allow other ones in the queue to be presented.',\n};\n\nexport const SNACKBAR_INDENTS = {\n    view: { default: 20, dense: 4 },\n    snackbar: { default: 6, dense: 2 },\n};\n\nexport const capitalise = (text: string): string => text.charAt(0).toUpperCase() + text.slice(1);\n\nexport const originKeyExtractor = (anchor: Snack['anchorOrigin']): string => (\n    `${capitalise(anchor.vertical)}${capitalise(anchor.horizontal)}`\n);\n\n/**\n * Omit SnackbarContainer class keys that are not needed for SnackbarItem\n */\nexport const omitContainerKeys = (classes: SnackbarProviderProps['classes']): SnackbarItemProps['classes'] => (\n    // @ts-ignore\n    Object.keys(classes).filter(key => !allClasses.container[key]).reduce((obj, key) => ({ ...obj, [key]: classes[key] }), {})\n);\n\nexport const DEFAULTS = {\n    variant: 'default',\n    autoHideDuration: 5000,\n    anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left',\n    },\n};\n\nconst numberOrNull = (numberish?: number | null) => (\n    typeof numberish === 'number' || numberish === null\n);\n\n// @ts-ignore\nexport const merge = (options, props, defaults) => (name: keyof Snack): any => {\n    if (name === 'autoHideDuration') {\n        if (numberOrNull(options.autoHideDuration)) return options.autoHideDuration;\n        if (numberOrNull(props.autoHideDuration)) return props.autoHideDuration;\n        return DEFAULTS.autoHideDuration;\n    }\n\n    return options[name] || props[name] || defaults[name];\n};\n\nexport const REASONS: { [key: string]: CloseReason } = {\n    CLICKAWAY: 'clickaway',\n    MAXSNACK: 'maxsnack',\n    INSTRUCTED: 'instructed',\n};\n","import clsx from 'clsx';\nimport { SnackbarProps } from '@material-ui/core/Snackbar';\nimport { allClasses } from '../utils/constants';\nimport { SnackbarItemProps } from './SnackbarItem';\nimport { Snack } from '../SnackbarProvider';\n\nconst DIRECTION = {\n    right: 'left',\n    left: 'right',\n    bottom: 'up',\n    top: 'down',\n} as const;\nexport type DirectionType = typeof DIRECTION[keyof typeof DIRECTION]\n\nexport const getTransitionDirection = (anchorOrigin: Snack['anchorOrigin']): DirectionType => {\n    if (anchorOrigin.horizontal !== 'center') {\n        return DIRECTION[anchorOrigin.horizontal];\n    }\n    return DIRECTION[anchorOrigin.vertical];\n};\n\n/**\n * Omit all class keys except those allowed in material-ui snackbar\n */\nexport const omitNonMuiKeys: (classes: { wrappedRoot: string } & SnackbarProps['classes']) => SnackbarProps['classes'] = (classes) => {\n    const snackbarMuiClasses = Object.keys(classes)\n        // @ts-ignore\n        .filter(key => allClasses.mui[key] !== undefined).reduce((obj, key) => ({ ...obj, [key]: classes[key] }), {});\n\n    return {\n        ...snackbarMuiClasses,\n        root: clsx(classes.root, classes.wrappedRoot),\n    };\n};\n\n/**\n * Omit all class keys except what we need for collapse component\n */\nexport const omitNonCollapseKeys = (classes: SnackbarItemProps['classes'], dense: SnackbarItemProps['dense']): { container: string; wrapper: string } => ({\n    container: classes.collapseContainer,\n    wrapper: clsx(classes.collapseWrapper, { [classes.collapseWrapperDense]: dense }),\n});\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/utils/createChainedFunction.js\n */\nexport default function createChainedFunction(funcs, extraArg) {\n    return funcs.reduce((acc, func) => {\n        if (func == null) return acc;\n\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof func !== 'function') {\n                // eslint-disable-next-line no-console\n                console.error('Invalid Argument Type. must only provide functions, undefined, or null.');\n            }\n        }\n\n        return function chainedFunction(...args) {\n            const argums = [...args];\n            if (extraArg && argums.indexOf(extraArg) === -1) {\n                argums.push(extraArg);\n            }\n            acc.apply(this, argums);\n            func.apply(this, argums);\n        };\n    }, () => { });\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { withStyles, WithStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\nimport Collapse from '@material-ui/core/Collapse';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { getTransitionDirection, omitNonMuiKeys, omitNonCollapseKeys } from './SnackbarItem.util';\nimport { capitalise, allClasses, REASONS, SNACKBAR_INDENTS } from '../utils/constants';\nimport { SnackbarProviderProps, OptionalBy, SharedProps, RequiredBy, IconVariant, VariantClassKey, TransitionHandlerProps } from '../index';\nimport { Snack } from '../SnackbarProvider';\nimport createChainedFunction from '../utils/createChainedFunction';\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst styles = (theme: Theme) => createStyles({\n    ...allClasses.mui,\n    lessPadding: {\n        paddingLeft: 8 * 2.5,\n    },\n    variantSuccess: {\n        backgroundColor: '#43a047', // green\n        color: '#fff',\n    },\n    variantError: {\n        backgroundColor: '#d32f2f', // dark red\n        color: '#fff',\n    },\n    variantInfo: {\n        backgroundColor: '#2196f3', // nice blue\n        color: '#fff',\n    },\n    variantWarning: {\n        backgroundColor: '#ff9800', // amber\n        color: '#fff',\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    wrappedRoot: {\n        position: 'relative',\n        transform: 'translateX(0)',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n    collapseContainer: {\n        [theme.breakpoints.down('xs')]: {\n            paddingLeft: theme.spacing(1),\n            paddingRight: theme.spacing(1),\n        },\n    },\n    collapseWrapper: {\n        transition: theme.transitions.create(['margin-bottom'], { easing: 'ease' }),\n        marginTop: SNACKBAR_INDENTS.snackbar.default,\n        marginBottom: SNACKBAR_INDENTS.snackbar.default,\n    },\n    collapseWrapperDense: {\n        marginTop: SNACKBAR_INDENTS.snackbar.dense,\n        marginBottom: SNACKBAR_INDENTS.snackbar.dense,\n    },\n});\n\n\ntype RemovedProps =\n    /** the one received from Provider is processed and passed to snack prop */\n    | 'variant'\n    /** same as above */\n    | 'anchorOrigin'\n    /** the one recevied from enqueueSnackbar is processed in provider, therefore shouldn't be passed to SnackbarItem */\n    | 'preventDuplicate'\n\n\nexport interface SnackbarItemProps extends WithStyles<typeof styles>, RequiredBy<Omit<SharedProps, RemovedProps>, 'onEntered' | 'onExited' | 'onClose'> {\n    snack: Snack;\n    dense: SnackbarProviderProps['dense'];\n    iconVariant: OptionalBy<IconVariant, 'default'>;\n    hideIconVariant: SnackbarProviderProps['hideIconVariant'];\n}\n\nconst SnackbarItem: React.FC<SnackbarItemProps> = ({ classes, ...props }) => {\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\n    const [collapsed, setCollapsed] = useState(true);\n\n    useEffect(() => (): void => {\n        if (timeout.current) {\n            clearTimeout(timeout.current);\n        }\n    }, []);\n\n    const handleClose = createChainedFunction([props.snack.onClose, props.onClose], props.snack.key);\n\n    const handleEntered: TransitionHandlerProps['onEntered'] = () => {\n        if (props.snack.requestClose) {\n            handleClose(null, REASONS.INSTRCUTED);\n        }\n    };\n\n    const handleExitedScreen = (): void => {\n        timeout.current = setTimeout(() => {\n            setCollapsed(!collapsed);\n        }, 125);\n    };\n\n    const callbacks: { [key in keyof TransitionHandlerProps]?: any } =\n        ['onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].reduce((acc, cbName) => ({\n            ...acc,\n            // @ts-ignore\n            [cbName]: createChainedFunction([props.snack[cbName], props[cbName]], props.snack.key),\n        }), {});\n\n    const {\n        action,\n        content,\n        ContentProps = {},\n        hideIconVariant,\n        iconVariant,\n        snack,\n        dense,\n        TransitionComponent = Slide,\n        TransitionProps: otherTransitionProps = {},\n        ...other\n    } = props;\n\n    const { action: contentAction, className, ...otherContentProps } = ContentProps;\n\n    const {\n        key,\n        persist,\n        entered,\n        requestClose,\n        variant,\n        content: singleContent,\n        action: singleAction,\n        ContentProps: singleContentProps = {},\n        anchorOrigin,\n        TransitionProps: singleTransitionProps = {},\n        ...singleSnackProps\n    } = snack;\n\n    const icon = iconVariant[variant];\n\n    const contentProps = {\n        ...otherContentProps,\n        ...singleContentProps,\n        action: singleAction || singleContentProps.action || contentAction || action,\n    };\n\n    const transitionProps = {\n        direction: getTransitionDirection(anchorOrigin),\n        ...otherTransitionProps,\n        ...singleTransitionProps,\n        onExited: handleExitedScreen,\n    };\n\n    const ariaDescribedby = contentProps['aria-describedby'] || 'client-snackbar';\n\n    let finalAction = contentProps.action;\n    if (typeof finalAction === 'function') {\n        // @ts-ignore\n        finalAction = contentProps.action(key);\n    }\n\n    let snackContent = singleContent || content;\n    if (snackContent && typeof snackContent === 'function') {\n        snackContent = snackContent(key, snack.message);\n    }\n\n    return (\n        <Collapse\n            unmountOnExit\n            timeout={175}\n            in={collapsed}\n            classes={omitNonCollapseKeys(classes, dense)}\n            onExited={callbacks.onExited}\n        >\n            {/*\n            // @ts-ignore */}\n            <Snackbar\n                // @ts-ignore\n                TransitionComponent={TransitionComponent}\n                {...other}\n                {...singleSnackProps}\n                open={snack.open}\n                anchorOrigin={anchorOrigin}\n                TransitionProps={transitionProps}\n                classes={omitNonMuiKeys(classes)}\n                onClose={handleClose}\n                onExit={callbacks.onExit}\n                onExiting={callbacks.onExiting}\n                onEnter={callbacks.onEnter}\n                onEntering={callbacks.onEntering}\n                // order matters. first callbacks.onEntered to set entered: true,\n                // then handleEntered to check if there's a request for closing\n                onEntered={createChainedFunction([callbacks.onEntered, handleEntered])}\n            >\n                {/* @ts-ignore */}\n                {snackContent || (\n                    <SnackbarContent\n                        className={clsx(\n                            classes[`variant${capitalise(variant)}` as VariantClassKey],\n                            { [classes.lessPadding]: !hideIconVariant && icon },\n                            className,\n                        )}\n                        {...contentProps}\n                        aria-describedby={ariaDescribedby}\n                        message={(\n                            <span id={ariaDescribedby} className={classes.message}>\n                                {!hideIconVariant ? icon : null}\n                                {snack.message}\n                            </span>\n                        )}\n                        action={finalAction}\n                    />\n                )}\n            </Snackbar>\n        </Collapse>\n    );\n};\n\nexport default withStyles(styles)(SnackbarItem);\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SNACKBAR_INDENTS } from './utils/constants';\nimport { SnackbarProviderProps } from '.';\n\nconst useStyle = makeStyles(theme => ({\n    root: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        maxHeight: '100%',\n        maxWidth: '100%',\n        position: 'fixed',\n        flexDirection: 'column',\n        zIndex: theme.zIndex.snackbar,\n        height: 'auto',\n        width: 'auto',\n        minWidth: 288,\n        transition: theme.transitions.create(['top', 'right', 'bottom', 'left'], { easing: 'ease' }),\n        [theme.breakpoints.down('xs')]: {\n            left: '0 !important',\n            right: '0 !important',\n            width: '100%',\n        },\n    },\n    reverseColumns: { flexDirection: 'column-reverse' },\n\n    top: { top: SNACKBAR_INDENTS.view.default - SNACKBAR_INDENTS.snackbar.default },\n    topDense: { top: SNACKBAR_INDENTS.view.dense - SNACKBAR_INDENTS.snackbar.dense },\n\n    bottom: { bottom: SNACKBAR_INDENTS.view.default - SNACKBAR_INDENTS.snackbar.default },\n    bottomDense: { bottom: SNACKBAR_INDENTS.view.dense - SNACKBAR_INDENTS.snackbar.dense },\n\n    left: { left: SNACKBAR_INDENTS.view.default },\n    leftDense: { left: SNACKBAR_INDENTS.view.dense },\n\n    right: { right: SNACKBAR_INDENTS.view.default },\n    rightDense: { right: SNACKBAR_INDENTS.view.dense },\n\n    center: {\n        left: '50%',\n        transform: 'translateX(-50%)',\n        [theme.breakpoints.down('xs')]: {\n            transform: 'translateX(0)',\n        },\n    },\n}));\n\n\ninterface SnackbarContainerProps {\n    children: JSX.Element | JSX.Element[];\n    className?: string;\n    dense: SnackbarProviderProps['dense'];\n    anchorOrigin: NonNullable<SnackbarProviderProps['anchorOrigin']>;\n}\n\nconst SnackbarContainer: React.FC<SnackbarContainerProps> = (props) => {\n    const classes = useStyle();\n    const { className, anchorOrigin, dense, ...other } = props;\n\n    const combinedClassname = clsx(\n        classes.root,\n        classes[anchorOrigin.vertical],\n        classes[anchorOrigin.horizontal],\n        // @ts-ignore\n        classes[`${anchorOrigin.vertical}${dense ? 'Dense' : ''}`],\n        // @ts-ignore\n        classes[`${anchorOrigin.horizontal}${dense ? 'Dense' : ''}`],\n        { [classes.reverseColumns]: anchorOrigin.vertical === 'bottom' },\n        className,\n    );\n\n    return (\n        <div className={combinedClassname} {...other} />\n    );\n};\n\nexport default React.memo(SnackbarContainer);\n","/* eslint-disable */\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nexport default (message: string) => {\n    if (!__DEV__) return;\n\n    if (typeof console !== 'undefined') {\n        console.error(message);\n    }\n    try {\n        throw new Error(message);\n    } catch (x) { };\n};\n","import React from 'react';\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\nimport { IconVariant } from '../index';\n\ntype Icon = (props: SvgIconProps) => JSX.Element;\n\nconst CheckIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41\n        10.59L10 14.17L17.59 6.58L19 8L10 17Z\" />\n    </SvgIcon>\n);\n\nconst WarningIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\" />\n    </SvgIcon>\n);\n\nconst ErrorIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\n        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\n        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\" />\n    </SvgIcon>\n);\n\nconst InfoIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,\n        0 22,12A10,10 0 0,0 12,2Z\" />\n    </SvgIcon>\n);\n\nconst iconStyles = {\n    fontSize: 20,\n    marginInlineEnd: 8,\n};\n\nconst defaultIconVariants: Omit<IconVariant, 'default'> = {\n    success: <CheckIcon style={iconStyles} />,\n    warning: <WarningIcon style={iconStyles} />,\n    error: <ErrorIcon style={iconStyles} />,\n    info: <InfoIcon style={iconStyles} />,\n};\n\nexport default defaultIconVariants;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport clsx from 'clsx';\nimport SnackbarContext from './SnackbarContext';\nimport { MESSAGES, REASONS, originKeyExtractor, omitContainerKeys, merge, DEFAULTS } from './utils/constants';\nimport SnackbarItem from './SnackbarItem';\nimport SnackbarContainer from './SnackbarContainer';\nimport warning from './utils/warning';\nimport defaultIconVariants from './utils/defaultIconVariants';\nimport { SnackbarProviderProps, ContainerClassKey, SnackbarKey, SnackbarMessage, OptionsObject, RequiredBy, ProviderContext, TransitionHandlerProps } from '.';\nimport createChainedFunction from './utils/createChainedFunction';\n\n\ntype Reducer = (state: State) => State;\ntype SnacksByPosition = { [key: string]: Snack[] };\n\nexport interface Snack extends RequiredBy<OptionsObject, 'key' | 'variant' | 'anchorOrigin'> {\n    message: SnackbarMessage;\n    open: boolean;\n    entered: boolean;\n    requestClose: boolean;\n}\n\ninterface State {\n    snacks: Snack[];\n    queue: Snack[];\n    contextValue: ProviderContext;\n}\n\nclass SnackbarProvider extends Component<SnackbarProviderProps, State> {\n    constructor(props: SnackbarProviderProps) {\n        super(props);\n        this.state = {\n            snacks: [],\n            queue: [], // eslint-disable-line react/no-unused-state\n            contextValue: {\n                enqueueSnackbar: this.enqueueSnackbar,\n                closeSnackbar: this.closeSnackbar,\n            },\n        };\n    }\n\n    get maxSnack(): number {\n        return this.props.maxSnack || 3;\n    }\n\n    /**\n     * Adds a new snackbar to the queue to be presented.\n     * Returns generated or user defined key referencing the new snackbar or null\n     */\n    enqueueSnackbar = (message: SnackbarMessage, { key, preventDuplicate, ...options }: OptionsObject = {}): SnackbarKey => {\n        const hasSpecifiedKey = key || key === 0;\n        const id = hasSpecifiedKey ? (key as SnackbarKey) : new Date().getTime() + Math.random();\n\n        const merger = merge(options, this.props, DEFAULTS);\n        const snack: Snack = {\n            key: id,\n            ...options,\n            message,\n            open: true,\n            entered: false,\n            requestClose: false,\n            variant: merger('variant'),\n            anchorOrigin: merger('anchorOrigin'),\n            autoHideDuration: merger('autoHideDuration'),\n        };\n\n        if (options.persist) {\n            snack.autoHideDuration = undefined;\n        }\n\n        this.setState((state) => {\n            if ((preventDuplicate === undefined && this.props.preventDuplicate) || preventDuplicate) {\n                const compareFunction = (item: Snack): boolean => (\n                    hasSpecifiedKey ? item.key === key : item.message === message\n                );\n\n                const inQueue = state.queue.findIndex(compareFunction) > -1;\n                const inView = state.snacks.findIndex(compareFunction) > -1;\n                if (inQueue || inView) {\n                    return state;\n                }\n            }\n\n            return this.handleDisplaySnack({\n                ...state,\n                queue: [...state.queue, snack],\n            });\n        });\n\n        return id;\n    };\n\n    /**\n     * Reducer: Display snack if there's space for it. Otherwise, immediately\n     * begin dismissing the oldest message to start showing the new one.\n     */\n    handleDisplaySnack: Reducer = (state) => {\n        const { snacks } = state;\n        if (snacks.length >= this.maxSnack) {\n            return this.handleDismissOldest(state);\n        }\n        return this.processQueue(state);\n    };\n\n    /**\n     * Reducer: Display items (notifications) in the queue if there's space for them.\n     */\n    processQueue: Reducer = (state) => {\n        const { queue, snacks } = state;\n        if (queue.length > 0) {\n            return {\n                ...state,\n                snacks: [...snacks, queue[0]],\n                queue: queue.slice(1, queue.length),\n            };\n        }\n        return state;\n    };\n\n    /**\n     * Reducer: Hide oldest snackbar on the screen because there exists a new one which we have to display.\n     * (ignoring the one with 'persist' flag. i.e. explicitly told by user not to get dismissed).\n     *\n     * Note 1: If there is already a message leaving the screen, no new messages are dismissed.\n     * Note 2: If the oldest message has not yet entered the screen, only a request to close the\n     *         snackbar is made. Once it entered the screen, it will be immediately dismissed.\n     */\n    handleDismissOldest: Reducer = (state) => {\n        if (state.snacks.some(item => !item.open || item.requestClose)) {\n            return state;\n        }\n\n        let popped = false;\n        let ignore = false;\n\n        const persistentCount = state.snacks.reduce((acc, current) => (\n            acc + (current.open && current.persist ? 1 : 0)\n        ), 0);\n\n        if (persistentCount === this.maxSnack) {\n            warning(MESSAGES.NO_PERSIST_ALL);\n            ignore = true;\n        }\n\n        const snacks = state.snacks.map((item) => {\n            if (!popped && (!item.persist || ignore)) {\n                popped = true;\n\n                if (!item.entered) {\n                    return {\n                        ...item,\n                        requestClose: true,\n                    };\n                }\n\n                if (item.onClose) item.onClose(null, REASONS.MAXSNACK, item.key);\n                if (this.props.onClose) this.props.onClose(null, REASONS.MAXSNACK, item.key);\n\n                return {\n                    ...item,\n                    open: false,\n                };\n            }\n\n            return { ...item };\n        });\n\n        return { ...state, snacks };\n    };\n\n    /**\n     * Set the entered state of the snackbar with the given key.\n     */\n    handleEnteredSnack: TransitionHandlerProps['onEntered'] = (node, isAppearing, key) => {\n        if (!key) {\n            throw new Error('handleEnteredSnack Cannot be called with undefined key');\n        }\n\n        this.setState(({ snacks }) => ({\n            snacks: snacks.map(item => (\n                item.key === key ? { ...item, entered: true } : { ...item }\n            )),\n        }));\n    }\n\n    /**\n     * Hide a snackbar after its timeout.\n     */\n    handleCloseSnack: TransitionHandlerProps['onClose'] = (event, reason, key) => {\n        if (this.props.onClose) {\n            this.props.onClose(event, reason, key);\n        }\n\n        if (reason === REASONS.CLICKAWAY) return;\n        const shouldCloseAll = key === undefined;\n\n        this.setState(({ snacks, queue }) => ({\n            snacks: snacks.map((item) => {\n                if (!shouldCloseAll && item.key !== key) {\n                    return { ...item };\n                }\n\n                return item.entered\n                    ? { ...item, open: false }\n                    : { ...item, requestClose: true };\n            }),\n            queue: queue.filter(item => item.key !== key), // eslint-disable-line react/no-unused-state\n        }));\n    };\n\n    /**\n     * Close snackbar with the given key\n     */\n    closeSnackbar: ProviderContext['closeSnackbar'] = (key) => {\n        // call individual snackbar onClose callback passed through options parameter\n        const toBeClosed = this.state.snacks.find(item => item.key === key);\n        if (key && toBeClosed && toBeClosed.onClose) {\n            toBeClosed.onClose(null, REASONS.INSTRUCTED, key);\n        }\n\n        this.handleCloseSnack(null, REASONS.INSTRUCTED, key);\n    }\n\n    /**\n     * When we set open attribute of a snackbar to false (i.e. after we hide a snackbar),\n     * it leaves the screen and immediately after leaving animation is done, this method\n     * gets called. We remove the hidden snackbar from state and then display notifications\n     * waiting in the queue (if any). If after this process the queue is not empty, the\n     * oldest message is dismissed.\n     */\n    // @ts-ignore\n    handleExitedSnack: TransitionHandlerProps['onExited'] = (event, key1, key2) => {\n        const key = key1 || key2;\n        if (!key) {\n            throw new Error('handleExitedSnack Cannot be called with undefined key');\n        }\n\n        this.setState((state) => {\n            const newState = this.processQueue({\n                ...state,\n                snacks: state.snacks.filter(item => item.key !== key),\n            });\n\n            if (newState.queue.length === 0) {\n                return newState;\n            }\n\n            return this.handleDismissOldest(newState);\n        });\n    };\n\n    render(): JSX.Element {\n        const { contextValue } = this.state;\n        const {\n            variant,\n            maxSnack,\n            anchorOrigin,\n            preventDuplicate,\n            domRoot,\n            children,\n            classes = {},\n            dense = false,\n            hideIconVariant = false,\n            ...props\n        } = this.props;\n\n        const categ = this.state.snacks.reduce<SnacksByPosition>((acc, current) => {\n            const category = originKeyExtractor(current.anchorOrigin);\n            const existingOfCategory = acc[category] || [];\n            return {\n                ...acc,\n                [category]: [...existingOfCategory, current],\n            };\n        }, {});\n\n        const iconVariant = {\n            ...defaultIconVariants,\n            ...this.props.iconVariant,\n        };\n\n        const snackbars = Object.keys(categ).map((origin) => {\n            const snacks = categ[origin];\n            return (\n                <SnackbarContainer\n                    key={origin}\n                    dense={dense}\n                    anchorOrigin={snacks[0].anchorOrigin}\n                    className={clsx(\n                        classes.containerRoot,\n                        classes[`containerAnchorOrigin${origin}` as ContainerClassKey],\n                    )}\n                >\n                    {snacks.map(snack => (\n                        <SnackbarItem\n                            {...props}\n                            key={snack.key}\n                            dense={dense}\n                            snack={snack}\n                            hideIconVariant={hideIconVariant}\n                            iconVariant={iconVariant}\n                            classes={omitContainerKeys(classes)}\n                            onClose={this.handleCloseSnack}\n                            onExited={createChainedFunction([this.handleExitedSnack, this.props.onExited])}\n                            onEntered={createChainedFunction([this.handleEnteredSnack, this.props.onEntered])}\n                        />\n                    ))}\n                </SnackbarContainer>\n            );\n        });\n\n        return (\n            <SnackbarContext.Provider value={contextValue}>\n                {children}\n                {domRoot ? createPortal(snackbars, domRoot) : snackbars}\n            </SnackbarContext.Provider>\n        );\n    }\n}\n\nexport default SnackbarProvider;\n","// https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3\nconst fnNameMatchRegex = /^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^(\\s/]*)\\s*/;\nconst getFunctionName = (fn) => {\n    const match = `${fn}`.match(fnNameMatchRegex);\n    const name = match && match[1];\n    return name || '';\n};\n\n/**\n * @param {function} Component\n * @param {string} fallback\n * @returns {string | undefined}\n */\nconst getFunctionComponentName = (Component, fallback = '') => (\n    Component.displayName || Component.name || getFunctionName(Component) || fallback\n);\n\nconst getWrappedName = (outerType, innerType, wrapperName) => {\n    const functionName = getFunctionComponentName(innerType);\n    return (\n        outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName)\n    );\n};\n\n/** \n * From react-is\n * @link https://github.com/facebook/react/blob/master/packages/shared/ReactSymbols.js\n */\nconst ForwardRef = () => {\n    const symbolFor = typeof Symbol === 'function' && Symbol.for;\n    return symbolFor ? symbolFor('react.forward_ref') : 0xead0\n}\n\n/**\n * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js\n *\n * @param {React.ReactType} Component\n * @returns {string | undefined}\n */\nexport default (Component) => {\n    if (Component == null) {\n        return undefined;\n    }\n\n    if (typeof Component === 'string') {\n        return Component;\n    }\n\n    if (typeof Component === 'function') {\n        return getFunctionComponentName(Component, 'Component');\n    }\n\n    if (typeof Component === 'object') {\n        switch (Component.$$typeof) {\n            case ForwardRef():\n                return getWrappedName(Component, Component.render, 'ForwardRef');\n            default:\n                return undefined;\n        }\n    }\n\n    return undefined;\n};\n","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport getDisplayName from './utils/getDisplayName';\nimport SnackbarContext from './SnackbarContext';\n\nconst withSnackbar = (Component) => {\n    const WrappedComponent = React.forwardRef((props, ref) => (\n        <SnackbarContext.Consumer>\n            {context => (\n                <Component\n                    {...props}\n                    ref={ref}\n                    enqueueSnackbar={context.enqueueSnackbar}\n                    closeSnackbar={context.closeSnackbar}\n                />\n            )}\n        </SnackbarContext.Consumer>\n    ));\n\n    if (process.env.NODE_ENV !== 'production') {\n        WrappedComponent.displayName = `WithSnackbar(${getDisplayName(Component)})`;\n    }\n\n    hoistNonReactStatics(WrappedComponent, Component);\n\n    return WrappedComponent;\n};\n\nexport default withSnackbar;\n","import { useContext } from 'react';\nimport SnackbarContext from './SnackbarContext';\nimport { ProviderContext } from '.';\n\nexport default (): ProviderContext => useContext(SnackbarContext);\n"]},"metadata":{},"sourceType":"module"}