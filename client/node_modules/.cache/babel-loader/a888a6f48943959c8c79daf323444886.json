{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport produce from 'immer';\nimport { GET_CONTACTS, GET_THREADS, GET_THREAD, MARK_THREAD_AS_SEEN, ADD_MESSAGE, OPEN_SIDEBAR, CLOSE_SIDEBAR } from 'src/actions/chatActions';\nimport objFromArray from 'src/utils/objFromArray';\nvar initialState = {\n  contacts: {\n    byId: {},\n    allIds: []\n  },\n  threads: {\n    byKey: {},\n    allKeys: []\n  },\n  sidebarOpen: false\n};\n\nvar chatReducer = function chatReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_CONTACTS:\n      {\n        var contacts = action.payload.contacts;\n        return produce(state, function (draft) {\n          draft.contacts.byId = objFromArray(contacts);\n          draft.contacts.allIds = Object.keys(draft.contacts.byId);\n        });\n      }\n\n    case GET_THREADS:\n      {\n        var threads = action.payload.threads;\n        return produce(state, function (draft) {\n          draft.threads.byKey = objFromArray(threads, 'key');\n          draft.threads.allKeys = Object.keys(draft.threads.byKey);\n        });\n      }\n\n    case GET_THREAD:\n      {\n        var thread = action.payload.thread;\n        return produce(state, function (draft) {\n          draft.threads.byKey[thread.key] = thread;\n\n          if (!draft.threads.allKeys.includes(thread.key)) {\n            draft.threads.allKeys.push(thread.key);\n          }\n        });\n      }\n\n    case MARK_THREAD_AS_SEEN:\n      {\n        var threadKey = action.payload.threadKey;\n        return produce(state, function (draft) {\n          var thread = draft.threads.byKey[threadKey];\n\n          if (thread) {\n            thread.unreadCount = 0;\n          }\n        });\n      }\n\n    case ADD_MESSAGE:\n      {\n        var _action$payload = action.payload,\n            _threadKey = _action$payload.threadKey,\n            message = _action$payload.message,\n            userId = _action$payload.userId,\n            otherUserId = _action$payload.otherUserId;\n        return produce(state, function (draft) {\n          var thread = draft.threads.byKey[_threadKey];\n\n          if (!thread) {\n            thread = {\n              key: _threadKey,\n              messages: [message],\n              participantIds: [otherUserId, userId],\n              unreadCount: 0\n            };\n            draft.threads.byKey[_threadKey] = thread;\n            draft.threads.allKeys.push(_threadKey);\n          } else {\n            thread.messages.push(message);\n          }\n        });\n      }\n\n    case OPEN_SIDEBAR:\n      {\n        return produce(state, function (draft) {\n          draft.sidebarOpen = true;\n        });\n      }\n\n    case CLOSE_SIDEBAR:\n      {\n        return produce(state, function (draft) {\n          draft.sidebarOpen = false;\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default chatReducer;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/reducers/chatReducer.js"],"names":["produce","GET_CONTACTS","GET_THREADS","GET_THREAD","MARK_THREAD_AS_SEEN","ADD_MESSAGE","OPEN_SIDEBAR","CLOSE_SIDEBAR","objFromArray","initialState","contacts","byId","allIds","threads","byKey","allKeys","sidebarOpen","chatReducer","state","action","type","payload","draft","Object","keys","thread","key","includes","push","threadKey","unreadCount","message","userId","otherUserId","messages","participantIds"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport produce from 'immer';\nimport {\n  GET_CONTACTS,\n  GET_THREADS,\n  GET_THREAD,\n  MARK_THREAD_AS_SEEN,\n  ADD_MESSAGE,\n  OPEN_SIDEBAR,\n  CLOSE_SIDEBAR\n} from 'src/actions/chatActions';\nimport objFromArray from 'src/utils/objFromArray';\n\nconst initialState = {\n  contacts: {\n    byId: {},\n    allIds: []\n  },\n  threads: {\n    byKey: {},\n    allKeys: []\n  },\n  sidebarOpen: false\n};\n\nconst chatReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CONTACTS: {\n      const { contacts } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.contacts.byId = objFromArray(contacts);\n        draft.contacts.allIds = Object.keys(draft.contacts.byId);\n      });\n    }\n\n    case GET_THREADS: {\n      const { threads } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.threads.byKey = objFromArray(threads, 'key');\n        draft.threads.allKeys = Object.keys(draft.threads.byKey);\n      });\n    }\n\n    case GET_THREAD: {\n      const { thread } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.threads.byKey[thread.key] = thread;\n\n        if (!draft.threads.allKeys.includes(thread.key)) {\n          draft.threads.allKeys.push(thread.key);\n        }\n      });\n    }\n\n    case MARK_THREAD_AS_SEEN: {\n      const { threadKey } = action.payload;\n\n      return produce(state, (draft) => {\n        const thread = draft.threads.byKey[threadKey];\n\n        if (thread) {\n          thread.unreadCount = 0;\n        }\n      });\n    }\n\n    case ADD_MESSAGE: {\n      const {\n        threadKey,\n        message,\n        userId,\n        otherUserId\n      } = action.payload;\n\n      return produce(state, (draft) => {\n        let thread = draft.threads.byKey[threadKey];\n\n        if (!thread) {\n          thread = {\n            key: threadKey,\n            messages: [message],\n            participantIds: [otherUserId, userId],\n            unreadCount: 0\n          };\n\n          draft.threads.byKey[threadKey] = thread;\n          draft.threads.allKeys.push(threadKey);\n        } else {\n          thread.messages.push(message);\n        }\n      });\n    }\n\n    case OPEN_SIDEBAR: {\n      return produce(state, (draft) => {\n        draft.sidebarOpen = true;\n      });\n    }\n\n    case CLOSE_SIDEBAR: {\n      return produce(state, (draft) => {\n        draft.sidebarOpen = false;\n      });\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default chatReducer;\n"]},"metadata":{},"sourceType":"module"}