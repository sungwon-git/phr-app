{"ast":null,"code":"import _slicedToArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Records/EarningsSegmentation/index.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box, Card, CardHeader, Divider, Typography, makeStyles } from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Chart from './Chart';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    item: {\n      textAlign: 'center',\n      flexGrow: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      padding: theme.spacing(3, 2),\n      '&:not(:last-of-type)': {\n        borderRight: \"1px solid \".concat(theme.palette.divider)\n      }\n    }\n  };\n});\n\nfunction EarningsSegmentation(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var isMountedRef = useIsMountedRef();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      earnings = _useState2[0],\n      setEarnings = _useState2[1];\n\n  var getEarnings = useCallback(function () {\n    axios.get('/api/reports/earnings').then(function (response) {\n      if (isMountedRef.current) {\n        setEarnings(response.data.earnings);\n      }\n    });\n  }, [isMountedRef]);\n  useEffect(function () {\n    getEarnings();\n  }, [getEarnings]);\n\n  if (!earnings) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(GenericMoreButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }),\n    title: \"Earnings Segmentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    position: \"relative\",\n    minHeight: 320,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    data: earnings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, earnings.labels.map(function (label, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: label,\n      className: classes.item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      color: \"textPrimary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, earnings.datasets[0].data[i], \"%\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"overline\",\n      color: \"textSecondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, label));\n  })));\n}\n\nEarningsSegmentation.propTypes = {\n  className: PropTypes.string\n};\nexport default EarningsSegmentation;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Records/EarningsSegmentation/index.js"],"names":["React","useState","useEffect","useCallback","PropTypes","clsx","Box","Card","CardHeader","Divider","Typography","makeStyles","GenericMoreButton","axios","useIsMountedRef","Chart","useStyles","theme","root","item","textAlign","flexGrow","display","flexDirection","justifyContent","padding","spacing","borderRight","palette","divider","EarningsSegmentation","className","rest","classes","isMountedRef","earnings","setEarnings","getEarnings","get","then","response","current","data","labels","map","label","i","datasets","propTypes","string"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction EarningsSegmentation({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [earnings, setEarnings] = useState(null);\n\n  const getEarnings = useCallback(() => {\n    axios\n      .get('/api/reports/earnings')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setEarnings(response.data.earnings);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEarnings();\n  }, [getEarnings]);\n\n  if (!earnings) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Earnings Segmentation\"\n      />\n      <Divider />\n      <Box\n        p={3}\n        position=\"relative\"\n        minHeight={320}\n      >\n        <Chart data={earnings} />\n      </Box>\n      <Divider />\n      <Box display=\"flex\">\n        {earnings.labels.map((label, i) => (\n          <div\n            key={label}\n            className={classes.item}\n          >\n            <Typography\n              variant=\"h4\"\n              color=\"textPrimary\"\n            >\n              {earnings.datasets[0].data[i]}\n              %\n            </Typography>\n            <Typography\n              variant=\"overline\"\n              color=\"textSecondary\"\n            >\n              {label}\n            </Typography>\n          </div>\n        ))}\n      </Box>\n    </Card>\n  );\n}\n\nEarningsSegmentation.propTypes = {\n  className: PropTypes.string\n};\n\nexport default EarningsSegmentation;\n"]},"metadata":{},"sourceType":"module"}