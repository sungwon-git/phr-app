{"ast":null,"code":"import _slicedToArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/chat/ChatView/ThreadNew/Search.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Avatar, Box, ClickAwayListener, Typography, Input, List, ListItem, ListItemAvatar, ListItemText, Popper, Paper, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\n\nfunction filterContacts(contacts, searchText) {\n  if (!searchText) {\n    return contacts.allIds;\n  }\n\n  return contacts.allIds.filter(function (contactId) {\n    return contacts.byId[contactId].name.toLowerCase().includes(searchText.toLowerCase());\n  });\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    input: {\n      backgroundColor: theme.palette.background.default,\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      height: 32,\n      borderRadius: 16\n    }\n  };\n});\n\nfunction Search(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n\n  var _useSelector = useSelector(function (state) {\n    return state.chat;\n  }),\n      contacts = _useSelector.contacts;\n\n  var inputRef = useRef(null);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displaySearchResults = _useState4[0],\n      setDisplaySearchResults = _useState4[1];\n\n  var handleSearchChange = function handleSearchChange(event) {\n    event.persist();\n    setSearchText(event.target.value);\n  };\n\n  var handleResultsClickAway = function handleResultsClickAway() {\n    setDisplaySearchResults(false);\n  };\n\n  useEffect(function () {\n    if (searchText && !displaySearchResults) {\n      setDisplaySearchResults(true);\n    } // eslint-disable-next-line\n\n  }, [searchText]);\n  var filteredContactIds = filterContacts(contacts, searchText);\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    className: classes.input,\n    disableUnderline: true,\n    onChange: handleSearchChange,\n    placeholder: \"Search contacts\",\n    value: searchText,\n    ref: inputRef,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Popper, {\n    anchorEl: inputRef.current,\n    open: displaySearchResults,\n    placement: \"bottom-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleResultsClickAway,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: Paper,\n    width: 320,\n    maxWidth: \"100%\",\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, filteredContactIds.length === 0 ? /*#__PURE__*/React.createElement(Box, {\n    px: 2,\n    pb: 2,\n    pt: 2,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    color: \"textPrimary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Nothing Found\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"We couldn't find any matches for \\\"\", searchText, \"\\\". Try checking for typos or using complete words.\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    px: 2,\n    pt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, \"Contacts\")), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, filteredContactIds.map(function (contactId) {\n    var contact = contacts.byId[contactId];\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      component: RouterLink,\n      key: contact.id,\n      to: \"/app/chat/\".concat(contact.username),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      src: contact.avatar,\n      className: classes.contactAvatar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: contact.name,\n      primaryTypographyProps: {\n        noWrap: true,\n        variant: 'h6',\n        color: 'textPrimary'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }));\n  })))))));\n}\n\nSearch.propTypes = {\n  className: PropTypes.string\n};\nexport default Search;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/chat/ChatView/ThreadNew/Search.js"],"names":["React","useState","useRef","useEffect","Link","RouterLink","useSelector","PropTypes","Avatar","Box","ClickAwayListener","Typography","Input","List","ListItem","ListItemAvatar","ListItemText","Popper","Paper","makeStyles","clsx","filterContacts","contacts","searchText","allIds","filter","contactId","byId","name","toLowerCase","includes","useStyles","theme","root","input","backgroundColor","palette","background","default","paddingLeft","spacing","paddingRight","height","borderRadius","Search","className","rest","classes","state","chat","inputRef","setSearchText","displaySearchResults","setDisplaySearchResults","handleSearchChange","event","persist","target","value","handleResultsClickAway","filteredContactIds","current","length","map","contact","id","username","avatar","contactAvatar","noWrap","variant","color","propTypes","string"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useRef,\n  useEffect\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  ClickAwayListener,\n  Typography,\n  Input,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Popper,\n  Paper,\n  makeStyles\n} from '@material-ui/core';\nimport clsx from 'clsx';\n\nfunction filterContacts(contacts, searchText) {\n  if (!searchText) {\n    return contacts.allIds;\n  }\n\n  return contacts.allIds.filter(\n    (contactId) => contacts.byId[contactId].name.toLowerCase().includes(searchText.toLowerCase())\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  input: {\n    backgroundColor: theme.palette.background.default,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    height: 32,\n    borderRadius: 16\n  }\n}));\n\nfunction Search({ className, ...rest }) {\n  const classes = useStyles();\n  const { contacts } = useSelector((state) => state.chat);\n  const inputRef = useRef(null);\n  const [searchText, setSearchText] = useState('');\n  const [displaySearchResults, setDisplaySearchResults] = useState(false);\n\n  const handleSearchChange = (event) => {\n    event.persist();\n    setSearchText(event.target.value);\n  };\n\n  const handleResultsClickAway = () => {\n    setDisplaySearchResults(false);\n  };\n\n  useEffect(() => {\n    if (searchText && !displaySearchResults) {\n      setDisplaySearchResults(true);\n    }\n    // eslint-disable-next-line\n  }, [searchText]);\n\n  const filteredContactIds = filterContacts(contacts, searchText);\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Input\n        className={classes.input}\n        disableUnderline\n        onChange={handleSearchChange}\n        placeholder=\"Search contacts\"\n        value={searchText}\n        ref={inputRef}\n        autoFocus\n      />\n      <Popper\n        anchorEl={inputRef.current}\n        open={displaySearchResults}\n        placement=\"bottom-start\"\n      >\n        <ClickAwayListener onClickAway={handleResultsClickAway}>\n          <Box\n            component={Paper}\n            width={320}\n            maxWidth=\"100%\"\n            mt={1}\n          >\n            {filteredContactIds.length === 0 ? (\n              <Box\n                px={2}\n                pb={2}\n                pt={2}\n                textAlign=\"center\"\n              >\n                <Typography\n                  variant=\"h4\"\n                  color=\"textPrimary\"\n                  gutterBottom\n                >\n                  Nothing Found\n                </Typography>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                >\n                  We couldn&apos;t find any matches for &quot;\n                  {searchText}\n                  &quot;. Try checking for typos or using complete words.\n                </Typography>\n              </Box>\n            ) : (\n              <>\n                <Box\n                  px={2}\n                  pt={2}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    color=\"textSecondary\"\n                  >\n                    Contacts\n                  </Typography>\n                </Box>\n                <List>\n                  {filteredContactIds.map((contactId) => {\n                    const contact = contacts.byId[contactId];\n\n                    return (\n                      <ListItem\n                        button\n                        component={RouterLink}\n                        key={contact.id}\n                        to={`/app/chat/${contact.username}`}\n                      >\n                        <ListItemAvatar>\n                          <Avatar\n                            src={contact.avatar}\n                            className={classes.contactAvatar}\n                          />\n                        </ListItemAvatar>\n                        <ListItemText\n                          primary={contact.name}\n                          primaryTypographyProps={{\n                            noWrap: true,\n                            variant: 'h6',\n                            color: 'textPrimary'\n                          }}\n                        />\n                      </ListItem>\n                    );\n                  })}\n                </List>\n              </>\n            )}\n          </Box>\n        </ClickAwayListener>\n      </Popper>\n    </div>\n  );\n}\n\nSearch.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}