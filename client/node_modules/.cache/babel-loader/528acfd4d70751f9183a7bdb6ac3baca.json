{"ast":null,"code":"import _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/components/OrganizationCard.js\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Axios from \"axios\"; // import moment from \"moment\";\n\nimport { Avatar, Box, Button, Card, CardActions, CardMedia, Divider // Grid,\n// IconButton,\n, Link // SvgIcon,\n// Tooltip,\n, Typography, colors, makeStyles } from \"@material-ui/core\"; // import { Rating } from \"@material-ui/lab\";\n// import FavoriteIcon from \"@material-ui/icons/Favorite\";\n// import FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\n// import { Users as UsersIcon } from \"react-feather\";\n\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport ArchiveIcon from \"@material-ui/icons/ArchiveOutlined\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport getInitials from \"src/utils/getInitials\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    media: {\n      height: 200,\n      backgroundColor: theme.palette.background.dark\n    },\n    likedButton: {\n      color: colors.red[600]\n    },\n    subscribersIcon: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(1)\n    },\n    getAppIcon: {\n      marignRight: theme.spacing(1)\n    }\n  };\n});\n\nfunction OrganizationCard(_ref) {\n  var organization = _ref.organization,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"organization\", \"className\"]);\n\n  var classes = useStyles();\n  var account = useSelector(function (state) {\n    return state.account;\n  }); // const [isLiked, setLiked] = useState(organization.isLiked);\n  // const [likes, setLikes] = useState(organization.likes);\n  // const handleLike = () => {\n  // \tsetLiked(true);\n  // \tsetLikes((prevLikes) => prevLikes + 1);\n  // };\n  // const handleUnlike = () => {\n  // \tsetLiked(false);\n  // \tsetLikes((prevLikes) => prevLikes - 1);\n  // };\n\n  var handleClick = function handleClick(event) {\n    console.log(organization, account); // await Axios.get(`${fhir_server}/Composition/$documents/${userID}`).then(async (response) => {\n    // \tif (isMountedRef.current) {\n    // \t\t// console.log(response.data);\n    // \t\tconst documents = response.data;\n    // \t\tsetDocuments(documents);\n    // \t\t// console.log(documents);\n    // \t\tfor (let i = 0; i < documents.length; i++) {\n    // \t\t\t// console.log(document.id);\n    // \t\t\tconst phr_server = \"http://localhost:3100\";\n    // \t\t\tlet data = {\n    // \t\t\t\tdocumentID: documents[i].id,\n    // \t\t\t\tuserID: userID,\n    // \t\t\t\torganizationID: organizationID,\n    // \t\t\t};\n    // \t\t\tlet phr_config = {\n    // \t\t\t\tmethod: \"post\",\n    // \t\t\t\turl: `${phr_server}/document`,\n    // \t\t\t\tdata: data,\n    // \t\t\t};\n    // \t\t\t// console.log(i);\n    // \t\t\tawait Axios(phr_config)\n    // \t\t\t\t.then(async (phr_response) => {\n    // \t\t\t\t\t// console.log(phr_response);\n    // \t\t\t\t\t// console.log(phr_response.data.document.length);\n    // \t\t\t\t\tif (phr_response.data.document.length < 1) {\n    // \t\t\t\t\t\tconst insert_data = {\n    // \t\t\t\t\t\t\tdocumentID: documents[i].id,\n    // \t\t\t\t\t\t\tuserID: userID,\n    // \t\t\t\t\t\t\torganizationID: organizationID,\n    // \t\t\t\t\t\t\tdocument: documents[i],\n    // \t\t\t\t\t\t\tisTransfer: false,\n    // \t\t\t\t\t\t};\n    // \t\t\t\t\t\tconst insert_config = {\n    // \t\t\t\t\t\t\tmethod: \"post\",\n    // \t\t\t\t\t\t\turl: `${phr_server}/documents/insert`,\n    // \t\t\t\t\t\t\tdata: insert_data,\n    // \t\t\t\t\t\t};\n    // \t\t\t\t\t\t// console.log(insert_data, insert_config);\n    // \t\t\t\t\t\tawait Axios(insert_config).then((insert_response) => {\n    // \t\t\t\t\t\t\tconsole.log(insert_response.data);\n    // \t\t\t\t\t\t});\n    // \t\t\t\t\t}\n    // \t\t\t\t})\n    // \t\t\t\t.catch((err) => {\n    // \t\t\t\t\tconsole.log(err);\n    // \t\t\t\t});\n    // \t\t}\n    // \t}\n    // });\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: organization.media,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 6\n    }\n  }, getInitials(organization.title)), /*#__PURE__*/React.createElement(Box, {\n    ml: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    color: \"textPrimary\",\n    component: RouterLink,\n    to: \"#\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, organization.title)))), /*#__PURE__*/React.createElement(Box, {\n    pb: 2,\n    px: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }, organization.address), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, organization.postalCode), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, organization.telecom)), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    href: \"\".concat(organization.oauth2URL, \"?client_id=\").concat(organization.clientID, \"&response_type=\").concat(organization.responseType, \"&redirect_uri=\").concat(organization.redirectURI),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AccountCircle, {\n    className: classes.getAppIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 6\n    }\n  }), \"Log in\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GetAppIcon, {\n    className: classes.getAppIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 6\n    }\n  }), \"Download\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    component: RouterLink,\n    to: \"/phr/records\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ArchiveIcon, {\n    className: classes.getAppIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 6\n    }\n  }), \"Records\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    py: 2,\n    pl: 2,\n    pr: 3,\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }\n  })));\n}\n\nOrganizationCard.propTypes = {\n  className: PropTypes.string,\n  organization: PropTypes.object.isRequired\n};\nexport default OrganizationCard;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/components/OrganizationCard.js"],"names":["React","useCallback","useState","useEffect","useSelector","Link","RouterLink","PropTypes","clsx","Axios","Avatar","Box","Button","Card","CardActions","CardMedia","Divider","Typography","colors","makeStyles","GetAppIcon","ArchiveIcon","AccountCircle","getInitials","useStyles","theme","root","media","height","backgroundColor","palette","background","dark","likedButton","color","red","subscribersIcon","marginLeft","spacing","marginRight","getAppIcon","marignRight","OrganizationCard","organization","className","rest","classes","account","state","handleClick","event","console","log","title","address","postalCode","telecom","oauth2URL","clientID","responseType","redirectURI","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Axios from \"axios\";\n// import moment from \"moment\";\nimport {\n\tAvatar,\n\tBox,\n\tButton,\n\tCard,\n\tCardActions,\n\tCardMedia,\n\tDivider,\n\t// Grid,\n\t// IconButton,\n\tLink,\n\t// SvgIcon,\n\t// Tooltip,\n\tTypography,\n\tcolors,\n\tmakeStyles,\n} from \"@material-ui/core\";\n// import { Rating } from \"@material-ui/lab\";\n// import FavoriteIcon from \"@material-ui/icons/Favorite\";\n// import FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\n// import { Users as UsersIcon } from \"react-feather\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport ArchiveIcon from \"@material-ui/icons/ArchiveOutlined\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport getInitials from \"src/utils/getInitials\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {},\n\tmedia: {\n\t\theight: 200,\n\t\tbackgroundColor: theme.palette.background.dark,\n\t},\n\tlikedButton: {\n\t\tcolor: colors.red[600],\n\t},\n\tsubscribersIcon: {\n\t\tmarginLeft: theme.spacing(2),\n\t\tmarginRight: theme.spacing(1),\n\t},\n\tgetAppIcon: {\n\t\tmarignRight: theme.spacing(1),\n\t},\n}));\n\nfunction OrganizationCard({ organization, className, ...rest }) {\n\tconst classes = useStyles();\n\tconst account = useSelector((state) => state.account);\n\t// const [isLiked, setLiked] = useState(organization.isLiked);\n\t// const [likes, setLikes] = useState(organization.likes);\n\n\t// const handleLike = () => {\n\t// \tsetLiked(true);\n\t// \tsetLikes((prevLikes) => prevLikes + 1);\n\t// };\n\n\t// const handleUnlike = () => {\n\t// \tsetLiked(false);\n\t// \tsetLikes((prevLikes) => prevLikes - 1);\n\t// };\n\n\tconst handleClick = (event) => {\n\t\tconsole.log(organization, account);\n\n\t\t// await Axios.get(`${fhir_server}/Composition/$documents/${userID}`).then(async (response) => {\n\t\t// \tif (isMountedRef.current) {\n\t\t// \t\t// console.log(response.data);\n\t\t// \t\tconst documents = response.data;\n\t\t// \t\tsetDocuments(documents);\n\t\t// \t\t// console.log(documents);\n\t\t// \t\tfor (let i = 0; i < documents.length; i++) {\n\t\t// \t\t\t// console.log(document.id);\n\t\t// \t\t\tconst phr_server = \"http://localhost:3100\";\n\n\t\t// \t\t\tlet data = {\n\t\t// \t\t\t\tdocumentID: documents[i].id,\n\t\t// \t\t\t\tuserID: userID,\n\t\t// \t\t\t\torganizationID: organizationID,\n\t\t// \t\t\t};\n\n\t\t// \t\t\tlet phr_config = {\n\t\t// \t\t\t\tmethod: \"post\",\n\t\t// \t\t\t\turl: `${phr_server}/document`,\n\t\t// \t\t\t\tdata: data,\n\t\t// \t\t\t};\n\t\t// \t\t\t// console.log(i);\n\t\t// \t\t\tawait Axios(phr_config)\n\t\t// \t\t\t\t.then(async (phr_response) => {\n\t\t// \t\t\t\t\t// console.log(phr_response);\n\t\t// \t\t\t\t\t// console.log(phr_response.data.document.length);\n\t\t// \t\t\t\t\tif (phr_response.data.document.length < 1) {\n\t\t// \t\t\t\t\t\tconst insert_data = {\n\t\t// \t\t\t\t\t\t\tdocumentID: documents[i].id,\n\t\t// \t\t\t\t\t\t\tuserID: userID,\n\t\t// \t\t\t\t\t\t\torganizationID: organizationID,\n\t\t// \t\t\t\t\t\t\tdocument: documents[i],\n\t\t// \t\t\t\t\t\t\tisTransfer: false,\n\t\t// \t\t\t\t\t\t};\n\n\t\t// \t\t\t\t\t\tconst insert_config = {\n\t\t// \t\t\t\t\t\t\tmethod: \"post\",\n\t\t// \t\t\t\t\t\t\turl: `${phr_server}/documents/insert`,\n\t\t// \t\t\t\t\t\t\tdata: insert_data,\n\t\t// \t\t\t\t\t\t};\n\t\t// \t\t\t\t\t\t// console.log(insert_data, insert_config);\n\n\t\t// \t\t\t\t\t\tawait Axios(insert_config).then((insert_response) => {\n\t\t// \t\t\t\t\t\t\tconsole.log(insert_response.data);\n\t\t// \t\t\t\t\t\t});\n\t\t// \t\t\t\t\t}\n\t\t// \t\t\t\t})\n\t\t// \t\t\t\t.catch((err) => {\n\t\t// \t\t\t\t\tconsole.log(err);\n\t\t// \t\t\t\t});\n\t\t// \t\t}\n\t\t// \t}\n\t\t// });\n\t};\n\n\treturn (\n\t\t<Card className={clsx(classes.root, className)} {...rest}>\n\t\t\t<Box p={3}>\n\t\t\t\t<CardMedia className={classes.media} image={organization.media} />\n\t\t\t\t<Box display=\"flex\" alignItems=\"center\" mt={2}>\n\t\t\t\t\t<Avatar alt=\"Author\">{getInitials(organization.title)}</Avatar>\n\t\t\t\t\t<Box ml={2}>\n\t\t\t\t\t\t<Link color=\"textPrimary\" component={RouterLink} to=\"#\" variant=\"h5\">\n\t\t\t\t\t\t\t{organization.title}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t{/* <Typography variant=\"body2\" color=\"textSecondary\">\n\t\t\t\t\t\t\tby{\" \"}\n\t\t\t\t\t\t\t<Link color=\"textPrimary\" component={RouterLink} to=\"#\" variant=\"h6\">\n\t\t\t\t\t\t\t\t{organization.author.name}\n\t\t\t\t\t\t\t</Link>{\" \"}\n\t\t\t\t\t\t\t| Updated {moment(organization.updatedAt).fromNow()}\n\t\t\t\t\t\t</Typography> */}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Box pb={2} px={3}>\n\t\t\t\t<Typography color=\"textSecondary\" variant=\"body2\">\n\t\t\t\t\t{organization.address}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography color=\"textSecondary\" variant=\"body2\">\n\t\t\t\t\t{organization.postalCode}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography color=\"textSecondary\" variant=\"body2\">\n\t\t\t\t\t{organization.telecom}\n\t\t\t\t</Typography>\n\t\t\t</Box>\n\t\t\t{/* <Box py={2} px={3}>\n\t\t\t\t<Grid alignItems=\"center\" container justify=\"space-between\" spacing={3}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography variant=\"h5\" color=\"textPrimary\">\n\t\t\t\t\t\t\t{organization.location}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\">\n\t\t\t\t\t\t\tLocation\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography variant=\"h5\" color=\"textPrimary\">\n\t\t\t\t\t\t\t{organization.type}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\">\n\t\t\t\t\t\t\tType\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography variant=\"h5\" color=\"textPrimary\">\n\t\t\t\t\t\t\t{organization.technology}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\">\n\t\t\t\t\t\t\tTechnology\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Box> */}\n\t\t\t<Divider />\n\t\t\t<CardActions>\n\t\t\t\t<Button\n\t\t\t\t\tfullWidth\n\t\t\t\t\thref={`${organization.oauth2URL}?client_id=${organization.clientID}&response_type=${organization.responseType}&redirect_uri=${organization.redirectURI}`}\n\t\t\t\t>\n\t\t\t\t\t<AccountCircle className={classes.getAppIcon} />\n\t\t\t\t\tLog in\n\t\t\t\t</Button>\n\t\t\t</CardActions>\n\t\t\t<Divider />\n\t\t\t<CardActions>\n\t\t\t\t<Button fullWidth onClick={handleClick}>\n\t\t\t\t\t<GetAppIcon className={classes.getAppIcon} />\n\t\t\t\t\tDownload\n\t\t\t\t</Button>\n\t\t\t</CardActions>\n\t\t\t<Divider />\n\t\t\t<CardActions>\n\t\t\t\t<Button fullWidth component={RouterLink} to=\"/phr/records\">\n\t\t\t\t\t{/* <GetAppIcon className={classes.getAppIcon} /> */}\n\t\t\t\t\t<ArchiveIcon className={classes.getAppIcon} />\n\t\t\t\t\tRecords\n\t\t\t\t</Button>\n\t\t\t</CardActions>\n\t\t\t<Divider />\n\t\t\t<Box py={2} pl={2} pr={3} display=\"flex\" alignItems=\"center\">\n\t\t\t\t<Box flexGrow={1} />\n\t\t\t\t{/* <Button color=\"secondary\" type=\"submit\" variant=\"contained\" size=\"large\">\n\t\t\t\t\tLog In\n\t\t\t\t</Button> */}\n\t\t\t\t{/* <Button\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\thref={`${organization.oauth2URL}?client_id=${organization.clientID}&response_type=${organization.responseType}&redirect_uri=${organization.redirectURI}`}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t>\n\t\t\t\t\tLOG IN\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"secondary\" component={RouterLink} to=\"/phr/records\" variant=\"contained\" size=\"large\">\n\t\t\t\t\tGET\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"secondary\" component={RouterLink} to=\"/phr/records\" variant=\"contained\" size=\"large\">\n\t\t\t\t\tRecords\n\t\t\t\t</Button> */}\n\t\t\t\t{/* {isLiked ? (\n\t\t\t\t\t<Tooltip title=\"Unlike\">\n\t\t\t\t\t\t<IconButton className={classes.likedButton} onClick={handleUnlike}>\n\t\t\t\t\t\t\t<FavoriteIcon fontSize=\"small\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t) : (\n\t\t\t\t\t<Tooltip title=\"Like\">\n\t\t\t\t\t\t<IconButton onClick={handleLike}>\n\t\t\t\t\t\t\t<FavoriteBorderIcon fontSize=\"small\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t)}\n\t\t\t\t<Typography variant=\"subtitle2\" color=\"textSecondary\">\n\t\t\t\t\t{likes}\n\t\t\t\t</Typography>\n\t\t\t\t<SvgIcon fontSize=\"small\" color=\"action\" className={classes.subscribersIcon}>\n\t\t\t\t\t<UsersIcon />\n\t\t\t\t</SvgIcon>\n\t\t\t\t<Typography variant=\"subtitle2\" color=\"textSecondary\">\n\t\t\t\t\t{organization.subscribers}\n\t\t\t\t</Typography>\n\t\t\t\t<Box flexGrow={1} />\n\t\t\t\t<Rating value={organization.rating} size=\"small\" readOnly /> */}\n\t\t\t</Box>\n\t\t</Card>\n\t);\n}\n\nOrganizationCard.propTypes = {\n\tclassName: PropTypes.string,\n\torganization: PropTypes.object.isRequired,\n};\n\nexport default OrganizationCard;\n"]},"metadata":{},"sourceType":"module"}