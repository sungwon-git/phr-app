{"ast":null,"code":"import _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Records/DocumentsView/Details/DocumentPreview/DocumentView.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Paper, Grid, Typography, Table, TableHead, TableBody, TableRow, TableCell, makeStyles } from '@material-ui/core'; // import Logo from 'src/components/Logo';\n\nvar useStyles = makeStyles(function () {\n  return {\n    root: {}\n  };\n});\n\nfunction DocumentView(_ref) {\n  var _this = this;\n\n  var composition = _ref.composition,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"composition\", \"className\"]);\n\n  var classes = useStyles(); // const [title, setTitle] = useState();\n\n  var bundle = composition;\n  var entries = bundle.entry;\n  var title = '';\n  var documentNumber = '';\n  var authoringDate = bundle.timestamp;\n  var confidentiality = '';\n  var encounterType = '';\n  var encounterTypeCode = '';\n  var encounterStartDate = '';\n  var encounterEndDate = '';\n  var patientNumber = '';\n  var patientName = '';\n  var patientGender = '';\n  var patientAddress = '';\n  var patientTelecom = '';\n  var patientBirthdate = '';\n  var patientCommunication = '';\n  var practitionerRole = '';\n  var practitionerDept = '';\n  var practitionerDeptCode = '';\n  var practitionerName = '';\n  var practitionerTelecom = '';\n  var organName = '';\n  var organTelecom = '';\n  var organAddress = '';\n  var conditions = [];\n  var medications = [];\n  var procedures = []; // console.log(entries);\n\n  for (var i = 0; i < entries.length; i++) {\n    // console.log(entries[i].resource.resourceType);\n    var entry = entries[i].resource;\n\n    if (entry.resourceType === 'Composition') {\n      title = entry.title;\n      documentNumber = entry.identifier.value;\n      patientNumber = entry.subject.reference;\n      confidentiality = entry.confidentiality;\n    }\n\n    if (entry.resourceType === 'Encounter') {\n      encounterType = entry.class.display;\n      encounterTypeCode = entry.class.code;\n      encounterStartDate = moment(entry.period.start).format('YYYY-MM-DD');\n      encounterEndDate = moment(entry.period.end).format('YYYY-MM-DD');\n    }\n\n    if (entry.resourceType === 'Patient') {\n      patientName = entry.name[0].text;\n      patientGender = entry.gender;\n      patientAddress = entry.address[0].text;\n      patientTelecom = entry.telecom[0].value;\n      patientBirthdate = entry.birthDate;\n      patientCommunication = entry.communication[0].language.coding[0].display;\n    }\n\n    if (entry.resourceType === 'PractitionerRole') {\n      practitionerRole = entry.code[0].coding[0].code;\n      practitionerDeptCode = entry.specialty[0].coding[0].code;\n      practitionerDept = entry.specialty[0].coding[0].display;\n    }\n\n    if (entry.resourceType === 'Practitioner') {\n      practitionerName = entry.name[0].text;\n      practitionerTelecom = entry.telecom[0].value;\n    }\n\n    if (entry.resourceType === 'Organization') {\n      organName = entry.name;\n      organTelecom = entry.telecom[0].value;\n      organAddress = \"\".concat(entry.address[0].text);\n    }\n\n    if (entry.resourceType === 'Condition') {\n      // console.log(entry.code.coding[0]);\n      entry.code.coding[0].id = entry.id;\n      entry.code.coding[0].recordedDate = entry.recordedDate;\n      conditions.push(entry.code.coding[0]);\n    }\n\n    if (entry.resourceType === 'MedicationRequest') {\n      entry.dosageInstruction.id = entry.id;\n      var medRefId = entry.medicationReference.reference;\n      medRefId = medRefId.split('/');\n      entry.dosageInstruction.medicationReferenceId = medRefId[1];\n      medications.push(entry.dosageInstruction);\n    }\n\n    if (entry.resourceType === 'Medication') {\n      for (var _i = 0; _i < medications.length; _i++) {\n        // console.log(medications[i].medicationReferenceId);\n        if (medications[_i].medicationReferenceId === entry.id) {\n          medications[_i].code = entry.code;\n        }\n      }\n    }\n\n    if (entry.resourceType === 'Procedure') {\n      // console.log(entry.code.coding[0]);\n      entry.code.coding[0].id = entry.id;\n      entry.code.coding[0].performedDateTime = entry.performedDateTime;\n      procedures.push(entry.code.coding[0]);\n    }\n  } // console.log(medications);\n\n\n  return /*#__PURE__*/React.createElement(Paper, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 800,\n    p: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"right\",\n    variant: \"h1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, patientName), /*#__PURE__*/React.createElement(Typography, {\n    align: \"right\",\n    variant: \"h5\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Patient # : \", patientNumber)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"right\",\n    variant: \"h1\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, title), /*#__PURE__*/React.createElement(Typography, {\n    align: \"right\",\n    variant: \"h5\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, \"Document # : \", documentNumber))), /*#__PURE__*/React.createElement(Box, {\n    my: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h4\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, \"\\uB0B4\\uC6D0\\uC815\\uBCF4 (Encounter Information)\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, \"\\uD0C0\\uC785(Encounter Type) : \", encounterType, \" (\", encounterTypeCode, \")\", ' ', /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }), \"\\uC9C4\\uB8CC\\uC77C\\uC790(Encounter Date) : \", encounterStartDate, \" ~\", ' ', encounterEndDate, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 38\n    }\n  }), \"\\uAE30\\uBC00\\uC131(Confidentiality) : \", confidentiality, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 60\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h4\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, \"\\uC778\\uC801\\uC815\\uBCF4 (Patient Information)\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, \"\\uC131\\uBCC4(Gender) : \", patientGender, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 48\n    }\n  }), \"\\uC0DD\\uB144\\uC6D4\\uC77C(Birthdate) : \", patientBirthdate, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 56\n    }\n  }), \"\\uC5B8\\uC5B4(Preferred Language) : \", patientCommunication, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 67\n    }\n  }), \"\\uC804\\uD654\\uBC88\\uD638(Telecom) : \", patientTelecom, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 52\n    }\n  }), \"\\uC8FC\\uC18C (Address) : \", patientAddress)))), /*#__PURE__*/React.createElement(Box, {\n    my: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h4\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, \"\\uC791\\uC131\\uC790 \\uC815\\uBCF4 (Practitioner Information)\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uB984(Name) : \", practitionerName, \" (\", practitionerRole, \") \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 70\n    }\n  }), \"\\uC9C4\\uB8CC\\uACFC(Dept) : \", practitionerDept, \" (\", practitionerDeptCode, \")\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }), \"\\uC804\\uD654\\uBC88\\uD638(Telecom) : \", practitionerTelecom)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h4\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, \"\\uBCD1\\uC6D0\\uC815\\uBCF4 (Custodian Information)\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, \"\\uAE30\\uAD00\\uBA85(Organization Name) : \", organName, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 56\n    }\n  }), \"\\uC804\\uD654\\uBC88\\uD638(Telecom) : \", organTelecom, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 50\n    }\n  }), \"\\uC8FC\\uC18C (Address) : \", organAddress)))), conditions.length > 0 && /*#__PURE__*/React.createElement(Box, {\n    my: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h4\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, \"\\uC9C4\\uB2E8\\uBA85 (Diagnosis)\"), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, \"Recorded Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, \"System\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, \"Code\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, \"Code Name\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, conditions.map(function (condition) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: condition.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 23\n      }\n    }, condition.recordedDate), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 23\n      }\n    }, condition.system), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 23\n      }\n    }, condition.code), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 23\n      }\n    }, condition.display));\n  })))), medications.length > 0 && /*#__PURE__*/React.createElement(Box, {\n    my: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h4\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, \"\\uC57D\\uBB3C\\uCC98\\uBC29\\uB0B4\\uC5ED (Medications)\"), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, \"Start Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, \"End Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }, \"frequency\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }, \"Period\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, \"Medication\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, \"Code System\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, medications.map(function (medication) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: medication.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 23\n      }\n    }, medication[0].timing.repeat.boundsPeriod.start), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 23\n      }\n    }, medication[0].timing.repeat.boundsPeriod.end), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 23\n      }\n    }, medication[0].timing.repeat.period, \" (\", medication[0].timing.repeat.periodUnit, \")\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 23\n      }\n    }, \"(\", medication.code.coding[0].code, \")\", ' ', medication.code.coding[0].display), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 23\n      }\n    }, medication.code.coding[0].system));\n  })))), procedures.length > 0 && /*#__PURE__*/React.createElement(Box, {\n    my: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h4\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }\n  }, \"\\uC218\\uC220 \\uBC0F \\uCC98\\uCE58 (Procedures)\"), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }\n  }, \"Recorded Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 21\n    }\n  }, \"System\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 21\n    }\n  }, \"Code\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 21\n    }\n  }, \"Code Name\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }, procedures.map(function (procedure) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: procedure.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 23\n      }\n    }, procedure.performedDateTime), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 23\n      }\n    }, procedure.system), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 23\n      }\n    }, procedure.code), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 23\n      }\n    }, procedure.display));\n  })))), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }\n  }, \"\\uC791\\uC131\\uC77C\\uC790\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  }, authoringDate)))));\n}\n\nDocumentView.propTypes = {\n  className: PropTypes.string,\n  composition: PropTypes.object.isRequired\n};\nexport default DocumentView;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Records/DocumentsView/Details/DocumentPreview/DocumentView.js"],"names":["React","PropTypes","clsx","moment","PerfectScrollbar","Box","Paper","Grid","Typography","Table","TableHead","TableBody","TableRow","TableCell","makeStyles","useStyles","root","DocumentView","composition","className","rest","classes","bundle","entries","entry","title","documentNumber","authoringDate","timestamp","confidentiality","encounterType","encounterTypeCode","encounterStartDate","encounterEndDate","patientNumber","patientName","patientGender","patientAddress","patientTelecom","patientBirthdate","patientCommunication","practitionerRole","practitionerDept","practitionerDeptCode","practitionerName","practitionerTelecom","organName","organTelecom","organAddress","conditions","medications","procedures","i","length","resource","resourceType","identifier","value","subject","reference","class","display","code","period","start","format","end","name","text","gender","address","telecom","birthDate","communication","language","coding","specialty","id","recordedDate","push","dosageInstruction","medRefId","medicationReference","split","medicationReferenceId","performedDateTime","map","condition","system","medication","timing","repeat","boundsPeriod","periodUnit","procedure","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Paper,\n  Grid,\n  Typography,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  makeStyles\n} from '@material-ui/core';\n// import Logo from 'src/components/Logo';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction DocumentView({ composition, className, ...rest }) {\n  const classes = useStyles();\n\n  // const [title, setTitle] = useState();\n\n  const bundle = composition;\n  const entries = bundle.entry;\n  let title = '';\n  let documentNumber = '';\n  let authoringDate = bundle.timestamp;\n\n  let confidentiality = '';\n\n  let encounterType = '';\n  let encounterTypeCode = '';\n  let encounterStartDate = '';\n  let encounterEndDate = '';\n\n  let patientNumber = '';\n  let patientName = '';\n  let patientGender = '';\n  let patientAddress = '';\n  let patientTelecom = '';\n  let patientBirthdate = '';\n  let patientCommunication = '';\n\n  let practitionerRole = '';\n  let practitionerDept = '';\n  let practitionerDeptCode = '';\n  let practitionerName = '';\n  let practitionerTelecom = '';\n\n  let organName = '';\n  let organTelecom = '';\n  let organAddress = '';\n\n  const conditions = [];\n  const medications = [];\n  const procedures = [];\n  // console.log(entries);\n  for (let i = 0; i < entries.length; i++) {\n    // console.log(entries[i].resource.resourceType);\n    const entry = entries[i].resource;\n\n    if (entry.resourceType === 'Composition') {\n      title = entry.title;\n      documentNumber = entry.identifier.value;\n      patientNumber = entry.subject.reference;\n      confidentiality = entry.confidentiality;\n    }\n\n    if (entry.resourceType === 'Encounter') {\n      encounterType = entry.class.display;\n      encounterTypeCode = entry.class.code;\n      encounterStartDate = moment(entry.period.start).format('YYYY-MM-DD');\n      encounterEndDate = moment(entry.period.end).format('YYYY-MM-DD');\n    }\n\n    if (entry.resourceType === 'Patient') {\n      patientName = entry.name[0].text;\n      patientGender = entry.gender;\n      patientAddress = entry.address[0].text;\n      patientTelecom = entry.telecom[0].value;\n      patientBirthdate = entry.birthDate;\n      patientCommunication = entry.communication[0].language.coding[0].display;\n    }\n\n    if (entry.resourceType === 'PractitionerRole') {\n      practitionerRole = entry.code[0].coding[0].code;\n      practitionerDeptCode = entry.specialty[0].coding[0].code;\n      practitionerDept = entry.specialty[0].coding[0].display;\n    }\n\n    if (entry.resourceType === 'Practitioner') {\n      practitionerName = entry.name[0].text;\n      practitionerTelecom = entry.telecom[0].value;\n    }\n\n    if (entry.resourceType === 'Organization') {\n      organName = entry.name;\n      organTelecom = entry.telecom[0].value;\n      organAddress = `${entry.address[0].text}`;\n    }\n\n    if (entry.resourceType === 'Condition') {\n      // console.log(entry.code.coding[0]);\n      entry.code.coding[0].id = entry.id;\n      entry.code.coding[0].recordedDate = entry.recordedDate;\n      conditions.push(entry.code.coding[0]);\n    }\n\n    if (entry.resourceType === 'MedicationRequest') {\n      entry.dosageInstruction.id = entry.id;\n      let medRefId = entry.medicationReference.reference;\n      medRefId = medRefId.split('/');\n      entry.dosageInstruction.medicationReferenceId = medRefId[1];\n      medications.push(entry.dosageInstruction);\n    }\n\n    if (entry.resourceType === 'Medication') {\n      for (let i = 0; i < medications.length; i++) {\n        // console.log(medications[i].medicationReferenceId);\n        if (medications[i].medicationReferenceId === entry.id) {\n          medications[i].code = entry.code;\n        }\n      }\n    }\n\n    if (entry.resourceType === 'Procedure') {\n      // console.log(entry.code.coding[0]);\n      entry.code.coding[0].id = entry.id;\n      entry.code.coding[0].performedDateTime = entry.performedDateTime;\n      procedures.push(entry.code.coding[0]);\n    }\n  }\n  // console.log(medications);\n\n  return (\n    <Paper className={clsx(classes.root, className)} {...rest}>\n      <PerfectScrollbar>\n        <Box minWidth={800} p={6}>\n          <Grid container justify=\"space-between\">\n            <Grid item>\n              <Typography align=\"right\" variant=\"h1\" color=\"textPrimary\">\n                {patientName}\n              </Typography>\n              <Typography align=\"right\" variant=\"h5\" color=\"textPrimary\">\n                Patient # : {patientNumber}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography align=\"right\" variant=\"h1\" color=\"textPrimary\">\n                {title}\n              </Typography>\n              <Typography align=\"right\" variant=\"h5\" color=\"textPrimary\">\n                Document # : {documentNumber}\n              </Typography>\n            </Grid>\n            {/* <Grid item>\n              <Logo />\n              <Typography variant=\"h5\" color=\"textPrimary\">\n                www.devias.io\n              </Typography>\n            </Grid> */}\n          </Grid>\n          <Box my={4}>\n            <Grid container justify=\"space-between\">\n              <Grid item>\n                <Typography gutterBottom variant=\"h4\" color=\"textPrimary\">\n                  내원정보 (Encounter Information)\n                </Typography>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  타입(Encounter Type) : {encounterType} ({encounterTypeCode}){' '}\n                  <br />\n                  진료일자(Encounter Date) : {encounterStartDate} ~{' '}\n                  {encounterEndDate} <br />\n                  기밀성(Confidentiality) : {confidentiality} <br />\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography gutterBottom variant=\"h4\" color=\"textPrimary\">\n                  인적정보 (Patient Information)\n                </Typography>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  성별(Gender) : {patientGender} <br />\n                  생년월일(Birthdate) : {patientBirthdate} <br />\n                  언어(Preferred Language) : {patientCommunication} <br />\n                  전화번호(Telecom) : {patientTelecom} <br />\n                  주소 (Address) : {patientAddress}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n\n          <Box my={4}>\n            <Grid container justify=\"space-between\">\n              <Grid item>\n                <Typography gutterBottom variant=\"h4\" color=\"textPrimary\">\n                  작성자 정보 (Practitioner Information)\n                </Typography>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  이름(Name) : {practitionerName} ({practitionerRole}) <br />\n                  진료과(Dept) : {practitionerDept} ({practitionerDeptCode})\n                  <br />\n                  전화번호(Telecom) : {practitionerTelecom}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography gutterBottom variant=\"h4\" color=\"textPrimary\">\n                  병원정보 (Custodian Information)\n                </Typography>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  기관명(Organization Name) : {organName} <br />\n                  전화번호(Telecom) : {organTelecom} <br />\n                  주소 (Address) : {organAddress}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n\n          {conditions.length > 0 && (\n            <Box my={4}>\n              <Typography gutterBottom variant=\"h4\" color=\"textPrimary\">\n                진단명 (Diagnosis)\n              </Typography>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Recorded Date</TableCell>\n                    <TableCell>System</TableCell>\n                    <TableCell>Code</TableCell>\n                    <TableCell>Code Name</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {conditions.map(condition => (\n                    <TableRow key={condition.id}>\n                      <TableCell>{condition.recordedDate}</TableCell>\n                      <TableCell>{condition.system}</TableCell>\n                      <TableCell>{condition.code}</TableCell>\n                      <TableCell>{condition.display}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          )}\n\n          {medications.length > 0 && (\n            <Box my={4}>\n              <Typography gutterBottom variant=\"h4\" color=\"textPrimary\">\n                약물처방내역 (Medications)\n              </Typography>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Start Date</TableCell>\n                    <TableCell>End Date</TableCell>\n                    <TableCell>frequency</TableCell>\n                    <TableCell>Period</TableCell>\n                    <TableCell>Medication</TableCell>\n                    <TableCell>Code System</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {medications.map(medication => (\n                    <TableRow key={medication.id}>\n                      <TableCell>\n                        {medication[0].timing.repeat.boundsPeriod.start}\n                      </TableCell>\n                      <TableCell>\n                        {medication[0].timing.repeat.boundsPeriod.end}\n                      </TableCell>\n                      <TableCell></TableCell>\n                      <TableCell>\n                        {medication[0].timing.repeat.period} (\n                        {medication[0].timing.repeat.periodUnit})\n                      </TableCell>\n                      <TableCell>\n                        ({medication.code.coding[0].code}){' '}\n                        {medication.code.coding[0].display}\n                      </TableCell>\n                      <TableCell>{medication.code.coding[0].system}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          )}\n\n          {procedures.length > 0 && (\n            <Box my={4}>\n              <Typography gutterBottom variant=\"h4\" color=\"textPrimary\">\n                수술 및 처치 (Procedures)\n              </Typography>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Recorded Date</TableCell>\n                    <TableCell>System</TableCell>\n                    <TableCell>Code</TableCell>\n                    <TableCell>Code Name</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {procedures.map(procedure => (\n                    <TableRow key={procedure.id}>\n                      <TableCell>{procedure.performedDateTime}</TableCell>\n                      <TableCell>{procedure.system}</TableCell>\n                      <TableCell>{procedure.code}</TableCell>\n                      <TableCell>{procedure.display}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          )}\n          <Box mt={2}>\n            <Typography gutterBottom variant=\"h5\" color=\"textPrimary\">\n              작성일자\n            </Typography>\n            <Typography variant=\"body1\" color=\"textSecondary\">\n              {authoringDate}\n            </Typography>\n          </Box>\n        </Box>\n      </PerfectScrollbar>\n    </Paper>\n  );\n}\n\nDocumentView.propTypes = {\n  className: PropTypes.string,\n  composition: PropTypes.object.isRequired\n};\n\nexport default DocumentView;\n"]},"metadata":{},"sourceType":"module"}