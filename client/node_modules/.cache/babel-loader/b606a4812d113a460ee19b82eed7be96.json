{"ast":null,"code":"import _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Records/FinancialStats/index.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Box, Card, CardHeader, Divider, makeStyles } from \"@material-ui/core\"; // import GenericMoreButton from \"src/components/GenericMoreButton\";\n\nimport Chart from \"./Chart\";\nimport useIsMountedRef from \"src/hooks/useIsMountedRef\";\nvar useStyles = makeStyles(function () {\n  return {\n    root: {},\n    chart: {\n      height: 400\n    }\n  };\n});\n\nfunction FinancialStats(_ref) {\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles(); // const isMountedRef = useIsMountedRef();\n\n  var organizations = useSelector(function (state) {\n    return state.organizations.organizations;\n  });\n  var documents = useSelector(function (state) {\n    return state.documents.documents;\n  }); // const stats = {\n  // \tthisYear: [18, 16, 5, 8, 3, 14, 14, 16, 17, 19, 18, 20],\n  // \tlastYear: [12, 11, 4, 6, 2, 9, 9, 10, 11, 12, 13, 13],\n  // };\n  // const labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  var labels = [];\n  organizations.map(function (organization) {\n    labels.push(organization.title);\n  });\n  var stats = [];\n\n  for (var i = 0; i < organizations.length; i++) {\n    var num = 0;\n\n    for (var j = 0; j < documents.length; j++) {\n      if (organizations[i].id === documents[j].organizationID) {\n        num++;\n      }\n    }\n\n    console.log(num);\n    stats.push(num);\n  }\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Financial Stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 700,\n    pt: 4,\n    pr: 2,\n    pl: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    className: classes.chart,\n    data: stats,\n    labels: labels,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }))));\n}\n\nFinancialStats.propTypes = {\n  className: PropTypes.string\n};\nexport default FinancialStats;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/phr/Records/FinancialStats/index.js"],"names":["React","useState","useEffect","useCallback","useSelector","clsx","PropTypes","PerfectScrollbar","Box","Card","CardHeader","Divider","makeStyles","Chart","useIsMountedRef","useStyles","root","chart","height","FinancialStats","className","rest","classes","organizations","state","documents","labels","map","organization","push","title","stats","i","length","num","j","id","organizationID","console","log","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Box, Card, CardHeader, Divider, makeStyles } from \"@material-ui/core\";\n// import GenericMoreButton from \"src/components/GenericMoreButton\";\nimport Chart from \"./Chart\";\nimport useIsMountedRef from \"src/hooks/useIsMountedRef\";\n\nconst useStyles = makeStyles(() => ({\n\troot: {},\n\tchart: {\n\t\theight: 400,\n\t},\n}));\n\nfunction FinancialStats({ className, ...rest }) {\n\tconst classes = useStyles();\n\t// const isMountedRef = useIsMountedRef();\n\tconst organizations = useSelector((state) => state.organizations.organizations);\n\tconst documents = useSelector((state) => state.documents.documents);\n\n\t// const stats = {\n\t// \tthisYear: [18, 16, 5, 8, 3, 14, 14, 16, 17, 19, 18, 20],\n\t// \tlastYear: [12, 11, 4, 6, 2, 9, 9, 10, 11, 12, 13, 13],\n\t// };\n\n\t// const labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n\tconst labels = [];\n\torganizations.map((organization) => {\n\t\tlabels.push(organization.title);\n\t});\n\tconst stats = [];\n\tfor (let i = 0; i < organizations.length; i++) {\n\t\tlet num = 0;\n\t\tfor (let j = 0; j < documents.length; j++) {\n\t\t\tif (organizations[i].id === documents[j].organizationID) {\n\t\t\t\tnum++;\n\t\t\t}\n\t\t}\n\t\tconsole.log(num);\n\t\tstats.push(num);\n\t}\n\treturn (\n\t\t<Card className={clsx(classes.root, className)} {...rest}>\n\t\t\t{/* <CardHeader action={<GenericMoreButton />} title=\"Financial Stats\" /> */}\n\t\t\t<CardHeader title=\"Financial Stats\" />\n\t\t\t<Divider />\n\t\t\t<PerfectScrollbar>\n\t\t\t\t<Box minWidth={700} pt={4} pr={2} pl={2}>\n\t\t\t\t\t{/* <Chart className={classes.chart} data={stats} labels={labels} /> */}\n\t\t\t\t\t<Chart className={classes.chart} data={stats} labels={labels} />\n\t\t\t\t</Box>\n\t\t\t</PerfectScrollbar>\n\t\t</Card>\n\t);\n}\n\nFinancialStats.propTypes = {\n\tclassName: PropTypes.string,\n};\n\nexport default FinancialStats;\n"]},"metadata":{},"sourceType":"module"}