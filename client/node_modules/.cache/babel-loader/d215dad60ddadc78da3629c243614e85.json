{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/kanban/KanbanView/ListAdd.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport { Box, Button, Card, TextField, makeStyles } from '@material-ui/core';\nimport { createList } from 'src/actions/kanbanActions';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    inner: _defineProperty({\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 380\n    }, theme.breakpoints.down('xs'), {\n      width: 300\n    })\n  };\n});\n\nfunction ListAdd(_ref) {\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isExpanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  var handleAddInit = function handleAddInit() {\n    setExpanded(true);\n  };\n\n  var handleAddCancel = function handleAddCancel() {\n    setExpanded(false);\n    setName('');\n  };\n\n  var handleAddConfirm = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return dispatch(createList(name || 'Untitled list'));\n\n            case 3:\n              setExpanded(false);\n              setName('');\n              enqueueSnackbar('List created', {\n                variant: 'success'\n              });\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              enqueueSnackbar('Ooops!', {\n                variant: 'error'\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function handleAddConfirm() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: classes.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, isExpanded ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"List Title\",\n    name: \"listName\",\n    onChange: handleChange,\n    value: name,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleAddCancel,\n    variant: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleAddConfirm,\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Add\"))) : /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleAddInit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Add another list\")))));\n}\n\nListAdd.propTypes = {\n  className: PropTypes.string\n};\nexport default ListAdd;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/kanban/KanbanView/ListAdd.js"],"names":["React","useState","useDispatch","PropTypes","clsx","useSnackbar","Box","Button","Card","TextField","makeStyles","createList","useStyles","theme","root","inner","marginLeft","spacing","marginRight","width","breakpoints","down","ListAdd","className","rest","classes","dispatch","enqueueSnackbar","isExpanded","setExpanded","name","setName","handleChange","event","persist","target","value","handleAddInit","handleAddCancel","handleAddConfirm","variant","propTypes","string"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport { createList } from 'src/actions/kanbanActions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  inner: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 380,\n    [theme.breakpoints.down('xs')]: {\n      width: 300\n    }\n  }\n}));\n\nfunction ListAdd({ className, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [isExpanded, setExpanded] = useState(false);\n  const [name, setName] = useState('');\n\n  const handleChange = (event) => {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  const handleAddInit = () => {\n    setExpanded(true);\n  };\n\n  const handleAddCancel = () => {\n    setExpanded(false);\n    setName('');\n  };\n\n  const handleAddConfirm = async () => {\n    try {\n      await dispatch(createList(name || 'Untitled list'));\n      setExpanded(false);\n      setName('');\n      enqueueSnackbar('List created', {\n        variant: 'success'\n      });\n    } catch (error) {\n      enqueueSnackbar('Ooops!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card className={classes.inner}>\n        <Box p={2}>\n          {isExpanded ? (\n            <>\n              <TextField\n                fullWidth\n                label=\"List Title\"\n                name=\"listName\"\n                onChange={handleChange}\n                value={name}\n                variant=\"outlined\"\n              />\n              <Box\n                mt={2}\n                display=\"flex\"\n                justifyContent=\"space-between\"\n              >\n                <Button\n                  onClick={handleAddCancel}\n                  variant=\"text\"\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleAddConfirm}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Add\n                </Button>\n              </Box>\n            </>\n          ) : (\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n            >\n              <Button onClick={handleAddInit}>\n                Add another list\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </Card>\n    </div>\n  );\n}\n\nListAdd.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ListAdd;\n"]},"metadata":{},"sourceType":"module"}