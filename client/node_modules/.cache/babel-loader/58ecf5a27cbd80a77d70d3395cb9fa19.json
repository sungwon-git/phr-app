{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/auth/RegisterView/RegisterForm.js\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { Box, Button, Checkbox, FormHelperText, TextField, Typography, Link, makeStyles } from '@material-ui/core';\nimport { register } from 'src/actions/accountActions';\nvar useStyles = makeStyles(function () {\n  return {\n    root: {}\n  };\n});\n\nfunction RegisterForm(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      onSubmitSuccess = _ref.onSubmitSuccess,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"onSubmitSuccess\"]);\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      policy: false\n    },\n    validationSchema: Yup.object().shape({\n      firstName: Yup.string().max(255).required('First name is required'),\n      lastName: Yup.string().max(255).required('Last name is required'),\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      password: Yup.string().min(7).max(255).required('Password is required'),\n      policy: Yup.boolean().oneOf([true], 'This field must be checked')\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var setErrors, setStatus, setSubmitting;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref2.setErrors, setStatus = _ref2.setStatus, setSubmitting = _ref2.setSubmitting;\n                _context.prev = 1;\n                _context.next = 4;\n                return dispatch(register(values));\n\n              case 4:\n                onSubmitSuccess();\n                _context.next = 12;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                setStatus({\n                  success: false\n                });\n                setErrors({\n                  submit: _context.t0.message\n                });\n                setSubmitting(false);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, function (_ref4) {\n    var errors = _ref4.errors,\n        handleBlur = _ref4.handleBlur,\n        handleChange = _ref4.handleChange,\n        handleSubmit = _ref4.handleSubmit,\n        isSubmitting = _ref4.isSubmitting,\n        touched = _ref4.touched,\n        values = _ref4.values;\n    return /*#__PURE__*/React.createElement(\"form\", Object.assign({\n      className: clsx(classes.root, className),\n      onSubmit: handleSubmit\n    }, rest, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.firstName && errors.firstName),\n      fullWidth: true,\n      helperText: touched.firstName && errors.firstName,\n      label: \"First Name\",\n      margin: \"normal\",\n      name: \"firstName\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"firstName\",\n      value: values.firstName,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.lastName && errors.lastName),\n      fullWidth: true,\n      helperText: touched.lastName && errors.lastName,\n      label: \"Last Name\",\n      margin: \"normal\",\n      name: \"lastName\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"lastName\",\n      value: values.lastName,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.email && errors.email),\n      fullWidth: true,\n      helperText: touched.email && errors.email,\n      label: \"Email Address\",\n      margin: \"normal\",\n      name: \"email\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"email\",\n      value: values.email,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.password && errors.password),\n      fullWidth: true,\n      helperText: touched.password && errors.password,\n      label: \"Password\",\n      margin: \"normal\",\n      name: \"password\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"password\",\n      value: values.password,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      alignItems: \"center\",\n      display: \"flex\",\n      mt: 2,\n      ml: -1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: values.policy,\n      name: \"policy\",\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"I have read the\", ' ', /*#__PURE__*/React.createElement(Link, {\n      component: \"a\",\n      href: \"#\",\n      color: \"secondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"Terms and Conditions\"))), Boolean(touched.policy && errors.policy) && /*#__PURE__*/React.createElement(FormHelperText, {\n      error: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, errors.policy), /*#__PURE__*/React.createElement(Box, {\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      disabled: isSubmitting,\n      fullWidth: true,\n      size: \"large\",\n      type: \"submit\",\n      variant: \"contained\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, \"Create account\")));\n  });\n}\n\nRegisterForm.propTypes = {\n  className: PropTypes.string,\n  onSubmitSuccess: PropTypes.func\n};\nRegisterForm.default = {\n  onSubmitSuccess: function onSubmitSuccess() {}\n};\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/auth/RegisterView/RegisterForm.js"],"names":["React","useDispatch","clsx","Yup","PropTypes","Formik","Box","Button","Checkbox","FormHelperText","TextField","Typography","Link","makeStyles","register","useStyles","root","RegisterForm","className","onSubmitSuccess","rest","classes","dispatch","firstName","lastName","email","password","policy","object","shape","string","max","required","min","boolean","oneOf","values","setErrors","setStatus","setSubmitting","success","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","propTypes","func","default"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  FormHelperText,\n  TextField,\n  Typography,\n  Link,\n  makeStyles\n} from '@material-ui/core';\nimport { register } from 'src/actions/accountActions';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction RegisterForm({ className, onSubmitSuccess, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        policy: false\n      }}\n      validationSchema={Yup.object().shape({\n        firstName: Yup.string().max(255).required('First name is required'),\n        lastName: Yup.string().max(255).required('Last name is required'),\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        password: Yup.string().min(7).max(255).required('Password is required'),\n        policy: Yup.boolean().oneOf([true], 'This field must be checked')\n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          await dispatch(register(values));\n          onSubmitSuccess();\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <TextField\n            error={Boolean(touched.firstName && errors.firstName)}\n            fullWidth\n            helperText={touched.firstName && errors.firstName}\n            label=\"First Name\"\n            margin=\"normal\"\n            name=\"firstName\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"firstName\"\n            value={values.firstName}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.lastName && errors.lastName)}\n            fullWidth\n            helperText={touched.lastName && errors.lastName}\n            label=\"Last Name\"\n            margin=\"normal\"\n            name=\"lastName\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"lastName\"\n            value={values.lastName}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <Box\n            alignItems=\"center\"\n            display=\"flex\"\n            mt={2}\n            ml={-1}\n          >\n            <Checkbox\n              checked={values.policy}\n              name=\"policy\"\n              onChange={handleChange}\n            />\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              I have read the\n              {' '}\n              <Link\n                component=\"a\"\n                href=\"#\"\n                color=\"secondary\"\n              >\n                Terms and Conditions\n              </Link>\n            </Typography>\n          </Box>\n          {Boolean(touched.policy && errors.policy) && (\n            <FormHelperText error>\n              {errors.policy}\n            </FormHelperText>\n          )}\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Create account\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nRegisterForm.propTypes = {\n  className: PropTypes.string,\n  onSubmitSuccess: PropTypes.func\n};\n\nRegisterForm.default = {\n  onSubmitSuccess: () => {}\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}