{"ast":null,"code":"import _classCallCheck from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport jwtDecode from 'jwt-decode';\nimport axios from 'src/utils/axios';\n\nvar AuthService = /*#__PURE__*/function () {\n  function AuthService() {\n    var _this = this;\n\n    _classCallCheck(this, AuthService);\n\n    this.setAxiosInterceptors = function (_ref) {\n      var onLogout = _ref.onLogout;\n      axios.interceptors.response.use(function (response) {\n        return response;\n      }, function (error) {\n        if (error.response && error.response.status === 401) {\n          _this.setSession(null);\n\n          if (onLogout) {\n            onLogout();\n          }\n        }\n\n        return Promise.reject(error);\n      });\n    };\n\n    this.loginWithEmailAndPassword = function (email, password) {\n      return new Promise(function (resolve, reject) {\n        axios.post('/api/account/login', {\n          email: email,\n          password: password\n        }).then(function (response) {\n          if (response.data.user) {\n            _this.setSession(response.data.accessToken);\n\n            resolve(response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    };\n\n    this.loginInWithToken = function () {\n      return new Promise(function (resolve, reject) {\n        axios.get('/api/account/me').then(function (response) {\n          if (response.data.user) {\n            resolve(response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    };\n\n    this.logout = function () {\n      _this.setSession(null);\n    };\n\n    this.setSession = function (accessToken) {\n      if (accessToken) {\n        localStorage.setItem('accessToken', accessToken);\n        axios.defaults.headers.common.Authorization = \"Bearer \".concat(accessToken);\n      } else {\n        localStorage.removeItem('accessToken');\n        delete axios.defaults.headers.common.Authorization;\n      }\n    };\n\n    this.getAccessToken = function () {\n      return localStorage.getItem('accessToken');\n    };\n\n    this.isValidToken = function (accessToken) {\n      if (!accessToken) {\n        return false;\n      }\n\n      var decoded = jwtDecode(accessToken);\n      var currentTime = Date.now() / 1000;\n      return decoded.exp > currentTime;\n    };\n\n    this.isAuthenticated = function () {\n      return !!_this.getAccessToken();\n    };\n  }\n\n  _createClass(AuthService, [{\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      var accessToken = this.getAccessToken();\n\n      if (!accessToken) {\n        return;\n      }\n\n      if (this.isValidToken(accessToken)) {\n        this.setSession(accessToken);\n      } else {\n        this.setSession(null);\n      }\n    }\n  }]);\n\n  return AuthService;\n}();\n\nvar authService = new AuthService();\nexport default authService;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/services/authService.js"],"names":["jwtDecode","axios","AuthService","setAxiosInterceptors","onLogout","interceptors","response","use","error","status","setSession","Promise","reject","loginWithEmailAndPassword","email","password","resolve","post","then","data","user","accessToken","catch","loginInWithToken","get","logout","localStorage","setItem","defaults","headers","common","Authorization","removeItem","getAccessToken","getItem","isValidToken","decoded","currentTime","Date","now","exp","isAuthenticated","authService"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;IAEMC,W;;;;;;SACJC,oB,GAAuB,gBAAkB;AAAA,UAAfC,QAAe,QAAfA,QAAe;AACvCH,MAAAA,KAAK,CAACI,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACE,UAACD,QAAD;AAAA,eAAcA,QAAd;AAAA,OADF,EAEE,UAACE,KAAD,EAAW;AACT,YAAIA,KAAK,CAACF,QAAN,IAAkBE,KAAK,CAACF,QAAN,CAAeG,MAAf,KAA0B,GAAhD,EAAqD;AACnD,UAAA,KAAI,CAACC,UAAL,CAAgB,IAAhB;;AAEA,cAAIN,QAAJ,EAAc;AACZA,YAAAA,QAAQ;AACT;AACF;;AAED,eAAOO,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,OAZH;AAcD,K;;SAgBDK,yB,GAA4B,UAACC,KAAD,EAAQC,QAAR;AAAA,aAAqB,IAAIJ,OAAJ,CAAY,UAACK,OAAD,EAAUJ,MAAV,EAAqB;AAChFX,QAAAA,KAAK,CAACgB,IAAN,CAAW,oBAAX,EAAiC;AAAEH,UAAAA,KAAK,EAALA,KAAF;AAASC,UAAAA,QAAQ,EAARA;AAAT,SAAjC,EACGG,IADH,CACQ,UAACZ,QAAD,EAAc;AAClB,cAAIA,QAAQ,CAACa,IAAT,CAAcC,IAAlB,EAAwB;AACtB,YAAA,KAAI,CAACV,UAAL,CAAgBJ,QAAQ,CAACa,IAAT,CAAcE,WAA9B;;AACAL,YAAAA,OAAO,CAACV,QAAQ,CAACa,IAAT,CAAcC,IAAf,CAAP;AACD,WAHD,MAGO;AACLR,YAAAA,MAAM,CAACN,QAAQ,CAACa,IAAT,CAAcX,KAAf,CAAN;AACD;AACF,SARH,EASGc,KATH,CASS,UAACd,KAAD,EAAW;AAChBI,UAAAA,MAAM,CAACJ,KAAD,CAAN;AACD,SAXH;AAYD,OAbgD,CAArB;AAAA,K;;SAe5Be,gB,GAAmB;AAAA,aAAM,IAAIZ,OAAJ,CAAY,UAACK,OAAD,EAAUJ,MAAV,EAAqB;AACxDX,QAAAA,KAAK,CAACuB,GAAN,CAAU,iBAAV,EACGN,IADH,CACQ,UAACZ,QAAD,EAAc;AAClB,cAAIA,QAAQ,CAACa,IAAT,CAAcC,IAAlB,EAAwB;AACtBJ,YAAAA,OAAO,CAACV,QAAQ,CAACa,IAAT,CAAcC,IAAf,CAAP;AACD,WAFD,MAEO;AACLR,YAAAA,MAAM,CAACN,QAAQ,CAACa,IAAT,CAAcX,KAAf,CAAN;AACD;AACF,SAPH,EAQGc,KARH,CAQS,UAACd,KAAD,EAAW;AAChBI,UAAAA,MAAM,CAACJ,KAAD,CAAN;AACD,SAVH;AAWD,OAZwB,CAAN;AAAA,K;;SAcnBiB,M,GAAS,YAAM;AACb,MAAA,KAAI,CAACf,UAAL,CAAgB,IAAhB;AACD,K;;SAEDA,U,GAAa,UAACW,WAAD,EAAiB;AAC5B,UAAIA,WAAJ,EAAiB;AACfK,QAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCN,WAApC;AACApB,QAAAA,KAAK,CAAC2B,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,oBAAwDV,WAAxD;AACD,OAHD,MAGO;AACLK,QAAAA,YAAY,CAACM,UAAb,CAAwB,aAAxB;AACA,eAAO/B,KAAK,CAAC2B,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAArC;AACD;AACF,K;;SAEDE,c,GAAiB;AAAA,aAAMP,YAAY,CAACQ,OAAb,CAAqB,aAArB,CAAN;AAAA,K;;SAEjBC,Y,GAAe,UAACd,WAAD,EAAiB;AAC9B,UAAI,CAACA,WAAL,EAAkB;AAChB,eAAO,KAAP;AACD;;AAED,UAAMe,OAAO,GAAGpC,SAAS,CAACqB,WAAD,CAAzB;AACA,UAAMgB,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC;AAEA,aAAOH,OAAO,CAACI,GAAR,GAAcH,WAArB;AACD,K;;SAEDI,e,GAAkB;AAAA,aAAM,CAAC,CAAC,KAAI,CAACR,cAAL,EAAR;AAAA,K;;;;;WAtElB,gCAAuB;AACrB,UAAMZ,WAAW,GAAG,KAAKY,cAAL,EAApB;;AAEA,UAAI,CAACZ,WAAL,EAAkB;AAChB;AACD;;AAED,UAAI,KAAKc,YAAL,CAAkBd,WAAlB,CAAJ,EAAoC;AAClC,aAAKX,UAAL,CAAgBW,WAAhB;AACD,OAFD,MAEO;AACL,aAAKX,UAAL,CAAgB,IAAhB;AACD;AACF;;;;;;AA6DH,IAAMgC,WAAW,GAAG,IAAIxC,WAAJ,EAApB;AAEA,eAAewC,WAAf","sourcesContent":["import jwtDecode from 'jwt-decode';\nimport axios from 'src/utils/axios';\n\nclass AuthService {\n  setAxiosInterceptors = ({ onLogout }) => {\n    axios.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response && error.response.status === 401) {\n          this.setSession(null);\n\n          if (onLogout) {\n            onLogout();\n          }\n        }\n\n        return Promise.reject(error);\n      }\n    );\n  };\n\n  handleAuthentication() {\n    const accessToken = this.getAccessToken();\n\n    if (!accessToken) {\n      return;\n    }\n\n    if (this.isValidToken(accessToken)) {\n      this.setSession(accessToken);\n    } else {\n      this.setSession(null);\n    }\n  }\n\n  loginWithEmailAndPassword = (email, password) => new Promise((resolve, reject) => {\n    axios.post('/api/account/login', { email, password })\n      .then((response) => {\n        if (response.data.user) {\n          this.setSession(response.data.accessToken);\n          resolve(response.data.user);\n        } else {\n          reject(response.data.error);\n        }\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  })\n\n  loginInWithToken = () => new Promise((resolve, reject) => {\n    axios.get('/api/account/me')\n      .then((response) => {\n        if (response.data.user) {\n          resolve(response.data.user);\n        } else {\n          reject(response.data.error);\n        }\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  })\n\n  logout = () => {\n    this.setSession(null);\n  }\n\n  setSession = (accessToken) => {\n    if (accessToken) {\n      localStorage.setItem('accessToken', accessToken);\n      axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n    } else {\n      localStorage.removeItem('accessToken');\n      delete axios.defaults.headers.common.Authorization;\n    }\n  }\n\n  getAccessToken = () => localStorage.getItem('accessToken');\n\n  isValidToken = (accessToken) => {\n    if (!accessToken) {\n      return false;\n    }\n\n    const decoded = jwtDecode(accessToken);\n    const currentTime = Date.now() / 1000;\n\n    return decoded.exp > currentTime;\n  }\n\n  isAuthenticated = () => !!this.getAccessToken()\n}\n\nconst authService = new AuthService();\n\nexport default authService;\n"]},"metadata":{},"sourceType":"module"}