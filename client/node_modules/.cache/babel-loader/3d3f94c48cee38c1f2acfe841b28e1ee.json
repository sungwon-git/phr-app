{"ast":null,"code":"import _objectSpread from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport mock from 'src/utils/mock';\nimport _ from 'lodash';\nvar board = {\n  lists: [{\n    id: '5e849c39325dc5ef58e5a5db',\n    name: 'Incoming',\n    cardIds: ['5e849c8708bd72683b454747', '5e849c90fabe1f1f4b3557f6', '5e849c977ef6265938bfd90b', '5e849c9e34ee93bc7255c599']\n  }, {\n    id: '5e849c2b38d238c33e516755',\n    name: 'In progress',\n    cardIds: ['5e849ca7d063dc3830d4b49c', '5e849cb5d0c6e8894451fdfa']\n  }],\n  cards: [{\n    id: '5e849c8708bd72683b454747',\n    attachments: [],\n    checklists: [{\n      id: '5e84a8175c48d3f5b1d01972',\n      name: 'Update home page',\n      checkItems: [{\n        id: '5e85af37da584c5e4bd8a06c',\n        name: 'An item',\n        state: 'complete'\n      }]\n    }],\n    comments: [{\n      id: '15e849c5a35d4dff4f88ebff6',\n      cardId: '5e849c8708bd72683b454747',\n      createdAt: moment().subtract(5, 'days').toDate().getTime(),\n      memberId: '5e887ac47eed253091be10cb',\n      message: 'This is a comment'\n    }],\n    cover: '/static/images/projects/project_3.png',\n    description: 'Duis condimentum lacus finibus felis pellentesque, ac auctor nibh fermentum. Duis sed dui ante. Phasellus id eros tincidunt, dictum lorem vitae, pellentesque sem. Aenean eu enim sit amet mauris rhoncus mollis. Sed enim turpis, porta a felis et, luctus faucibus nisi. Phasellus et metus fermentum, ultrices arcu aliquam, facilisis justo. Cras nunc nunc, elementum sed euismod ut, maximus eget nibh. Phasellus condimentum lorem neque. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Fusce sagittis pharetra eleifend. Suspendisse potenti.',\n    due: moment().add(7, 'days').toDate().getTime(),\n    isSubscribed: false,\n    listId: '5e849c39325dc5ef58e5a5db',\n    memberIds: ['5e86809283e28b96d2d38537'],\n    name: 'Call with sales of HubSpot'\n  }, {\n    id: '5e849c90fabe1f1f4b3557f6',\n    attachments: [],\n    checklists: [],\n    comments: [],\n    cover: null,\n    description: 'We are looking for vue experience and of course node js strong knowledge',\n    due: moment().add(6, 'days').toDate().getTime(),\n    isSubscribed: true,\n    listId: '5e849c39325dc5ef58e5a5db',\n    memberIds: ['5e887b209c28ac3dd97f6db5', '5e887a62195cc5aef7e8ca5d'],\n    name: 'Interview for the Asis. Sales Manager'\n  }, {\n    id: '5e849c977ef6265938bfd90b',\n    attachments: [],\n    checklists: [],\n    comments: [],\n    cover: null,\n    description: 'We nede to make it aggresive with pricing because it’s in their interest to acquire us',\n    due: null,\n    isSubscribed: false,\n    listId: '5e849c39325dc5ef58e5a5db',\n    memberIds: [],\n    name: 'Change the height of the top bar because it looks too chunky'\n  }, {\n    id: '5e849c9e34ee93bc7255c599',\n    attachments: [],\n    checklists: [],\n    comments: [],\n    cover: null,\n    description: 'We nede to make it aggresive with pricing because it’s in their interest to acquire us',\n    due: null,\n    isSubscribed: false,\n    listId: '5e849c39325dc5ef58e5a5db',\n    memberIds: ['5e887ac47eed253091be10cb', '5e86809283e28b96d2d38537'],\n    name: 'Integrate Stripe API'\n  }, {\n    id: '5e849ca7d063dc3830d4b49c',\n    attachments: [],\n    checklists: [],\n    comments: [],\n    cover: null,\n    description: 'We need to make it aggresive with pricing because it’s in their interest to acquire us',\n    due: null,\n    isSubscribed: true,\n    listId: '5e849c2b38d238c33e516755',\n    memberIds: ['5e887a62195cc5aef7e8ca5d'],\n    name: 'Update the customer API for payments'\n  }, {\n    id: '5e849cb5d0c6e8894451fdfa',\n    attachments: [],\n    checklists: [],\n    comments: [],\n    cover: null,\n    description: 'We need to make it aggresive with pricing because it’s in their interest to acquire us',\n    due: null,\n    isSubscribed: true,\n    listId: '5e849c2b38d238c33e516755',\n    memberIds: [],\n    name: 'Redesign the landing page'\n  }],\n  members: [{\n    id: '5e887a62195cc5aef7e8ca5d',\n    name: 'Ekaterina Tankova',\n    avatar: '/static/images/avatars/avatar_2.png'\n  }, {\n    id: '5e887ac47eed253091be10cb',\n    name: 'Cao Yu',\n    avatar: '/static/images/avatars/avatar_3.png'\n  }, {\n    id: '5e887b209c28ac3dd97f6db5',\n    name: 'Alex Richardson',\n    avatar: '/static/images/avatars/avatar_4.png'\n  }, {\n    id: '5e887b7602bdbc4dbb234b27',\n    name: 'Anje Keizer',\n    avatar: '/static/images/avatars/avatar_5.png'\n  }, {\n    id: '5e86809283e28b96d2d38537',\n    name: 'Katarina Smith',\n    avatar: '/static/images/avatars/avatar_6.png'\n  }]\n};\nmock.onGet('/api/kanban/board').reply(200, {\n  board: board\n});\nmock.onPost('/api/kanban/board/lists/new').reply(function (request) {\n  var _JSON$parse = JSON.parse(request.data),\n      name = _JSON$parse.name;\n\n  var list = {\n    id: uuidv4(),\n    name: name,\n    cardIds: []\n  };\n\n  _.assign(board, {\n    lists: [].concat(_toConsumableArray(board.lists), [list])\n  });\n\n  return [200, {\n    list: list\n  }];\n});\nmock.onPost('/api/kanban/board/list/update').reply(function (request) {\n  var _JSON$parse2 = JSON.parse(request.data),\n      listId = _JSON$parse2.listId,\n      update = _JSON$parse2.update;\n\n  var list = board.lists.find(function (_list) {\n    return _list.id === listId;\n  });\n\n  _.assign(list, update);\n\n  return [200, {\n    list: list\n  }];\n});\nmock.onPost('/api/kanban/board/lists/clear').reply(function (request) {\n  var _JSON$parse3 = JSON.parse(request.data),\n      listId = _JSON$parse3.listId;\n\n  _.assign(board, {\n    lists: _.map(board.lists, function (list) {\n      if (list.id === listId) {\n        _.assign(list, {\n          cardIds: []\n        });\n      }\n\n      return list;\n    }),\n    cards: board.cards.filter(function (card) {\n      return card.listId !== listId;\n    })\n  });\n\n  return [200, {\n    listId: listId\n  }];\n});\nmock.onPost('/api/kanban/board/lists/remove').reply(function (request) {\n  var _JSON$parse4 = JSON.parse(request.data),\n      listId = _JSON$parse4.listId;\n\n  _.assign(board, {\n    lists: _.reject(board.lists, {\n      id: listId\n    }),\n    cards: board.cards.filter(function (card) {\n      return card.listId !== listId;\n    })\n  });\n\n  return [200, {\n    listId: listId\n  }];\n});\nmock.onPost('/api/kanban/board/cards/new').reply(function (request) {\n  var _JSON$parse5 = JSON.parse(request.data),\n      listId = _JSON$parse5.listId,\n      name = _JSON$parse5.name;\n\n  var card = {\n    id: uuidv4(),\n    attachments: [],\n    checklists: [],\n    comments: [],\n    cover: null,\n    description: null,\n    due: null,\n    isSubscribed: false,\n    listId: listId,\n    memberIds: [],\n    name: name\n  };\n\n  _.assign(board, {\n    cards: [].concat(_toConsumableArray(board.cards), [card]),\n    lists: _.map(board.lists, function (list) {\n      if (list.id === listId) {\n        _.assign(list, {\n          cardIds: [].concat(_toConsumableArray(list.cardIds), [card.id])\n        });\n      }\n\n      return list;\n    })\n  });\n\n  return [200, {\n    card: card\n  }];\n});\nmock.onPost('/api/kanban/board/cards/update').reply(function (request) {\n  var _JSON$parse6 = JSON.parse(request.data),\n      cardId = _JSON$parse6.cardId,\n      update = _JSON$parse6.update;\n\n  var card = board.cards.find(function (_card) {\n    return _card.id === cardId;\n  });\n\n  _.assign(card, update);\n\n  return [200, {\n    card: card\n  }];\n});\nmock.onPost('/api/kanban/board/cards/move').reply(function (request) {\n  var _JSON$parse7 = JSON.parse(request.data),\n      cardId = _JSON$parse7.cardId,\n      position = _JSON$parse7.position,\n      listId = _JSON$parse7.listId;\n\n  var card = board.cards.find(function (_card) {\n    return _card.id === cardId;\n  });\n  var sourceList = board.lists.find(function (list) {\n    return list.id === card.listId;\n  });\n\n  _.pull(sourceList.cardIds, cardId);\n\n  if (listId) {\n    var destinationList = board.lists.find(function (list) {\n      return list.id === card.listId;\n    });\n    sourceList.cardIds.splice(destinationList, 0, card.id);\n    card.listId = destinationList.id;\n  } else {\n    sourceList.cardIds.splice(position, 0, card.id);\n  }\n\n  return [200, true];\n});\nmock.onPost('/api/kanban/board/cards/remove').reply(function (request) {\n  var _JSON$parse8 = JSON.parse(request.data),\n      cardId = _JSON$parse8.cardId;\n\n  _.assign(board, {\n    cards: _.reject(board.cards, {\n      id: cardId\n    }),\n    lists: _.map(board.lists, function (list) {\n      _.assign(list, {\n        cardIds: list.cardIds.filter(function (_cardId) {\n          return _cardId !== cardId;\n        })\n      });\n\n      return list;\n    })\n  });\n\n  return [200, {\n    cardId: cardId\n  }];\n});\nmock.onPost('/api/kanban/board/cards/comments').reply(function (request) {\n  var _JSON$parse9 = JSON.parse(request.data),\n      userId = _JSON$parse9.userId,\n      cardId = _JSON$parse9.cardId,\n      message = _JSON$parse9.message;\n\n  var comment = {\n    id: uuidv4(),\n    cardId: cardId,\n    createdAt: moment().toDate().getTime(),\n    memberId: userId,\n    message: message\n  };\n\n  _.assign(board, {\n    cards: _.map(board.cards, function (card) {\n      _.assign(card, {\n        comments: [].concat(_toConsumableArray(card.comments), [comment])\n      });\n\n      return card;\n    })\n  });\n\n  return [200, {\n    comment: comment\n  }];\n});\nmock.onPost('/api/kanban/board/checklists/new').reply(function (request) {\n  var _JSON$parse10 = JSON.parse(request.data),\n      cardId = _JSON$parse10.cardId,\n      name = _JSON$parse10.name;\n\n  var checklist = {\n    id: uuidv4(),\n    name: name,\n    checkItems: []\n  };\n\n  _.assign(board, {\n    cards: _.map(board.cards, function (card) {\n      if (card.id === cardId) {\n        _.assign(card, {\n          checklists: [].concat(_toConsumableArray(card.checklists), [checklist])\n        });\n      }\n\n      return card;\n    })\n  });\n\n  return [200, {\n    checklist: checklist\n  }];\n});\nmock.onPost('/api/kanban/board/checklists/update').reply(function (request) {\n  var _JSON$parse11 = JSON.parse(request.data),\n      cardId = _JSON$parse11.cardId,\n      checklistId = _JSON$parse11.checklistId,\n      update = _JSON$parse11.update;\n\n  var checklist = null;\n\n  _.assign(board, {\n    cards: _.map(board.cards, function (card) {\n      if (card.id === cardId) {\n        _.map(card.checklists, function (_checklist) {\n          if (_checklist.id === checklistId) {\n            _.assign(_checklist, _objectSpread({}, update));\n\n            checklist = _checklist;\n          }\n\n          return _checklist;\n        });\n      }\n\n      return card;\n    })\n  });\n\n  return [200, {\n    checklist: checklist\n  }];\n});\nmock.onPost('/api/kanban/board/checklists/remove').reply(function (request) {\n  var _JSON$parse12 = JSON.parse(request.data),\n      cardId = _JSON$parse12.cardId,\n      checklistId = _JSON$parse12.checklistId;\n\n  _.assign(board, {\n    cards: _.map(board.cards, function (card) {\n      if (card.id === cardId) {\n        _.assign(card, {\n          checklists: _.reject(card.checklists, {\n            id: checklistId\n          })\n        });\n      }\n\n      return card;\n    })\n  });\n\n  return [200, true];\n});\nmock.onPost('/api/kanban/board/checkitems/new').reply(function (request) {\n  var _JSON$parse13 = JSON.parse(request.data),\n      cardId = _JSON$parse13.cardId,\n      checklistId = _JSON$parse13.checklistId,\n      name = _JSON$parse13.name;\n\n  var checkItem = {\n    id: uuidv4(),\n    checklistId: checklistId,\n    name: name,\n    status: 'incomplete'\n  };\n\n  _.assign(board, {\n    cards: _.map(board.cards, function (card) {\n      if (card.id === cardId) {\n        _.assign(card, {\n          checklists: card.checklists.map(function (checklist) {\n            if (checklist.id === checklistId) {\n              _.assign(checklist, {\n                checkItems: [].concat(_toConsumableArray(checklist.checkItems), [checkItem])\n              });\n            }\n\n            return checklist;\n          })\n        });\n      }\n\n      return card;\n    })\n  });\n\n  return [200, {\n    checkItem: checkItem\n  }];\n});\nmock.onPost('/api/kanban/board/checkitems/update').reply(function (request) {\n  var _JSON$parse14 = JSON.parse(request.data),\n      cardId = _JSON$parse14.cardId,\n      checklistId = _JSON$parse14.checklistId,\n      checkItemId = _JSON$parse14.checkItemId,\n      update = _JSON$parse14.update;\n\n  var checkItem = null;\n\n  _.assign(board, {\n    cards: _.map(board.cards, function (card) {\n      if (card.id === cardId) {\n        _.assign(card, {\n          checklists: _.map(card.checklists, function (checklist) {\n            if (checklist.id === checklistId) {\n              _.assign(checklist, {\n                checkItems: _.map(checklist.checkItems, function (_checkItem) {\n                  if (_checkItem.id === checkItemId) {\n                    _.assign(_checkItem, _objectSpread({}, update));\n\n                    checkItem = _checkItem;\n                  }\n\n                  return _checkItem;\n                })\n              });\n            }\n\n            return checklist;\n          })\n        });\n      }\n\n      return card;\n    })\n  });\n\n  return [200, {\n    checkItem: checkItem\n  }];\n});\nmock.onPost('/api/kanban/board/checkitems/remove').reply(function (request) {\n  var _JSON$parse15 = JSON.parse(request.data),\n      cardId = _JSON$parse15.cardId,\n      checklistId = _JSON$parse15.checklistId,\n      checkItemId = _JSON$parse15.checkItemId;\n\n  _.assign(board, {\n    cards: _.map(board.cards, function (card) {\n      if (card.id === cardId) {\n        _.assign(card, {\n          checklists: _.map(card.checklists, function (checklist) {\n            if (checklist.id === checklistId) {\n              _.assign(checklist, {\n                checkItems: _.reject(checklist.checkItems, {\n                  id: checkItemId\n                })\n              });\n            }\n\n            return checklist;\n          })\n        });\n      }\n\n      return card;\n    })\n  });\n\n  return [200, true];\n});","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/mock/kanbanMock.js"],"names":["moment","v4","uuidv4","mock","_","board","lists","id","name","cardIds","cards","attachments","checklists","checkItems","state","comments","cardId","createdAt","subtract","toDate","getTime","memberId","message","cover","description","due","add","isSubscribed","listId","memberIds","members","avatar","onGet","reply","onPost","request","JSON","parse","data","list","assign","update","find","_list","map","filter","card","reject","_card","position","sourceList","pull","destinationList","splice","_cardId","userId","comment","checklist","checklistId","_checklist","checkItem","status","checkItemId","_checkItem"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport mock from 'src/utils/mock';\nimport _ from 'lodash';\n\nconst board = {\n  lists: [\n    {\n      id: '5e849c39325dc5ef58e5a5db',\n      name: 'Incoming',\n      cardIds: [\n        '5e849c8708bd72683b454747',\n        '5e849c90fabe1f1f4b3557f6',\n        '5e849c977ef6265938bfd90b',\n        '5e849c9e34ee93bc7255c599'\n      ]\n    },\n    {\n      id: '5e849c2b38d238c33e516755',\n      name: 'In progress',\n      cardIds: [\n        '5e849ca7d063dc3830d4b49c',\n        '5e849cb5d0c6e8894451fdfa'\n      ]\n    }\n  ],\n  cards: [\n    {\n      id: '5e849c8708bd72683b454747',\n      attachments: [],\n      checklists: [\n        {\n          id: '5e84a8175c48d3f5b1d01972',\n          name: 'Update home page',\n          checkItems: [\n            {\n              id: '5e85af37da584c5e4bd8a06c',\n              name: 'An item',\n              state: 'complete'\n            }\n          ]\n        }\n      ],\n      comments: [\n        {\n          id: '15e849c5a35d4dff4f88ebff6',\n          cardId: '5e849c8708bd72683b454747',\n          createdAt: moment()\n            .subtract(5, 'days')\n            .toDate()\n            .getTime(),\n          memberId: '5e887ac47eed253091be10cb',\n          message: 'This is a comment'\n        }\n      ],\n      cover: '/static/images/projects/project_3.png',\n      description: 'Duis condimentum lacus finibus felis pellentesque, ac auctor nibh fermentum. Duis sed dui ante. Phasellus id eros tincidunt, dictum lorem vitae, pellentesque sem. Aenean eu enim sit amet mauris rhoncus mollis. Sed enim turpis, porta a felis et, luctus faucibus nisi. Phasellus et metus fermentum, ultrices arcu aliquam, facilisis justo. Cras nunc nunc, elementum sed euismod ut, maximus eget nibh. Phasellus condimentum lorem neque. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Fusce sagittis pharetra eleifend. Suspendisse potenti.',\n      due: moment()\n        .add(7, 'days')\n        .toDate()\n        .getTime(),\n      isSubscribed: false,\n      listId: '5e849c39325dc5ef58e5a5db',\n      memberIds: ['5e86809283e28b96d2d38537'],\n      name: 'Call with sales of HubSpot'\n    },\n    {\n      id: '5e849c90fabe1f1f4b3557f6',\n      attachments: [],\n      checklists: [],\n      comments: [],\n      cover: null,\n      description: 'We are looking for vue experience and of course node js strong knowledge',\n      due: moment()\n        .add(6, 'days')\n        .toDate()\n        .getTime(),\n      isSubscribed: true,\n      listId: '5e849c39325dc5ef58e5a5db',\n      memberIds: ['5e887b209c28ac3dd97f6db5', '5e887a62195cc5aef7e8ca5d'],\n      name: 'Interview for the Asis. Sales Manager'\n    },\n    {\n      id: '5e849c977ef6265938bfd90b',\n      attachments: [],\n      checklists: [],\n      comments: [],\n      cover: null,\n      description: 'We nede to make it aggresive with pricing because it’s in their interest to acquire us',\n      due: null,\n      isSubscribed: false,\n      listId: '5e849c39325dc5ef58e5a5db',\n      memberIds: [],\n      name: 'Change the height of the top bar because it looks too chunky',\n    },\n    {\n      id: '5e849c9e34ee93bc7255c599',\n      attachments: [],\n      checklists: [],\n      comments: [],\n      cover: null,\n      description: 'We nede to make it aggresive with pricing because it’s in their interest to acquire us',\n      due: null,\n      isSubscribed: false,\n      listId: '5e849c39325dc5ef58e5a5db',\n      memberIds: ['5e887ac47eed253091be10cb', '5e86809283e28b96d2d38537'],\n      name: 'Integrate Stripe API'\n    },\n    {\n      id: '5e849ca7d063dc3830d4b49c',\n      attachments: [],\n      checklists: [],\n      comments: [],\n      cover: null,\n      description: 'We need to make it aggresive with pricing because it’s in their interest to acquire us',\n      due: null,\n      isSubscribed: true,\n      listId: '5e849c2b38d238c33e516755',\n      memberIds: ['5e887a62195cc5aef7e8ca5d'],\n      name: 'Update the customer API for payments'\n    },\n    {\n      id: '5e849cb5d0c6e8894451fdfa',\n      attachments: [],\n      checklists: [],\n      comments: [],\n      cover: null,\n      description: 'We need to make it aggresive with pricing because it’s in their interest to acquire us',\n      due: null,\n      isSubscribed: true,\n      listId: '5e849c2b38d238c33e516755',\n      memberIds: [],\n      name: 'Redesign the landing page'\n    }\n  ],\n  members: [\n    {\n      id: '5e887a62195cc5aef7e8ca5d',\n      name: 'Ekaterina Tankova',\n      avatar: '/static/images/avatars/avatar_2.png'\n    },\n    {\n      id: '5e887ac47eed253091be10cb',\n      name: 'Cao Yu',\n      avatar: '/static/images/avatars/avatar_3.png'\n    },\n    {\n      id: '5e887b209c28ac3dd97f6db5',\n      name: 'Alex Richardson',\n      avatar: '/static/images/avatars/avatar_4.png'\n    },\n    {\n      id: '5e887b7602bdbc4dbb234b27',\n      name: 'Anje Keizer',\n      avatar: '/static/images/avatars/avatar_5.png'\n    },\n    {\n      id: '5e86809283e28b96d2d38537',\n      name: 'Katarina Smith',\n      avatar: '/static/images/avatars/avatar_6.png'\n    }\n  ]\n};\n\nmock.onGet('/api/kanban/board').reply(200, {\n  board\n});\n\nmock.onPost('/api/kanban/board/lists/new').reply((request) => {\n  const { name } = JSON.parse(request.data);\n  const list = {\n    id: uuidv4(),\n    name,\n    cardIds: []\n  };\n\n  _.assign(board, {\n    lists: [...board.lists, list]\n  });\n\n  return [200, { list }];\n});\n\nmock.onPost('/api/kanban/board/list/update').reply((request) => {\n  const { listId, update } = JSON.parse(request.data);\n  const list = board.lists.find((_list) => _list.id === listId);\n\n  _.assign(list, update);\n\n  return [200, { list }];\n});\n\nmock.onPost('/api/kanban/board/lists/clear').reply((request) => {\n  const { listId } = JSON.parse(request.data);\n\n  _.assign(board, {\n    lists: _.map(board.lists, (list) => {\n      if (list.id === listId) {\n        _.assign(list, {\n          cardIds: []\n        });\n      }\n\n      return list;\n    }),\n    cards: board.cards.filter((card) => card.listId !== listId)\n  });\n\n  return [200, { listId }];\n});\n\nmock.onPost('/api/kanban/board/lists/remove').reply((request) => {\n  const { listId } = JSON.parse(request.data);\n\n  _.assign(board, {\n    lists: _.reject(board.lists, { id: listId }),\n    cards: board.cards.filter((card) => card.listId !== listId)\n  });\n\n  return [200, { listId }];\n});\n\nmock.onPost('/api/kanban/board/cards/new').reply((request) => {\n  const { listId, name } = JSON.parse(request.data);\n  const card = {\n    id: uuidv4(),\n    attachments: [],\n    checklists: [],\n    comments: [],\n    cover: null,\n    description: null,\n    due: null,\n    isSubscribed: false,\n    listId,\n    memberIds: [],\n    name\n  };\n\n  _.assign(board, {\n    cards: [...board.cards, card],\n    lists: _.map(board.lists, (list) => {\n      if (list.id === listId) {\n        _.assign(list, {\n          cardIds: [...list.cardIds, card.id]\n        });\n      }\n\n      return list;\n    })\n  });\n\n  return [200, { card }];\n});\n\nmock.onPost('/api/kanban/board/cards/update').reply((request) => {\n  const { cardId, update } = JSON.parse(request.data);\n  const card = board.cards.find((_card) => _card.id === cardId);\n\n  _.assign(card, update);\n\n  return [200, { card }];\n});\n\nmock.onPost('/api/kanban/board/cards/move').reply((request) => {\n  const { cardId, position, listId } = JSON.parse(request.data);\n  const card = board.cards.find((_card) => _card.id === cardId);\n  const sourceList = board.lists.find((list) => list.id === card.listId);\n\n  _.pull(sourceList.cardIds, cardId);\n\n  if (listId) {\n    const destinationList = board.lists.find((list) => list.id === card.listId);\n\n    sourceList.cardIds.splice(destinationList, 0, card.id);\n    card.listId = destinationList.id;\n  } else {\n    sourceList.cardIds.splice(position, 0, card.id);\n  }\n\n  return [200, true];\n});\n\nmock.onPost('/api/kanban/board/cards/remove').reply((request) => {\n  const { cardId } = JSON.parse(request.data);\n\n  _.assign(board, {\n    cards: _.reject(board.cards, { id: cardId }),\n    lists: _.map(board.lists, (list) => {\n      _.assign(list, {\n        cardIds: list.cardIds.filter((_cardId) => _cardId !== cardId)\n      });\n\n      return list;\n    })\n  });\n\n  return [200, { cardId }];\n});\n\nmock.onPost('/api/kanban/board/cards/comments').reply((request) => {\n  const { userId, cardId, message } = JSON.parse(request.data);\n  const comment = {\n    id: uuidv4(),\n    cardId,\n    createdAt: moment()\n      .toDate()\n      .getTime(),\n    memberId: userId,\n    message\n  };\n\n  _.assign(board, {\n    cards: _.map(board.cards, (card) => {\n      _.assign(card, {\n        comments: [...card.comments, comment]\n      });\n\n      return card;\n    })\n  });\n\n  return [200, { comment }];\n});\n\nmock.onPost('/api/kanban/board/checklists/new').reply((request) => {\n  const { cardId, name } = JSON.parse(request.data);\n  const checklist = {\n    id: uuidv4(),\n    name,\n    checkItems: []\n  };\n\n  _.assign(board, {\n    cards: _.map(board.cards, (card) => {\n      if (card.id === cardId) {\n        _.assign(card, {\n          checklists: [...card.checklists, checklist]\n        });\n      }\n\n      return card;\n    })\n  });\n\n  return [200, { checklist }];\n});\n\nmock.onPost('/api/kanban/board/checklists/update').reply((request) => {\n  const { cardId, checklistId, update } = JSON.parse(request.data);\n  let checklist = null;\n\n  _.assign(board, {\n    cards: _.map(board.cards, (card) => {\n      if (card.id === cardId) {\n        _.map(card.checklists, (_checklist) => {\n          if (_checklist.id === checklistId) {\n            _.assign(_checklist, { ...update });\n            checklist = _checklist;\n          }\n\n          return _checklist;\n        });\n      }\n\n      return card;\n    })\n  });\n\n  return [200, { checklist }];\n});\n\nmock.onPost('/api/kanban/board/checklists/remove').reply((request) => {\n  const { cardId, checklistId } = JSON.parse(request.data);\n\n  _.assign(board, {\n    cards: _.map(board.cards, (card) => {\n      if (card.id === cardId) {\n        _.assign(card, {\n          checklists: _.reject(card.checklists, { id: checklistId }),\n        });\n      }\n\n      return card;\n    })\n  });\n\n  return [200, true];\n});\n\nmock.onPost('/api/kanban/board/checkitems/new').reply((request) => {\n  const { cardId, checklistId, name } = JSON.parse(request.data);\n  const checkItem = {\n    id: uuidv4(),\n    checklistId,\n    name,\n    status: 'incomplete'\n  };\n\n  _.assign(board, {\n    cards: _.map(board.cards, (card) => {\n      if (card.id === cardId) {\n        _.assign(card, {\n          checklists: card.checklists.map((checklist) => {\n            if (checklist.id === checklistId) {\n              _.assign(checklist, {\n                checkItems: [...checklist.checkItems, checkItem]\n              });\n            }\n\n            return checklist;\n          })\n        });\n      }\n\n      return card;\n    })\n  });\n\n  return [200, { checkItem }];\n});\n\nmock.onPost('/api/kanban/board/checkitems/update').reply((request) => {\n  const {\n    cardId,\n    checklistId,\n    checkItemId,\n    update\n  } = JSON.parse(request.data);\n  let checkItem = null;\n\n  _.assign(board, {\n    cards: _.map(board.cards, (card) => {\n      if (card.id === cardId) {\n        _.assign(card, {\n          checklists: _.map(card.checklists, (checklist) => {\n            if (checklist.id === checklistId) {\n              _.assign(checklist, {\n                checkItems: _.map(checklist.checkItems, (_checkItem) => {\n                  if (_checkItem.id === checkItemId) {\n                    _.assign(_checkItem, { ...update });\n                    checkItem = _checkItem;\n                  }\n\n                  return _checkItem;\n                })\n              });\n            }\n\n            return checklist;\n          })\n        });\n      }\n\n      return card;\n    })\n  });\n\n  return [200, { checkItem }];\n});\n\nmock.onPost('/api/kanban/board/checkitems/remove').reply((request) => {\n  const { cardId, checklistId, checkItemId } = JSON.parse(request.data);\n\n  _.assign(board, {\n    cards: _.map(board.cards, (card) => {\n      if (card.id === cardId) {\n        _.assign(card, {\n          checklists: _.map(card.checklists, (checklist) => {\n            if (checklist.id === checklistId) {\n              _.assign(checklist, {\n                checkItems: _.reject(checklist.checkItems, { id: checkItemId })\n              });\n            }\n\n            return checklist;\n          })\n        });\n      }\n\n      return card;\n    })\n  });\n\n  return [200, true];\n});\n"]},"metadata":{},"sourceType":"module"}