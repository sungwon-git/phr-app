{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/calendar/CalendarView/AddEditEventModal/AddEditEventForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport { Box, Typography, TextField, Button, IconButton, Divider, FormControlLabel, FormHelperText, Switch, SvgIcon, makeStyles } from '@material-ui/core';\nimport { DateTimePicker } from '@material-ui/pickers';\nimport { Trash as TrashIcon } from 'react-feather';\nimport wait from 'src/utils/wait';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    confirmButton: {\n      marginLeft: theme.spacing(2)\n    }\n  };\n});\n\nfunction AddEditEventForm(_ref) {\n  var _this = this;\n\n  var event = _ref.event,\n      mode = _ref.mode,\n      onAdd = _ref.onAdd,\n      onCancel = _ref.onCancel,\n      onDelete = _ref.onDelete,\n      onEdit = _ref.onEdit;\n  var classes = useStyles();\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      allDay: event.allDay || false,\n      color: event.color || '',\n      description: event.description || '',\n      end: event.end || moment(),\n      start: event.start || moment(),\n      title: event.title || ''\n    },\n    validationSchema: Yup.object().shape({\n      allDay: Yup.bool(),\n      description: Yup.string().max(5000),\n      end: Yup.date().when('start', function (start, schema) {\n        return start && schema.min(start, 'End date must be later than start date');\n      }),\n      start: Yup.date(),\n      title: Yup.string().max(255).required('Title is required')\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var resetForm, setErrors, setStatus, setSubmitting, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetForm = _ref2.resetForm, setErrors = _ref2.setErrors, setStatus = _ref2.setStatus, setSubmitting = _ref2.setSubmitting;\n                _context.prev = 1;\n                data = _objectSpread({}, values); // Make API request depending on mode type\n                // If editting an event, here should make a patch request\n                // else a post request\n\n                _context.next = 5;\n                return wait(200);\n\n              case 5:\n                // On post request server should return an ID\n                if (mode === 'add') {\n                  data.id = uuidv4();\n                } else {\n                  data.id = event.id;\n                }\n\n                resetForm();\n                setStatus({\n                  success: true\n                });\n                setSubmitting(false);\n                enqueueSnackbar('Saved changes', {\n                  variant: 'success'\n                });\n\n                if (mode === 'add') {\n                  onAdd(data);\n                } else {\n                  onEdit(data);\n                }\n\n                _context.next = 18;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](1);\n                setStatus({\n                  success: false\n                });\n                setErrors({\n                  submit: _context.t0.message\n                });\n                setSubmitting(false);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 13]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, function (_ref4) {\n    var errors = _ref4.errors,\n        handleBlur = _ref4.handleBlur,\n        handleChange = _ref4.handleChange,\n        handleSubmit = _ref4.handleSubmit,\n        isSubmitting = _ref4.isSubmitting,\n        setFieldTouched = _ref4.setFieldTouched,\n        setFieldValue = _ref4.setFieldValue,\n        touched = _ref4.touched,\n        values = _ref4.values;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      p: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      gutterBottom: true,\n      variant: \"h3\",\n      color: \"textPrimary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, mode === 'add' ? 'Add Event' : 'Edit Event')), /*#__PURE__*/React.createElement(Box, {\n      p: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.title && errors.title),\n      fullWidth: true,\n      helperText: touched.title && errors.title,\n      label: \"Title\",\n      name: \"title\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.title,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.description && errors.description),\n      fullWidth: true,\n      helperText: touched.description && errors.description,\n      label: \"Description\",\n      name: \"description\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      value: values.description,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Switch, {\n        checked: values.allDay,\n        name: \"allDay\",\n        onChange: handleChange,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      }),\n      label: \"All day\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      fullWidth: true,\n      inputVariant: \"outlined\",\n      label: \"Start date\",\n      name: \"start\",\n      onClick: function onClick() {\n        return setFieldTouched('end');\n      },\n      onChange: function onChange(date) {\n        return setFieldValue('start', date);\n      },\n      value: values.start,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      fullWidth: true,\n      inputVariant: \"outlined\",\n      label: \"End date\",\n      name: \"end\",\n      onClick: function onClick() {\n        return setFieldTouched('end');\n      },\n      onChange: function onChange(date) {\n        return setFieldValue('end', date);\n      },\n      value: values.end,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    })), Boolean(touched.end && errors.end) && /*#__PURE__*/React.createElement(Box, {\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormHelperText, {\n      error: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, errors.end))), /*#__PURE__*/React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      p: 2,\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, mode === 'edit' && /*#__PURE__*/React.createElement(IconButton, {\n      onClick: function onClick() {\n        return onDelete(event.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SvgIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TrashIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Box, {\n      flexGrow: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: onCancel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      color: \"secondary\",\n      className: classes.confirmButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, \"Confirm\")));\n  });\n}\n\nAddEditEventForm.propTypes = {\n  event: PropTypes.object,\n  mode: PropTypes.oneOf(['add', 'edit']).isRequired,\n  onAdd: PropTypes.func,\n  onCancel: PropTypes.func,\n  onDelete: PropTypes.func,\n  onEdit: PropTypes.func\n};\nAddEditEventForm.defaultProps = {\n  event: {},\n  onAdd: function onAdd() {},\n  onCancel: function onCancel() {},\n  onDelete: function onDelete() {},\n  onEdit: function onEdit() {}\n};\nexport default AddEditEventForm;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/calendar/CalendarView/AddEditEventModal/AddEditEventForm.js"],"names":["React","PropTypes","moment","v4","uuidv4","Yup","Formik","useSnackbar","Box","Typography","TextField","Button","IconButton","Divider","FormControlLabel","FormHelperText","Switch","SvgIcon","makeStyles","DateTimePicker","Trash","TrashIcon","wait","useStyles","theme","root","confirmButton","marginLeft","spacing","AddEditEventForm","event","mode","onAdd","onCancel","onDelete","onEdit","classes","enqueueSnackbar","allDay","color","description","end","start","title","object","shape","bool","string","max","date","when","schema","min","required","values","resetForm","setErrors","setStatus","setSubmitting","data","id","success","variant","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldTouched","setFieldValue","touched","Boolean","propTypes","oneOf","isRequired","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  IconButton,\n  Divider,\n  FormControlLabel,\n  FormHelperText,\n  Switch,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { DateTimePicker } from '@material-ui/pickers';\nimport { Trash as TrashIcon } from 'react-feather';\nimport wait from 'src/utils/wait';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  confirmButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction AddEditEventForm({\n  event,\n  mode,\n  onAdd,\n  onCancel,\n  onDelete,\n  onEdit\n}) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        allDay: event.allDay || false,\n        color: event.color || '',\n        description: event.description || '',\n        end: event.end || moment(),\n        start: event.start || moment(),\n        title: event.title || ''\n      }}\n      validationSchema={Yup.object().shape({\n        allDay: Yup.bool(),\n        description: Yup.string().max(5000),\n        end: Yup.date()\n          .when(\n            'start',\n            (start, schema) => (start && schema.min(start, 'End date must be later than start date')),\n          ),\n        start: Yup.date(),\n        title: Yup.string().max(255).required('Title is required')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          const data = {\n            ...values\n          };\n\n          // Make API request depending on mode type\n          // If editting an event, here should make a patch request\n          // else a post request\n          await wait(200);\n\n          // On post request server should return an ID\n          if (mode === 'add') {\n            data.id = uuidv4();\n          } else {\n            data.id = event.id;\n          }\n\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Saved changes', {\n            variant: 'success'\n          });\n\n          if (mode === 'add') {\n            onAdd(data);\n          } else {\n            onEdit(data);\n          }\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldTouched,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Box p={3}>\n            <Typography\n              align=\"center\"\n              gutterBottom\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              {mode === 'add' ? 'Add Event' : 'Edit Event'}\n            </Typography>\n          </Box>\n          <Box p={3}>\n            <TextField\n              error={Boolean(touched.title && errors.title)}\n              fullWidth\n              helperText={touched.title && errors.title}\n              label=\"Title\"\n              name=\"title\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.title}\n              variant=\"outlined\"\n            />\n            <Box mt={2}>\n              <TextField\n                error={Boolean(touched.description && errors.description)}\n                fullWidth\n                helperText={touched.description && errors.description}\n                label=\"Description\"\n                name=\"description\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.description}\n                variant=\"outlined\"\n              />\n            </Box>\n            <Box mt={2}>\n              <FormControlLabel\n                control={(\n                  <Switch\n                    checked={values.allDay}\n                    name=\"allDay\"\n                    onChange={handleChange}\n                  />\n                )}\n                label=\"All day\"\n              />\n            </Box>\n            <Box mt={2}>\n              <DateTimePicker\n                fullWidth\n                inputVariant=\"outlined\"\n                label=\"Start date\"\n                name=\"start\"\n                onClick={() => setFieldTouched('end')}\n                onChange={(date) => setFieldValue('start', date)}\n                value={values.start}\n              />\n            </Box>\n            <Box mt={2}>\n              <DateTimePicker\n                fullWidth\n                inputVariant=\"outlined\"\n                label=\"End date\"\n                name=\"end\"\n                onClick={() => setFieldTouched('end')}\n                onChange={(date) => setFieldValue('end', date)}\n                value={values.end}\n              />\n            </Box>\n            {Boolean(touched.end && errors.end) && (\n              <Box mt={2}>\n                <FormHelperText error>\n                  {errors.end}\n                </FormHelperText>\n              </Box>\n            )}\n          </Box>\n          <Divider />\n          <Box\n            p={2}\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            {mode === 'edit' && (\n              <IconButton onClick={() => onDelete(event.id)}>\n                <SvgIcon>\n                  <TrashIcon />\n                </SvgIcon>\n              </IconButton>\n            )}\n            <Box flexGrow={1} />\n            <Button onClick={onCancel}>\n              Cancel\n            </Button>\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={isSubmitting}\n              color=\"secondary\"\n              className={classes.confirmButton}\n            >\n              Confirm\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nAddEditEventForm.propTypes = {\n  event: PropTypes.object,\n  mode: PropTypes.oneOf(['add', 'edit']).isRequired,\n  onAdd: PropTypes.func,\n  onCancel: PropTypes.func,\n  onDelete: PropTypes.func,\n  onEdit: PropTypes.func\n};\n\nAddEditEventForm.defaultProps = {\n  event: {},\n  onAdd: () => {},\n  onCancel: () => {},\n  onDelete: () => {},\n  onEdit: () => {}\n};\n\nexport default AddEditEventForm;\n"]},"metadata":{},"sourceType":"module"}