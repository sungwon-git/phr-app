{"ast":null,"code":"import _toConsumableArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/projects/ProjectBrowseView/Filter/index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box, Card, Checkbox, Chip, Divider, FormControlLabel, Input, makeStyles } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MultiSelect from './MultiSelect';\nvar selectOptions = [{\n  label: 'Type',\n  options: ['Freelance', 'Full Time', 'Part Time', 'Internship']\n}, {\n  label: 'Level',\n  options: ['Novice', 'Expert']\n}, {\n  label: 'Location',\n  options: ['Africa', 'Asia', 'Australia', 'Europe', 'North America', 'South America']\n}, {\n  label: 'Roles',\n  options: ['Android', 'Web Developer', 'iOS']\n}];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    searchInput: {\n      marginLeft: theme.spacing(2)\n    },\n    chip: {\n      margin: theme.spacing(1)\n    }\n  };\n});\n\nfunction Filter(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var _useState3 = useState(['Freelance', 'Full Time', 'Novice', 'Europe', 'Android', 'Web Developer']),\n      _useState4 = _slicedToArray(_useState3, 2),\n      chips = _useState4[0],\n      setChips = _useState4[1];\n\n  var handleInputChange = function handleInputChange(event) {\n    event.persist();\n    setInputValue(event.target.value);\n  };\n\n  var handleInputKeyup = function handleInputKeyup(event) {\n    event.persist();\n\n    if (event.keyCode === 13 && inputValue) {\n      if (!chips.includes(inputValue)) {\n        setChips(function (prevChips) {\n          return [].concat(_toConsumableArray(prevChips), [inputValue]);\n        });\n        setInputValue('');\n      }\n    }\n  };\n\n  var handleChipDelete = function handleChipDelete(chip) {\n    setChips(function (prevChips) {\n      return prevChips.filter(function (prevChip) {\n        return chip !== prevChip;\n      });\n    });\n  };\n\n  var handleMultiSelectChange = function handleMultiSelectChange(value) {\n    setChips(value);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    p: 2,\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    disableUnderline: true,\n    fullWidth: true,\n    className: classes.searchInput,\n    onChange: handleInputChange,\n    onKeyUp: handleInputKeyup,\n    placeholder: \"Enter a keyword\",\n    value: inputValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    p: 2,\n    display: \"flex\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, chips.map(function (chip) {\n    return /*#__PURE__*/React.createElement(Chip, {\n      className: classes.chip,\n      key: chip,\n      label: chip,\n      onDelete: function onDelete() {\n        return handleChipDelete(chip);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    p: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, selectOptions.map(function (option) {\n    return /*#__PURE__*/React.createElement(MultiSelect, {\n      key: option.label,\n      label: option.label,\n      onChange: handleMultiSelectChange,\n      options: option.options,\n      value: chips,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.inNetwork,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      defaultChecked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }),\n    label: \"In network\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  })));\n}\n\nFilter.propTypes = {\n  className: PropTypes.string\n};\nexport default Filter;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/projects/ProjectBrowseView/Filter/index.js"],"names":["React","useState","PropTypes","clsx","Box","Card","Checkbox","Chip","Divider","FormControlLabel","Input","makeStyles","SearchIcon","MultiSelect","selectOptions","label","options","useStyles","theme","root","searchInput","marginLeft","spacing","chip","margin","Filter","className","rest","classes","inputValue","setInputValue","chips","setChips","handleInputChange","event","persist","target","value","handleInputKeyup","keyCode","includes","prevChips","handleChipDelete","filter","prevChip","handleMultiSelectChange","map","option","inNetwork","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  Checkbox,\n  Chip,\n  Divider,\n  FormControlLabel,\n  Input,\n  makeStyles\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MultiSelect from './MultiSelect';\n\nconst selectOptions = [\n  {\n    label: 'Type',\n    options: [\n      'Freelance',\n      'Full Time',\n      'Part Time',\n      'Internship']\n  },\n  {\n    label: 'Level',\n    options: ['Novice', 'Expert']\n  },\n  {\n    label: 'Location',\n    options: [\n      'Africa',\n      'Asia',\n      'Australia',\n      'Europe',\n      'North America',\n      'South America'\n    ]\n  },\n  {\n    label: 'Roles',\n    options: ['Android', 'Web Developer', 'iOS']\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  searchInput: {\n    marginLeft: theme.spacing(2)\n  },\n  chip: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction Filter({ className, ...rest }) {\n  const classes = useStyles();\n  const [inputValue, setInputValue] = useState('');\n  const [chips, setChips] = useState([\n    'Freelance',\n    'Full Time',\n    'Novice',\n    'Europe',\n    'Android',\n    'Web Developer'\n  ]);\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputValue(event.target.value);\n  };\n\n  const handleInputKeyup = (event) => {\n    event.persist();\n\n    if (event.keyCode === 13 && inputValue) {\n      if (!chips.includes(inputValue)) {\n        setChips((prevChips) => [...prevChips, inputValue]);\n        setInputValue('');\n      }\n    }\n  };\n\n  const handleChipDelete = (chip) => {\n    setChips((prevChips) => prevChips.filter((prevChip) => chip !== prevChip));\n  };\n\n  const handleMultiSelectChange = (value) => {\n    setChips(value);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        p={2}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <SearchIcon />\n        <Input\n          disableUnderline\n          fullWidth\n          className={classes.searchInput}\n          onChange={handleInputChange}\n          onKeyUp={handleInputKeyup}\n          placeholder=\"Enter a keyword\"\n          value={inputValue}\n        />\n      </Box>\n      <Divider />\n      <Box\n        p={2}\n        display=\"flex\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n      >\n        {chips.map((chip) => (\n          <Chip\n            className={classes.chip}\n            key={chip}\n            label={chip}\n            onDelete={() => handleChipDelete(chip)}\n          />\n        ))}\n      </Box>\n      <Divider />\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n        p={1}\n      >\n        {selectOptions.map((option) => (\n          <MultiSelect\n            key={option.label}\n            label={option.label}\n            onChange={handleMultiSelectChange}\n            options={option.options}\n            value={chips}\n          />\n        ))}\n        <Box flexGrow={1} />\n        <FormControlLabel\n          className={classes.inNetwork}\n          control={(\n            <Checkbox defaultChecked />\n          )}\n          label=\"In network\"\n        />\n      </Box>\n    </Card>\n  );\n}\n\nFilter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}