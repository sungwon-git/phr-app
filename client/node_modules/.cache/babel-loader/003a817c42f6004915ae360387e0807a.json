{"ast":null,"code":"import _slicedToArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/projects/OverviewView/Projects.js\";\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box, Button, Typography, makeStyles } from '@material-ui/core';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport ProjectCard from 'src/components/ProjectCard';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    title: {\n      position: 'relative',\n      '&:before': {\n        position: 'absolute',\n        bottom: -8,\n        left: 0,\n        content: '\" \"',\n        height: 3,\n        width: 48,\n        backgroundColor: theme.palette.primary.main\n      }\n    },\n    arrowIcon: {\n      marginLeft: theme.spacing(1)\n    }\n  };\n});\n\nfunction Projects(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var isMountedRef = useIsMountedRef();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      projects = _useState2[0],\n      setProjects = _useState2[1];\n\n  var getProjects = useCallback(function () {\n    axios.get('/api/projects/account/projects').then(function (response) {\n      if (isMountedRef.current) {\n        setProjects(response.data.projects);\n      }\n    });\n  }, [isMountedRef]);\n  useEffect(function () {\n    getProjects();\n  }, [getProjects]);\n\n  if (!projects) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    mb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h5\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Active Projects\"), /*#__PURE__*/React.createElement(Button, {\n    component: RouterLink,\n    to: \"/app/projects/browse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"See all\", /*#__PURE__*/React.createElement(KeyboardArrowRightIcon, {\n    className: classes.arrowIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }))), projects.map(function (project) {\n    return /*#__PURE__*/React.createElement(Box, {\n      mb: 2,\n      key: project.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ProjectCard, {\n      project: project,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }));\n  }));\n}\n\nProjects.propTypes = {\n  className: PropTypes.string\n};\nexport default Projects;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/projects/OverviewView/Projects.js"],"names":["React","useCallback","useState","useEffect","Link","RouterLink","PropTypes","clsx","Box","Button","Typography","makeStyles","KeyboardArrowRightIcon","axios","useIsMountedRef","ProjectCard","useStyles","theme","root","title","position","bottom","left","content","height","width","backgroundColor","palette","primary","main","arrowIcon","marginLeft","spacing","Projects","className","rest","classes","isMountedRef","projects","setProjects","getProjects","get","then","response","current","data","map","project","id","propTypes","string"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport ProjectCard from 'src/components/ProjectCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  title: {\n    position: 'relative',\n    '&:before': {\n      position: 'absolute',\n      bottom: -8,\n      left: 0,\n      content: '\" \"',\n      height: 3,\n      width: 48,\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  arrowIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction Projects({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState(null);\n\n  const getProjects = useCallback(() => {\n    axios\n      .get('/api/projects/account/projects')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setProjects(response.data.projects);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProjects();\n  }, [getProjects]);\n\n  if (!projects) {\n    return null;\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        mb={2}\n      >\n        <Typography\n          className={classes.title}\n          variant=\"h5\"\n          color=\"textPrimary\"\n        >\n          Active Projects\n        </Typography>\n        <Button\n          component={RouterLink}\n          to=\"/app/projects/browse\"\n        >\n          See all\n          <KeyboardArrowRightIcon className={classes.arrowIcon} />\n        </Button>\n      </Box>\n      {projects.map((project) => (\n        <Box\n          mb={2}\n          key={project.id}\n        >\n          <ProjectCard\n            project={project}\n          />\n        </Box>\n      ))}\n    </div>\n  );\n}\n\nProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}