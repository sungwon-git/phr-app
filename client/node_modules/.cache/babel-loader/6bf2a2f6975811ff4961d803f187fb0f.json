{"ast":null,"code":"import _objectWithoutProperties from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/views/projects/ProjectDetailsView/Overview/Holder.js\";\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Avatar, Card, CardContent, CardHeader, Link, List, ListItem, Typography, makeStyles } from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    header: {\n      paddingBottom: 0\n    },\n    content: {\n      paddingTop: 0\n    },\n    listItem: {\n      padding: theme.spacing(2, 0),\n      justifyContent: 'space-between'\n    }\n  };\n});\n\nfunction Holder(_ref) {\n  var project = _ref.project,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"project\", \"className\"]);\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"Author\",\n      className: classes.avatar,\n      component: RouterLink,\n      src: project.author.avatar,\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, getInitials(project.author.name)),\n    className: classes.header,\n    disableTypography: true,\n    subheader: /*#__PURE__*/React.createElement(Link, {\n      color: \"textPrimary\",\n      component: RouterLink,\n      to: \"#\",\n      underline: \"none\",\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, project.author.name),\n    title: /*#__PURE__*/React.createElement(Typography, {\n      display: \"block\",\n      variant: \"overline\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Contest holder\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    disableGutters: true,\n    divider: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Deadline\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, moment(project.deadline).format('DD MMM YYYY'))), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    disableGutters: true,\n    divider: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Per Project\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, project.price, ' ', project.currency)), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    disableGutters: true,\n    divider: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Last Update\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, moment(project.updatedAt).format('DD MMM YYYY'))))));\n}\n\nHolder.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\nexport default Holder;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/views/projects/ProjectDetailsView/Overview/Holder.js"],"names":["React","Link","RouterLink","PropTypes","clsx","moment","Avatar","Card","CardContent","CardHeader","List","ListItem","Typography","makeStyles","getInitials","useStyles","theme","root","header","paddingBottom","content","paddingTop","listItem","padding","spacing","justifyContent","Holder","project","className","rest","classes","avatar","author","name","deadline","format","price","currency","updatedAt","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  Link,\n  List,\n  ListItem,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  header: {\n    paddingBottom: 0\n  },\n  content: {\n    paddingTop: 0\n  },\n  listItem: {\n    padding: theme.spacing(2, 0),\n    justifyContent: 'space-between'\n  }\n}));\n\nfunction Holder({ project, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        avatar={(\n          <Avatar\n            alt=\"Author\"\n            className={classes.avatar}\n            component={RouterLink}\n            src={project.author.avatar}\n            to=\"#\"\n          >\n            {getInitials(project.author.name)}\n          </Avatar>\n        )}\n        className={classes.header}\n        disableTypography\n        subheader={(\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            underline=\"none\"\n            variant=\"h6\"\n          >\n            {project.author.name}\n          </Link>\n        )}\n        title={(\n          <Typography\n            display=\"block\"\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Contest holder\n          </Typography>\n        )}\n      />\n      <CardContent className={classes.content}>\n        <List>\n          <ListItem\n            className={classes.listItem}\n            disableGutters\n            divider\n          >\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textPrimary\"\n            >\n              Deadline\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"textSecondary\"\n            >\n              {moment(project.deadline).format('DD MMM YYYY')}\n            </Typography>\n          </ListItem>\n          <ListItem\n            className={classes.listItem}\n            disableGutters\n            divider\n          >\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textPrimary\"\n            >\n              Per Project\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"textSecondary\"\n            >\n              {project.price}\n              {' '}\n              {project.currency}\n            </Typography>\n          </ListItem>\n          <ListItem\n            className={classes.listItem}\n            disableGutters\n            divider\n          >\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textPrimary\"\n            >\n              Last Update\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"textSecondary\"\n            >\n              {moment(project.updatedAt).format('DD MMM YYYY')}\n            </Typography>\n          </ListItem>\n        </List>\n      </CardContent>\n    </Card>\n  );\n}\n\nHolder.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default Holder;\n"]},"metadata":{},"sourceType":"module"}