{"ast":null,"code":"import _slicedToArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sungwonjung/dev/nodejs/phr/client/src/components/SettingsNotification.js\";\nimport React, { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { Box, Button, Paper, Portal, Typography, makeStyles } from '@material-ui/core';\nimport useSettings from 'src/hooks/useSettings';\nimport { THEMES } from 'src/constants';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      maxWidth: 420,\n      position: 'fixed',\n      top: 0,\n      right: 0,\n      margin: theme.spacing(3),\n      outline: 'none',\n      zIndex: 2000,\n      padding: theme.spacing(2)\n    }\n  };\n});\n\nfunction SettingsNotification() {\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useSettings = useSettings(),\n      saveSettings = _useSettings.saveSettings;\n\n  var handleSwitch = function handleSwitch() {\n    saveSettings({\n      theme: THEMES.LIGHT\n    });\n    Cookies.set('settingsUpdated', 'true');\n    setOpen(false);\n  };\n\n  var handleClose = function handleClose() {\n    Cookies.set('settingsUpdated', 'true');\n    setOpen(false);\n  };\n\n  useEffect(function () {\n    var settingsUpdated = Cookies.get('settingsUpdated');\n\n    if (!settingsUpdated) {\n      setOpen(true);\n    }\n  }, []);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Portal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    color: \"textPrimary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Settings Updated\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"We automatically updated your settings. You change the settings any time from your dashboard settings.\"), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    onClick: handleSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Switch\"))));\n}\n\nexport default SettingsNotification;","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/components/SettingsNotification.js"],"names":["React","useState","useEffect","Cookies","Box","Button","Paper","Portal","Typography","makeStyles","useSettings","THEMES","useStyles","theme","root","maxWidth","position","top","right","margin","spacing","outline","zIndex","padding","SettingsNotification","classes","isOpen","setOpen","saveSettings","handleSwitch","LIGHT","set","handleClose","settingsUpdated","get"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect\n} from 'react';\nimport Cookies from 'js-cookie';\nimport {\n  Box,\n  Button,\n  Paper,\n  Portal,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport useSettings from 'src/hooks/useSettings';\nimport { THEMES } from 'src/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 420,\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    margin: theme.spacing(3),\n    outline: 'none',\n    zIndex: 2000,\n    padding: theme.spacing(2)\n  }\n}));\n\nfunction SettingsNotification() {\n  const classes = useStyles();\n  const [isOpen, setOpen] = useState(false);\n  const { saveSettings } = useSettings();\n\n  const handleSwitch = () => {\n    saveSettings({ theme: THEMES.LIGHT });\n    Cookies.set('settingsUpdated', 'true');\n    setOpen(false);\n  };\n\n  const handleClose = () => {\n    Cookies.set('settingsUpdated', 'true');\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    const settingsUpdated = Cookies.get('settingsUpdated');\n\n    if (!settingsUpdated) {\n      setOpen(true);\n    }\n  }, []);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <Portal>\n      <Paper\n        className={classes.root}\n        elevation={3}\n      >\n        <Typography\n          variant=\"h4\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          Settings Updated\n        </Typography>\n        <Typography\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          We automatically updated your settings.\n          You change the settings any time from your dashboard settings.\n        </Typography>\n        <Box\n          mt={2}\n          display=\"flex\"\n          justifyContent=\"space-between\"\n        >\n          <Button onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={handleSwitch}\n          >\n            Switch\n          </Button>\n        </Box>\n      </Paper>\n    </Portal>\n  );\n}\n\nexport default SettingsNotification;\n"]},"metadata":{},"sourceType":"module"}