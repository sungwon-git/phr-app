{"ast":null,"code":"import _toConsumableArray from \"/Users/sungwonjung/dev/nodejs/phr/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport mock from 'src/utils/mock';\nimport _ from 'lodash';\nvar db = {\n  contacts: [{\n    id: '5e8891ab188cd2855e6029b7',\n    avatar: '/static/images/avatars/avatar_1.png',\n    isActive: true,\n    lastActivity: moment().toDate().getTime(),\n    name: 'Cooper Murray',\n    username: 'cooper.murray'\n  }, {\n    id: '5e887a62195cc5aef7e8ca5d',\n    avatar: '/static/images/avatars/avatar_2.png',\n    isActive: false,\n    lastActivity: moment().subtract(2, 'hours').toDate().getTime(),\n    name: 'Ekaterina Tankova',\n    username: 'ekaterina.tankova'\n  }, {\n    id: '5e887ac47eed253091be10cb',\n    avatar: '/static/images/avatars/avatar_3.png',\n    isActive: false,\n    lastActivity: moment().subtract(15, 'minutes').toDate().getTime(),\n    name: 'Cao Yu',\n    username: 'cao.yu'\n  }, {\n    id: '5e887b209c28ac3dd97f6db5',\n    avatar: '/static/images/avatars/avatar_4.png',\n    isActive: true,\n    lastActivity: moment().toDate().getTime(),\n    name: 'Alex Richardson',\n    username: 'alex.richardson'\n  }, {\n    id: '5e887b7602bdbc4dbb234b27',\n    avatar: '/static/images/avatars/avatar_5.png',\n    isActive: true,\n    lastActivity: moment().toDate().getTime(),\n    name: 'Anje Keizer',\n    username: 'anje.keizer'\n  }, {\n    id: '5e86805e2bafd54f66cc95c3',\n    avatar: '/static/images/avatars/avatar_7.png',\n    isActive: false,\n    lastActivity: moment().subtract(2, 'days').toDate().getTime(),\n    name: 'Adam Denisov',\n    username: 'adam.denisov'\n  }, {\n    id: '5e887a1fbefd7938eea9c981',\n    avatar: '/static/images/avatars/avatar_8.png',\n    isActive: false,\n    lastActivity: moment().subtract(6, 'hours').toDate().getTime(),\n    name: 'Miller Edwards',\n    username: 'miller.edwards'\n  }, {\n    id: '5e887d0b3d090c1b8f162003',\n    avatar: '/static/images/avatars/avatar_9.png',\n    isActive: true,\n    lastActivity: moment().toDate().getTime(),\n    name: 'Emilee Simchenko',\n    username: 'emilee.simchenko'\n  }, {\n    id: '5e88792be2d4cfb4bf0971d9',\n    avatar: '/static/images/avatars/avatar_10.png',\n    isActive: true,\n    lastActivity: moment().toDate().getTime(),\n    name: 'Elliott Stone',\n    username: 'elliott.stone'\n  }, {\n    id: '5e8877da9a65442b11551975',\n    avatar: '/static/images/avatars/avatar_11.png',\n    isActive: true,\n    lastActivity: moment().toDate().getTime(),\n    name: 'Shen Zhi',\n    username: 'shen.zhi'\n  }, {\n    id: '5e8680e60cba5019c5ca6fda',\n    avatar: '/static/images/avatars/avatar_12.png',\n    isActive: true,\n    lastActivity: moment().toDate().getTime(),\n    name: 'Merrile Burgett',\n    username: 'merrile.burgett'\n  }],\n  threads: [{\n    id: '5e867eb9de721aecaccf4f7b',\n    key: 'adam.denisov',\n    type: 'ONE_TO_ONE',\n    messages: [{\n      id: '5e867f0a5bc0ff2bfa07bfa6',\n      body: 'Hey, nice projects! I really liked the one in react. What\\'s your quote on kinda similar project?',\n      contentType: 'text',\n      createdAt: moment().subtract(10, 'hours').toDate().getTime(),\n      senderId: '5e86805e2bafd54f66cc95c3'\n    }, {\n      id: '5e867f167d5f78109ae9f2a4',\n      body: 'I would need to know more details, but my hourly rate stats at $35/hour. Thanks!',\n      contentType: 'text',\n      createdAt: moment().subtract(2, 'hours').toDate().getTime(),\n      senderId: '5e86809283e28b96d2d38537'\n    }, {\n      id: '5e867f1c9ca72084693528f4',\n      body: 'Well it\\'s a really easy one, I\\'m sure we can make it half of the price.',\n      contentType: 'text',\n      createdAt: moment().subtract(5, 'minutes').toDate().getTime(),\n      senderId: '5e86809283e28b96d2d38537'\n    }, {\n      id: '5e867f22fd2e27a09849b4db',\n      body: 'Then why don\\'t you make it if it\\'s that easy? Sorry I\\'m not interetes, have fantastic day Adam!',\n      contentType: 'text',\n      createdAt: moment().subtract(3, 'minutes').toDate().getTime(),\n      senderId: '5e86805e2bafd54f66cc95c3'\n    }, {\n      id: '5e867f28a34d45ac6eb5c41f',\n      body: 'Last offer, $25 per hour',\n      contentType: 'text',\n      createdAt: moment().subtract(1, 'minute').toDate().getTime(),\n      senderId: '5e86805e2bafd54f66cc95c3'\n    }, {\n      id: '5e867f2dba984a3f78b33526',\n      body: '/static/images/projects/project_4.png',\n      contentType: 'image',\n      createdAt: moment().subtract(1, 'minute').toDate().getTime(),\n      senderId: '5e86805e2bafd54f66cc95c3'\n    }],\n    participantIds: ['5e86805e2bafd54f66cc95c3', '5e86809283e28b96d2d38537'],\n    unreadCount: 2\n  }, {\n    id: '5e867fa7082c3c5921403a26',\n    key: 'merrile.burgett',\n    type: 'ONE_TO_ONE',\n    messages: [{\n      id: '5e867fc180837d901bd9bca1',\n      body: 'Hey, would you like to collaborate?',\n      contentType: 'text',\n      createdAt: moment().subtract(6, 'minutes').toDate().getTime(),\n      senderId: '5e8680e60cba5019c5ca6fda'\n    }, {\n      id: '5e8d6fb695df7971237fc173',\n      body: 'I don\\'t think that\\'s ideal',\n      contentType: 'text',\n      createdAt: moment().subtract(5, 'minutes').toDate().getTime(),\n      senderId: '5e86809283e28b96d2d38537'\n    }],\n    participantIds: ['5e8680e60cba5019c5ca6fda', '5e86809283e28b96d2d38537'],\n    unreadCount: 0\n  }]\n};\nmock.onGet('/api/chat/contacts').reply(200, {\n  contacts: db.contacts\n});\nmock.onGet('/api/chat/threads').reply(200, {\n  threads: db.threads\n});\nmock.onGet('/api/chat/thread').reply(function (config) {\n  var threadKey = config.params.threadKey;\n  var thread = db.threads.find(function (_thread) {\n    return _thread.key === threadKey;\n  });\n\n  if (!thread) {\n    return [200, {\n      thread: null\n    }];\n  }\n\n  return [200, {\n    thread: thread\n  }];\n});\nmock.onGet('/api/chat/thread/mark-as-seen').reply(function (config) {\n  var threadKey = config.params.threadKey;\n  var thread = db.threads.find(function (_thread) {\n    return _thread.key === threadKey;\n  });\n\n  if (thread) {\n    thread.unreadCount = 0;\n  }\n\n  return [200, true];\n});\nmock.onPost('/api/chat/messages/new').reply(function (request) {\n  var _JSON$parse = JSON.parse(request.data),\n      userId = _JSON$parse.userId,\n      threadKey = _JSON$parse.threadKey,\n      body = _JSON$parse.body;\n\n  var message = {\n    id: uuidv4(),\n    body: body,\n    contentType: 'text',\n    createdAt: moment().toDate().getTime(),\n    senderId: userId\n  };\n  var thread = db.threads.find(function (_thread) {\n    return _thread.key === threadKey;\n  });\n  var otherUser = db.contacts.find(function (contact) {\n    return contact.username === threadKey;\n  });\n\n  if (!thread) {\n    thread = {\n      id: uuidv4(),\n      key: threadKey,\n      type: 'ONE_TO_ONE',\n      messages: [message],\n      participantIds: [otherUser.id, userId],\n      unreadCount: 0\n    };\n\n    _.assign(db, {\n      threads: [].concat(_toConsumableArray(db.threads), [thread])\n    });\n  } else {\n    _.assign(thread, {\n      messages: [].concat(_toConsumableArray(thread.messages), [message])\n    });\n  }\n\n  return [200, {\n    threadKey: threadKey,\n    otherUserId: otherUser.id,\n    message: message\n  }];\n});","map":{"version":3,"sources":["/Users/sungwonjung/dev/nodejs/phr/client/src/mock/chatMock.js"],"names":["moment","v4","uuidv4","mock","_","db","contacts","id","avatar","isActive","lastActivity","toDate","getTime","name","username","subtract","threads","key","type","messages","body","contentType","createdAt","senderId","participantIds","unreadCount","onGet","reply","config","threadKey","params","thread","find","_thread","onPost","request","JSON","parse","data","userId","message","otherUser","contact","assign","otherUserId"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport mock from 'src/utils/mock';\nimport _ from 'lodash';\n\nconst db = {\n  contacts: [\n    {\n      id: '5e8891ab188cd2855e6029b7',\n      avatar: '/static/images/avatars/avatar_1.png',\n      isActive: true,\n      lastActivity: moment()\n        .toDate()\n        .getTime(),\n      name: 'Cooper Murray',\n      username: 'cooper.murray'\n    },\n    {\n      id: '5e887a62195cc5aef7e8ca5d',\n      avatar: '/static/images/avatars/avatar_2.png',\n      isActive: false,\n      lastActivity: moment()\n        .subtract(2, 'hours')\n        .toDate()\n        .getTime(),\n      name: 'Ekaterina Tankova',\n      username: 'ekaterina.tankova'\n    },\n    {\n      id: '5e887ac47eed253091be10cb',\n      avatar: '/static/images/avatars/avatar_3.png',\n      isActive: false,\n      lastActivity: moment()\n        .subtract(15, 'minutes')\n        .toDate()\n        .getTime(),\n      name: 'Cao Yu',\n      username: 'cao.yu'\n    },\n    {\n      id: '5e887b209c28ac3dd97f6db5',\n      avatar: '/static/images/avatars/avatar_4.png',\n      isActive: true,\n      lastActivity: moment()\n        .toDate()\n        .getTime(),\n      name: 'Alex Richardson',\n      username: 'alex.richardson'\n    },\n    {\n      id: '5e887b7602bdbc4dbb234b27',\n      avatar: '/static/images/avatars/avatar_5.png',\n      isActive: true,\n      lastActivity: moment()\n        .toDate()\n        .getTime(),\n      name: 'Anje Keizer',\n      username: 'anje.keizer'\n    },\n    {\n      id: '5e86805e2bafd54f66cc95c3',\n      avatar: '/static/images/avatars/avatar_7.png',\n      isActive: false,\n      lastActivity: moment()\n        .subtract(2, 'days')\n        .toDate()\n        .getTime(),\n      name: 'Adam Denisov',\n      username: 'adam.denisov'\n    },\n    {\n      id: '5e887a1fbefd7938eea9c981',\n      avatar: '/static/images/avatars/avatar_8.png',\n      isActive: false,\n      lastActivity: moment()\n        .subtract(6, 'hours')\n        .toDate()\n        .getTime(),\n      name: 'Miller Edwards',\n      username: 'miller.edwards'\n    },\n    {\n      id: '5e887d0b3d090c1b8f162003',\n      avatar: '/static/images/avatars/avatar_9.png',\n      isActive: true,\n      lastActivity: moment()\n        .toDate()\n        .getTime(),\n      name: 'Emilee Simchenko',\n      username: 'emilee.simchenko',\n    },\n    {\n      id: '5e88792be2d4cfb4bf0971d9',\n      avatar: '/static/images/avatars/avatar_10.png',\n      isActive: true,\n      lastActivity: moment()\n        .toDate()\n        .getTime(),\n      name: 'Elliott Stone',\n      username: 'elliott.stone'\n    },\n    {\n      id: '5e8877da9a65442b11551975',\n      avatar: '/static/images/avatars/avatar_11.png',\n      isActive: true,\n      lastActivity: moment()\n        .toDate()\n        .getTime(),\n      name: 'Shen Zhi',\n      username: 'shen.zhi'\n    },\n    {\n      id: '5e8680e60cba5019c5ca6fda',\n      avatar: '/static/images/avatars/avatar_12.png',\n      isActive: true,\n      lastActivity: moment()\n        .toDate()\n        .getTime(),\n      name: 'Merrile Burgett',\n      username: 'merrile.burgett'\n    }\n  ],\n  threads: [\n    {\n      id: '5e867eb9de721aecaccf4f7b',\n      key: 'adam.denisov',\n      type: 'ONE_TO_ONE',\n      messages: [\n        {\n          id: '5e867f0a5bc0ff2bfa07bfa6',\n          body: 'Hey, nice projects! I really liked the one in react. What\\'s your quote on kinda similar project?',\n          contentType: 'text',\n          createdAt: moment()\n            .subtract(10, 'hours')\n            .toDate()\n            .getTime(),\n          senderId: '5e86805e2bafd54f66cc95c3'\n        },\n        {\n          id: '5e867f167d5f78109ae9f2a4',\n          body: 'I would need to know more details, but my hourly rate stats at $35/hour. Thanks!',\n          contentType: 'text',\n          createdAt: moment()\n            .subtract(2, 'hours')\n            .toDate()\n            .getTime(),\n          senderId: '5e86809283e28b96d2d38537'\n        },\n        {\n          id: '5e867f1c9ca72084693528f4',\n          body: 'Well it\\'s a really easy one, I\\'m sure we can make it half of the price.',\n          contentType: 'text',\n          createdAt: moment()\n            .subtract(5, 'minutes')\n            .toDate()\n            .getTime(),\n          senderId: '5e86809283e28b96d2d38537'\n        },\n        {\n          id: '5e867f22fd2e27a09849b4db',\n          body: 'Then why don\\'t you make it if it\\'s that easy? Sorry I\\'m not interetes, have fantastic day Adam!',\n          contentType: 'text',\n          createdAt: moment()\n            .subtract(3, 'minutes')\n            .toDate()\n            .getTime(),\n          senderId: '5e86805e2bafd54f66cc95c3'\n        },\n        {\n          id: '5e867f28a34d45ac6eb5c41f',\n          body: 'Last offer, $25 per hour',\n          contentType: 'text',\n          createdAt: moment()\n            .subtract(1, 'minute')\n            .toDate()\n            .getTime(),\n          senderId: '5e86805e2bafd54f66cc95c3'\n        },\n        {\n          id: '5e867f2dba984a3f78b33526',\n          body: '/static/images/projects/project_4.png',\n          contentType: 'image',\n          createdAt: moment()\n            .subtract(1, 'minute')\n            .toDate()\n            .getTime(),\n          senderId: '5e86805e2bafd54f66cc95c3'\n        },\n      ],\n      participantIds: [\n        '5e86805e2bafd54f66cc95c3',\n        '5e86809283e28b96d2d38537'\n      ],\n      unreadCount: 2\n    },\n    {\n      id: '5e867fa7082c3c5921403a26',\n      key: 'merrile.burgett',\n      type: 'ONE_TO_ONE',\n      messages: [\n        {\n          id: '5e867fc180837d901bd9bca1',\n          body: 'Hey, would you like to collaborate?',\n          contentType: 'text',\n          createdAt: moment()\n            .subtract(6, 'minutes')\n            .toDate()\n            .getTime(),\n          senderId: '5e8680e60cba5019c5ca6fda'\n        },\n        {\n          id: '5e8d6fb695df7971237fc173',\n          body: 'I don\\'t think that\\'s ideal',\n          contentType: 'text',\n          createdAt: moment()\n            .subtract(5, 'minutes')\n            .toDate()\n            .getTime(),\n          senderId: '5e86809283e28b96d2d38537'\n        }\n      ],\n      participantIds: [\n        '5e8680e60cba5019c5ca6fda',\n        '5e86809283e28b96d2d38537'\n      ],\n      unreadCount: 0\n    }\n  ]\n};\n\nmock.onGet('/api/chat/contacts').reply(200, {\n  contacts: db.contacts\n});\n\nmock.onGet('/api/chat/threads').reply(200, {\n  threads: db.threads\n});\n\nmock.onGet('/api/chat/thread').reply((config) => {\n  const { threadKey } = config.params;\n  const thread = db.threads.find((_thread) => _thread.key === threadKey);\n\n  if (!thread) {\n    return [200, { thread: null }];\n  }\n\n  return [200, { thread }];\n});\n\nmock.onGet('/api/chat/thread/mark-as-seen').reply((config) => {\n  const { threadKey } = config.params;\n  const thread = db.threads.find((_thread) => _thread.key === threadKey);\n\n  if (thread) {\n    thread.unreadCount = 0;\n  }\n\n  return [200, true];\n});\n\nmock.onPost('/api/chat/messages/new').reply((request) => {\n  const { userId, threadKey, body } = JSON.parse(request.data);\n  const message = {\n    id: uuidv4(),\n    body,\n    contentType: 'text',\n    createdAt: moment()\n      .toDate()\n      .getTime(),\n    senderId: userId\n  };\n\n  let thread = db.threads.find((_thread) => _thread.key === threadKey);\n  const otherUser = db.contacts.find((contact) => contact.username === threadKey);\n\n  if (!thread) {\n    thread = {\n      id: uuidv4(),\n      key: threadKey,\n      type: 'ONE_TO_ONE',\n      messages: [message],\n      participantIds: [\n        otherUser.id,\n        userId\n      ],\n      unreadCount: 0\n    };\n\n    _.assign(db, {\n      threads: [...db.threads, thread]\n    });\n  } else {\n    _.assign(thread, {\n      messages: [...thread.messages, message]\n    });\n  }\n\n  return [200, {\n    threadKey,\n    otherUserId: otherUser.id,\n    message\n  }];\n});\n"]},"metadata":{},"sourceType":"module"}